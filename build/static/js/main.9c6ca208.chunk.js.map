{"version":3,"sources":["assets/isotipoAmbiensa.png","config/API.js","store/Initializer.js","utils/security.js","utils/API/auth.js","utils/session.js","assets/logo2.jpg","utils/API/roles.js","utils/API/usuarios.js","components/Drawer2.js","components/AppBar.js","assets/login.png","assets/register.png","containers/main/Register.js","containers/main/Iniciar.js","containers/main/Login.js","utils/table.js","utils/API/sistemas.js","containers/panel/components/Crear.js","containers/panel/components/Eliminar.js","utils/API/clientes.js","containers/panel/components/Bar.js","containers/panel/components/BarVertical.js","containers/panel/components/PieChart.js","utils/Date.js","utils/API/evaluaciones.js","utils/API/metricas.js","utils/API/facturas.js","assets/noValue.svg","utils/API/dashboard.js","containers/panel/components/FiltroPanel.js","utils/API/reporte.js","utils/API/cajas.js","containers/panel/Panel.js","components/Confirmar.js","utils/API/pedidos.js","utils/API/proveedores.js","utils/API/categories.js","utils/API/bodegas.js","utils/API/unidades.js","containers/Inventario/Productos/componentes/Crear.js","containers/Inventario/Proveedores/componentes/Crear.js","containers/Inventario/Pedidos/componentes/Crear.js","containers/Inventario/Pedidos/componentes/EstadoOrden.js","containers/Inventario/Pedidos/componentes/Asignar.js","containers/Inventario/Pedidos/componentes/Eliminar.js","containers/Inventario/Pedidos/Index.js","containers/Inventario/Productos/componentes/Eliminar.js","containers/Inventario/Productos/componentes/Filtro.js","containers/Inventario/Productos/Index.js","utils/API/zones.js","containers/Inventario/Bodegas/componentes/Crear.js","containers/Inventario/Bodegas/componentes/Eliminar.js","containers/Inventario/Bodegas/componentes/Filtro.js","containers/Inventario/Bodegas/Index.js","containers/Inventario/Proveedores/componentes/Eliminar.js","containers/Inventario/Proveedores/componentes/Filtro.js","containers/Inventario/Proveedores/Index.js","containers/Inventario/Inventario/componentes/Crear.js","containers/Inventario/Inventario/componentes/Eliminar.js","containers/Inventario/Inventario/componentes/Filtro.js","containers/Inventario/Inventario/Index.js","utils/API/transferencias.js","containers/Inventario/Transferencias/componentes/Crear.js","containers/Inventario/Transferencias/componentes/Eliminar.js","containers/Inventario/Transferencias/componentes/Filtro.js","containers/Inventario/Transferencias/Index.js","utils/API/ajustes.js","utils/API/razones.js","containers/Inventario/Ajustes/componentes/Crear.js","containers/Inventario/Ajustes/componentes/Eliminar.js","containers/Inventario/Ajustes/componentes/Filtro.js","containers/Inventario/Ajustes/Index.js","containers/Inventario/Clientes/componentes/Crear.js","containers/Inventario/Facturas/componentes/Cambio.js","containers/Inventario/Facturas/componentes/Crear.js","containers/Inventario/Facturas/componentes/Eliminar.js","containers/Inventario/Facturas/componentes/AbrirCaja.js","containers/Inventario/Facturas/componentes/Filtro.js","containers/Inventario/Facturas/Index.js","containers/Inventario/Clientes/componentes/Eliminar.js","containers/Inventario/Clientes/componentes/Filtro.js","containers/Inventario/Clientes/Index.js","containers/Inventario/Personal/componentes/Crear.js","containers/Inventario/Personal/componentes/Eliminar.js","containers/Inventario/Personal/componentes/Filtro.js","containers/Inventario/Personal/Index.js","utils/API/kardex.js","containers/Inventario/Kardex/Index.js","containers/Inventario/Reporte/componentes/Crear.js","containers/Inventario/Reporte/componentes/Eliminar.js","containers/Inventario/Reporte/componentes/Filtro.js","containers/Inventario/Reporte/Index.js","containers/Inventario/Roles/componentes/Crear.js","containers/Inventario/Roles/componentes/Eliminar.js","containers/Inventario/Roles/componentes/Filtro.js","containers/Inventario/Roles/Index.js","containers/Inventario/Cajas/componentes/Cerrar.js","containers/Inventario/Cajas/componentes/VerDesglose.js","containers/Inventario/Cajas/Index.js","utils/API/ciudades.js","containers/Inventario/Zonas/componentes/Crear.js","containers/Inventario/Zonas/componentes/Eliminar.js","containers/Inventario/Zonas/componentes/Filtro.js","containers/Inventario/Zonas/Index.js","App.js","reportWebVitals.js","store/actions/Actions.js","store/reducer/Reducer.js","store/Propager.js","store/Store.js","index.js"],"names":["ENTRYPOINT","PUBLIC_PATH","GlobalContext","createContext","CryptoJS","require","key_code","desencriptarJson","encriptarDatos","AES","decrypt","toString","enc","Utf8","axios","iniciarSesion","email","password","store","history","cargarUsuario","mostrarNotificacion","playSound","mostrarLoader","raw","setting","method","url","data","body","headers","then","res","response","type","user","token","encrypt","JSON","stringify","localStorage","setItem","guardarSession","message","window","location","href","catch","error","cerrarSesion","usuario","logout","parse","removeItem","obtenerTodos","setData","Authorization","roles","editar","id","limpiar","params","Accept","eliminar","carga","registrar","useStyles","makeStyles","theme","inputRoot","color","inputInput","padding","spacing","paddingLeft","transition","transitions","create","width","breakpoints","up","search","height","borderWidth","borderStyle","borderColor","position","borderRadius","backgroundColor","alpha","palette","common","white","marginRight","marginLeft","searchIcon","pointerEvents","display","alignItems","justifyContent","margin","mixins","toolbar","flexGrow","ResponsiveDrawer","props","useHistory","useLocation","classes","useTheme","React","useState","openCollapse","setOpenCollapse","openCollapse2","setOpenCollapse2","useMediaQuery","down","mobileOpen","setMobileOpen","info","setInfo","names","setNames","permisos","setPermisos","rol","setRol","initializer","useContext","Initializer","useEffect","obtenerUsuario","role","obtenerRol","obtenerPermisosAuth","last_names","handleDrawerToggle","comprobador","val","pathname","drawer","style","flexDirection","Avatar","size","className","avatar","src","logo","Typography","variant","fontSize","whiteSpace","overflow","textAlign","textOverflow","Divider","List","ListItem","button","onClick","push","ListItemIcon","ListItemText","primary","includes","Collapse","in","timeout","unmountOnExit","component","disablePadding","nested","container","undefined","document","console","log","root","CssBaseline","Fragment","appBar","elevation","border","Toolbar","IconButton","edge","InputBase","placeholder","input","inputProps","grow","marginTop","marginBottom","Hidden","implementation","Drawer","anchor","direction","open","onClose","paper","drawerPaper","ModalProps","keepMounted","content","children","Iniciar","nombre","setNombre","apellido","setApellido","correo","setCorreo","clave","setClave","form","noValidate","TextField","required","e","target","value","label","name","onChange","Button","setTab","submit","showPassword","setShowPassword","entrar","fullWidth","FormControl","InputLabel","htmlFor","OutlinedInput","onKeyDown","key","endAdornment","InputAdornment","onMouseDown","event","preventDefault","Copyright","align","Link","Date","getFullYear","secondary","main","SignIn","dato","state","tab","hasOwnProperty","maxWidth","Box","mt","TableIcons","RefreshIcon","forwardRef","ref","Add","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","LibraryAddCheckIcon","IndeterminateCheckBoxIcon","ImportExportIcon","VisibilityOutlinedIcon","MailOutlineIcon","AssignmentIndIcon","TelegramIcon","FormatListNumberedRtlIcon","PaymentIcon","GetAppIcon","AutorenewIcon","PhoneInTalkIcon","EventIcon","AccountCircleIcon","SaveIcon","MonetizationOnIcon","LocalizationTable","pagination","labelDisplayedRows","nRowsSelected","searchPlaceholder","labelRowsSelect","actions","emptyDataSourceMessage","filterRow","filterTooltip","editarSistema","eliminarSistema","registrarSistema","resp","FormData","append","obtenerInventory","Transition","Slide","Crear","setUrl","descripcion","setDescripcion","sistema","description","setSelected","Dialog","TransitionComponent","setOpen","DialogTitle","DialogContent","DialogContentText","Grid","item","xs","DialogActions","BarChart","monto","cantidad","series","chart","zoom","enabled","resetIcon","offsetX","offsetY","fillColor","strokeColor","selection","background","plotOptions","bar","dataLabels","formatter","colors","xaxis","categories","meses","axisBorder","show","axisTicks","crosshairs","fill","gradient","colorFrom","colorTo","stops","opacityFrom","opacityTo","tooltip","yaxis","labels","title","text","options","factura","caja","horizontal","compras","ventas","utcDate","fecha","fechaFinal","dayInicio","getDate","monthInicio","getMonth","obtenerKpisPanel","AlertDialogSlide","handleClose","setDesde","date","getFirst","setHasta","getLast","md","MuiPickersUtilsProvider","utils","DateFnsUtils","locale","es","autoOk","ampm","inputVariant","format","desde","hasta","filtrarFecha","downloadFiles","tipo","filter","length","map","valor","responseType","_url","URL","createObjectURL","Blob","focus","printTicket","registrarDesglose","obtenerDesglose","obtenerHistoricoCajas","abierta","estaAbiertaCaja","msg","card","top","right","opacity","card2","Sistemas","open2","setOpen2","selected","selected2","setSelected2","data1","setData1","cajaAbierta","setCajaAbierta","comprasVentas","setComprasVentas","cajaVenta","setCajaVenta","obtenerComprasYVentas","obtenerVentasCaja","ObtenerGrafico1","Alert","severity","Card","class","CardContent","zIndex","gutterBottom","toFixed","clientes","proveedores","noValue","alt","srcset","ancho","titulo","customAction","accion","guardarAlmacen","setTotalCompras","total_compras","obtenerInventarioOrden","d","i","numero","cambiarEstado","obtenerStatusOrden","obtenerInventario","barcode","setBarcode","setSupplirCode","setSerie","unity","setUnity","unityData","setUnityData","category","setCategory","categoryData","setCategoryData","image","setImage","listPrice","setListPrice","salePrice","setSalePrice","stock","setStock","stockMin","setStockMin","stockMax","setStockMax","hasIva","setHasIva","fraction","setFraction","bodegaData","setBodegaData","bodega","setBodega","obtenerCategorias","obtenerTodosBodegas","obtenerUnidades","bar_code","supplier_code","unity_id","category_id","list_price","sale_price","max_stock","min_stock","has_iva","warehouse_id","subir","subirFoto","cerrarModal","Autocomplete","object","getName2","getOptionLabel","option","renderInput","getName","InputProps","startAdornment","getName3","FormControlLabel","control","Checkbox","checked","accept","multiple","files","startIcon","ruc","setRuc","setLogo","celular","setCelular","business_name","cellphone","registrarProveedor","editarProveedor","CrearN","total","setTotal","setCantidad","proveedor","setProveedor","proveedorData","setProveedorData","autorizar","productos","setProductos","productosData","setProductosData","producto","setProducto","crearProducto","setCrearProducto","crearProveedor","setCrearProveedor","obtenerProductos","order","obtenerDetalleOrden","guardar","registrarPedido","suppliers","validarData","authorize","editarPedido","vaciarCampos","final","some","supplier_id","products","obtenerProductosPorId","agregar","t","slice","exs","product_id","existeEnDetalle","product","supplier","obtenerProveedor","quantity","fullScreen","Tooltip","PersonAddOutlined","PostAddOutlined","newValue","min","icons","columns","field","render","rowData","localization","icon","isFreeAction","row","tableData","quitar","pageSize","actionsColumnIndex","maxBodyHeight","headerStyle","cellStyle","searchFieldStyle","status","setStatus","statusData","setStatusData","Select","labelId","MenuItem","almacen","setAlmacen","order_id","obtenerBodega","estaIncluido","dt","inventory_id","almacenar","dat","eli","warehouse","quitarInventario","evt","paging","t0","jp_code","showTitle","disabled","eliminarOrden","autorizados","no_autorizados","setKpis","confirmarMensaje","setConfirmarMensaje","totalCompras","open3","setOpen3","open4","setOpen4","selected3","setSelected3","selected4","setSelected4","selected5","setSelected5","setEstado","aut","noaut","authorized","anularCompra","imageSelected","setImageSelected","openFilter","setOpenFilter","obtenerFraccionUnidades","fraccion","frac","cursor","zone","setZone","zoneData","setZoneData","obtenerZonas","zone_id","registrarBodega","editarBodega","eliminarBodega","jpcode","setJpcode","supplierCode","serie","inventario","setInventario","bodegaO","setBodegaO","bodegaD","setBodegaD","warehouse_idO","getOptionDisabled","Crearn","razon","setRazon","razonData","setRazonData","productoC","setProductoC","obtenerRazones","registrarUnidad","obtenerRazon","outStock","reason_id","reason","cambiarFraccionamiento","obj","modi","temp","test","editable","documento","setDocumento","direccion","setDireccion","telefono","setTelefono","address","landline","setValor","cambio","setCambio","pagar","Math","abs","finalConsumer","setFinalConsumer","crearCliente","setCrearCliente","cambioCliente","setCambioCliente","foto","setFoto","clientData","setClientData","client","setClient","subTotalV","setSubTotalV","subTotalVI","setSubTotalVI","discount","setDiscount","obtenerClientes","imprimir","subT","subTSinIva","price","subtotal","numero_factura","iva","client_id","final_consumer","cellEditable","onCellEditApproved","oldValue","columnDef","Promise","resolve","reject","setTimeout","dataUpdate","index","nuevoSub","disc","m","tSub","parseFloat","tSubSinIva","tot","toti","dsc","components","Container","Paper","amount","setAmount","start_amount","openCaja","setOpenCaja","anularFactura","apellidos","setApellidos","setRoles","dni","obtenerRolUsuario","setKpi1","setKpi2","entrada","salida","kpi1","kpi2","concept","setTipo","filtro","setFiltro","filtros","setFiltros","setUser","userData","setUserData","ticket","setTicket","obtenerUsuarios","limpiarCampos","Switch","CardActions","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","personName","setPersonName","obtenerPermisos","obtenerPermisosRol","asignarP","asignarPermiso","Input","renderValue","join","indexOf","crearRol","editarRol","city_id","cargarData","flex","FullScreenDialog","autoFocus","rowStyle","x","sorting","obtenerDesglosePorId","setId","selectedDesglose","setSelectedDesglose","openDesglose","setOpenDesglose","city","setCity","cityData","setCityData","obtenerCiudades","App","notificacion","loader","sound","indigo","colorP","colorS","createMuiTheme","setWhite","dark","setDark","themeFinal","tm","getItem","ThemeProvider","Snackbar","anchorOrigin","vertical","autoHideDuration","LinearProgress","Drawer2","exact","path","Login","Panel","Pedidos","Productos","Bodegas","Proveedores","Inventario","Transferencias","Ajustes","Facturas","Laboratorio","Zonas","Clientes","Personal","Kardex","Reporte","Roles","Cajas","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","CARGAR_USUARIO","LOGOUT","MOSTRAR_NOTIFICACION","MOSTRAR_LOADER","PLAY_SOUND","action","payload","Propager","auth","Store","useReducer","Reducer","dispatch","Provider","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.9c6ca208.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/isotipoAmbiensa.deb91b40.png\";","export const ENTRYPOINT=\"http://https://shrouded-brook-95413.herokuapp.com/api/v1/\"\r\nexport const LARAVEL_SGI=\"http://localhost:8001/api/v1/\"\r\nexport const PUBLIC_PATH=\"http://https://shrouded-brook-95413.herokuapp.com/\"\r\n\r\n\r\n/*\r\nexport const ENTRYPOINT=\"https://api.ambiensa.info/api/v1/\"\r\nexport const LARAVEL_SGI=\"http://192.168.10.17:81/api/v1/\"\r\nexport const PUBLIC_PATH=\"https://api.ambiensa.info/\"*/","import {createContext} from 'react'\r\n\r\nconst GlobalContext=createContext();\r\nexport default GlobalContext\r\n","var CryptoJS = require(\"crypto-js\");\r\nvar key_code = \"86758576376418652952657157128997\";\r\n\r\nexport function encriptarJson(encriptarDatos) {\r\n    var ciphertext = CryptoJS.AES.encrypt(encriptarDatos, key_code).toString();\r\n    return ciphertext;\r\n}\r\n\r\nexport function desencriptarJson(encriptarDatos) {\r\n    var bytes = CryptoJS.AES.decrypt(encriptarDatos, key_code);\r\n    var originalText = bytes.toString(CryptoJS.enc.Utf8);\r\n    return originalText;\r\n}","import { guardarSession,obtenerSession,removeSession } from '../session'\r\nimport {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT} from '../../config/API'\r\nimport {play} from '../../utils/sound'\r\n\r\nconst axios = require('axios');\r\nexport const upload = (data, store) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  var resp = new FormData()\r\n  resp.append('file', data.image_file)\r\n  \r\n  let url = ENTRYPOINT+\"upload\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: resp,\r\n    body: resp,\r\n    headers: { Accept: \"application/json\",\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n       \r\n        mostrarLoader(false);\r\n      } else {\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      \r\n    });\r\n};\r\nexport const registrar = (data, setTab,store) => {\r\n  const { cargarUsuario ,playSound,mostrarNotificacion,mostrarLoader} = store\r\n  \r\n  let url = ENTRYPOINT+\"users\"\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: data,\r\n    body:data,\r\n    headers: { 'Accept': 'application/json' }\r\n\r\n  };\r\n  mostrarLoader(true)\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n      mostrarLoader(false)\r\n      mostrarNotificacion({type:\"success\",message:response.message})\r\n      setTab(0)\r\n     }else{\r\n      mostrarNotificacion({type:\"error\",message:response.message})\r\n      mostrarLoader(false)\r\n   \r\n     }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false)\r\n\r\n      \r\n\r\n\r\n    });\r\n}\r\nexport const editarUsuario = (data,     uploadImage,store) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n \r\n\r\n  let url = ENTRYPOINT+\"user\";\r\n  let setting = {\r\n    method: \"PUT\",\r\n    url: url,\r\n    params:data,\r\n    data: data,\r\n    body: data,\r\n    headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n       \r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n    \r\n        window.location.reload();\r\n      } else {\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n};\r\nexport const iniciarSesion = (email, password, store,history) => {\r\n  const { cargarUsuario ,playSound,mostrarNotificacion,mostrarLoader} = store\r\n  var raw = {\r\n    \"email\": email,\r\n    \"password\": password\r\n  }\r\n  let url = ENTRYPOINT+\"auth/login\"\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: raw,\r\n    body:raw,\r\n    headers: { 'Accept': 'application/json' }\r\n\r\n  };\r\n  mostrarLoader(true)\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n      let user={\r\n        user:response.user,\r\n        token: response.token\r\n      }\r\n      let encrypt= encriptarJson(JSON.stringify(user))\r\n    \r\n      cargarUsuario(encrypt)\r\n      guardarSession(encrypt);\r\n      mostrarLoader(false)\r\n      mostrarNotificacion({type:\"success\",message:response.message})\r\n    \r\n      /* if(response.user.type_user==\"client\"){\r\n        history.push('dashboard');\r\n      }else{\r\n        history.push('dashboard_asesor');\r\n      } */\r\n      window.location.href='/panel';\r\n\r\n     }else{\r\n      mostrarNotificacion({type:\"error\",message:response.message})\r\n      mostrarLoader(false)\r\n   \r\n     }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false)\r\n \r\n      \r\n\r\n\r\n    });\r\n}\r\nexport const cerrarSesion = (store) => {\r\n  const { usuario,logout,mostrarNotificacion ,playSound,mostrarLoader} = store\r\n\r\n  let url = ENTRYPOINT+\"auth/logout\"\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n\r\n    headers: {\r\n       'Accept': 'application/json',\r\n      'Authorization':'Bearer '+JSON.parse(desencriptarJson(usuario)).token\r\n      }\r\n\r\n  };\r\n  mostrarLoader(true)\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      logout()\r\n      removeSession()\r\n     \r\n      mostrarNotificacion({type:\"success\",message:res.data.message})\r\n      mostrarLoader(false)\r\n      window.location.href=\"/login\"\r\n\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false)\r\n\r\n      let response = error.data\r\n\r\n   \r\n    });\r\n}\r\nexport const obtenerUsuario = (setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"user\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData(response.data)\r\n   \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n\r\nexport const obtenerPhoto = (setFile,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"user_photo\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setFile(response)\r\n   \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}","export const guardarSession = (user) => {\r\n    localStorage.setItem('auth', user);\r\n}\r\nexport const removeSession=()=>{\r\n    localStorage.removeItem(\"auth\");\r\n}\r\nexport const obtenerSession = () => {\r\n\r\n    return localStorage.getItem('auth');\r\n\r\n}","export default __webpack_public_path__ + \"static/media/logo2.a39a81c1.jpg\";","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT} from '../../config/API'\r\nconst axios = require('axios');\r\n\r\nexport const obtenerRolUsuario = (id,setData,store) => {\r\n\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  let url = ENTRYPOINT+\"user/role?user_id=\"+id\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.role)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerPermisosAuth = (setData,store) => {\r\n\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  let url = ENTRYPOINT+\"permission/user\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.permisos)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerTodos = (setData,store) => {\r\n\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n    let url = ENTRYPOINT+\"roles\"\r\n    let setting = {\r\n      method: \"Get\",\r\n      url: url,\r\n      headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n  \r\n    };\r\n  \r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n       if(response.type!=\"error\"){\r\n          setData(response.roles)\r\n       \r\n  \r\n       }else{\r\n       \r\n       }\r\n      })\r\n      .catch((error) => {\r\n       \r\n  \r\n  \r\n      });\r\n  }\r\n  export const obtenerPermisos = (setData,store) => {\r\n\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n    let url = ENTRYPOINT+\"permisos\"\r\n    let setting = {\r\n      method: \"Get\",\r\n      url: url,\r\n      headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n  \r\n    };\r\n  \r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n       if(response.type!=\"error\"){\r\n          setData(response.permisos)\r\n       \r\n  \r\n       }else{\r\n       \r\n       }\r\n      })\r\n      .catch((error) => {\r\n       \r\n  \r\n  \r\n      });\r\n  }\r\n  \r\n  export const obtenerPermisosRol = (rol,setData,store) => {\r\n\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n    let url = ENTRYPOINT+\"role/permissions/get?rol=\"+rol\r\n    let setting = {\r\n      method: \"Get\",\r\n      url: url,\r\n      headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n  \r\n    };\r\n  \r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n       if(response.type!=\"error\"){\r\n          setData(response.permisos)\r\n       \r\n  \r\n       }else{\r\n       \r\n       }\r\n      })\r\n      .catch((error) => {\r\n       \r\n  \r\n  \r\n      });\r\n  }\r\n  \r\n  export const crearRol = (data, store,       asignarP ,limpiar)=> {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"role/create\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n            asignarP();\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          limpiar()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\n  export const editarRol = (data, asignarP,store,limpiar )=> {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"role/edit\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          asignarP()\r\n          limpiar()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\n  export const asignarPermiso = (data, store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"role/asign-multiple\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n     \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\n  export const eliminarRole = (city_id,store,cargarData) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"role/delete\";\r\n    var raw = {\r\n        rol:city_id,\r\n    };\r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      data: raw,\r\n      body: raw,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          cargarData()\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\n  ","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const obtenerRol = (id,setData, store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  let url = ENTRYPOINT+\"user/role?user_id=\"+id;\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n    },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        setData(response.role);\r\n        mostrarLoader(false);\r\n       // mostrarNotificacion({ type: \"success\", message: response.message });\r\n      } else {\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n};\r\nexport const editar= (id,data, store,   limpiar) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"users/\"+id;\r\n    let setting = {\r\n      method: \"PUT\",\r\n      url: url,\r\n      params:data,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          limpiar()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n          limpiar()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        limpiar()\r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const eliminar = (id,store,carga) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"users/\"+id;\r\n    \r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          carga()\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\n\r\n  \r\n  export const autorizarOrden = (id,store,carga) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"autorize_order/\"+id;\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         carga()\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\nexport const registrar = (data,store,limpiar) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"users\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          limpiar()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: 'Ha ocurrido un error, revise los campos' });\r\n          mostrarLoader(false);\r\n          limpiar()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n        limpiar()\r\n      });\r\n  }\r\n\r\n  export const guardarAlmacen = (data,store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"transfers\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\n\r\n   \r\n  export const obtenerDetalleOrden = (order,setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"order_detail/\"+order\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerTodos = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"users\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n   \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\n\r\nexport const obtenerInventarioOrden = (id,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"order_inventory/\"+id\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n     let d=[]\r\n     response.data.map((e,i)=>{\r\n      d.push({...e,numero:(i+1)})\r\n     })\r\n      setData(d)\r\n   \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   console.log(error)\r\n\r\n\r\n  });\r\n}\r\nexport const cambiarEstado = (data,store,carga) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n  let url = ENTRYPOINT+\"change_order_status\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: data,\r\n    body: data,\r\n    headers: { Accept: \"application/json\",\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n       \r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n        carga()\r\n      } else {\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n}\r\n\r\nexport const obtenerStatusOrden = (setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"users_status\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData(response.data)\r\n   \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerSistemaEvaluaciones = (setLabels,setValues,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"users\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setLabels(response.data.system)\r\n      setValues(response.data.count)\r\n\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport AccountCircle from '@material-ui/icons/PermIdentity';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsNone';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\r\nimport PrintOutlinedIcon from '@material-ui/icons/PrintOutlined';\r\nimport EmojiTransportationIcon from '@material-ui/icons/EmojiTransportation';\r\nimport SecurityIcon from '@material-ui/icons/Security';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { PUBLIC_PATH } from '../config/API'\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport Initializer from '../store/Initializer'\r\nimport { desencriptarJson } from '../utils/security'\r\nimport AllInboxIcon from '@material-ui/icons/AllInbox';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport TransferWithinAStationIcon from '@material-ui/icons/TransferWithinAStation';\r\nimport TransformIcon from '@material-ui/icons/Transform';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport { cerrarSesion, obtenerUsuario } from '../utils/API/auth';\r\nimport GroupOutlinedIcon from \"@material-ui/icons/GroupOutlined\";\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport { useLocation, Switch } from 'react-router-dom';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport logo from '../assets/logo2.jpg'\r\nimport { Badge, Box, Button, Grid } from '@material-ui/core';\r\nimport { obtenerPermisosAuth } from '../utils/API/roles';\r\nimport { obtenerRol } from '../utils/API/usuarios';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n\r\n    search: {\r\n        height: 45,\r\n        borderWidth: 1,\r\n        borderStyle: 'solid',\r\n        borderColor: 'rgba(0, 0, 0, 0.12)',\r\n        position: 'relative',\r\n        borderRadius: 10,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            borderColor: 'rgb(30, 136, 229)',\r\n            borderWidth: 1,\r\n            borderStyle: 'solid'\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%', color: 'gray',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit', height: '100%'\r\n    },\r\n    root: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n        },\r\n        overflow: 'hidden'\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(2),\r\n\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10),\r\n\r\n    },\r\n  \r\n   \r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n    const { window } = props;\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [openCollapse, setOpenCollapse] = React.useState(false);\r\n    const [openCollapse2, setOpenCollapse2] = React.useState(false);\r\n\r\n\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    const [cambio, setCambio] = React.useState(null)\r\n    const [info, setInfo] = React.useState(null)\r\n    const [file, setFile] = React.useState(null)\r\n\r\n    const [names, setNames] = React.useState('')\r\n    const [permisos, setPermisos] = React.useState([])\r\n    const [rol, setRol] = React.useState(\"\");\r\n\r\n    const initializer = useContext(Initializer);\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerUsuario(setInfo, initializer)\r\n\r\n            obtenerRol(JSON.parse(desencriptarJson(initializer.usuario)).user.id,setRol,initializer);\r\n\r\n            obtenerPermisosAuth(setPermisos, initializer)\r\n        }\r\n    }, [initializer.usuario])\r\n    React.useEffect(() => {\r\n        if (info != null) {\r\n            setNames(info.names + \" \" + info.last_names)\r\n        }\r\n    }, [info])\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n    function handleOpenSettings() {\r\n        setOpenCollapse(!openCollapse);\r\n    }\r\n    const cerrar = () => {\r\n        cerrarSesion(initializer)\r\n    }\r\n    const comprobador = (val) => {\r\n\r\n        if (location.pathname == val) {\r\n            return { backgroundColor: '#EDE7F6', borderRadius: 7, color: '#6645B3', marginRight: 5, marginLeft: 5 }\r\n        } else {\r\n            if (location.pathname == \"/evaluacion\" && val == \"/evaluaciones\") {\r\n                return { backgroundColor: '#EDE7F6', borderRadius: 7, color: '#6645B3', marginRight: 5, marginLeft: 5 }\r\n\r\n            } else {\r\n                return { borderRadius: 7, marginRight: 5, marginLeft: 5 }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n    \r\n    const drawer = (\r\n        <div >\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n                <Avatar size=\"\" className={classes.avatar} src={logo}>\r\n\r\n                </Avatar>\r\n                <Typography variant=\"subtitle1\" style={{ fontSize: 15, color: '#929396' }}>\r\n                {rol}\r\n                </Typography>\r\n                <div style={{\r\n                    width: '150px',\r\n                    whiteSpace: 'nowrap',\r\n                    overflow: 'hidden', textAlign: 'center',\r\n                    textOverflow: 'ellipsis'\r\n                }}>\r\n                    <Typography variant=\"subtitle1\" style={{ fontSize: 15, color: '#929396' }}>\r\n                        {names}\r\n                    </Typography>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <Divider />\r\n            <div style={{ justifyContent: 'space-between', flexDirection: 'column', display: 'flex' }}>\r\n                <List style={{ padding: 10 }} >\r\n\r\n                    <ListItem button onClick={() => props.history.push('panel')} style={comprobador('/panel')}>\r\n                        <ListItemIcon style={{ color: 'inherit' }}><DashboardIcon /> </ListItemIcon>\r\n                        <ListItemText primary={'Dashboard'} />\r\n                    </ListItem>\r\n                    {\r\n                        permisos.includes('Ventas') && (\r\n                            <ListItem button onClick={() => props.history.push('/facturas')} style={comprobador('/facturas')}>\r\n                                <ListItemIcon style={{ color: 'inherit' }}><PostAddIcon style={{ color: 'inherit' }} /> </ListItemIcon>\r\n                                <ListItemText primary={'Ventas'} />\r\n                            </ListItem>\r\n                        )\r\n                    }\r\n                    {\r\n                        permisos.includes('Compras') && (\r\n                            <ListItem button onClick={() => props.history.push('/compras')} style={comprobador('/compras')}>\r\n                                <ListItemIcon style={{ color: 'inherit' }}>\r\n                                    <PostAddIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Compras\" />\r\n                            </ListItem>\r\n                        )\r\n                    }\r\n                     {\r\n                        permisos.includes('Caja') && (\r\n                            <ListItem button onClick={() => props.history.push('/cajas')} style={comprobador('/cajas')}>\r\n                            <ListItemIcon style={{ color: 'inherit' }}>\r\n                                <AllInboxIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Caja\" />\r\n                        </ListItem>\r\n                        )\r\n                    }\r\n                  \r\n                    {\r\n                        permisos.includes('Clientes') && (\r\n                            <ListItem button onClick={() => props.history.push('/clientes')} style={comprobador('/clientes')}>\r\n                                <ListItemIcon style={{ color: 'inherit' }}><PeopleOutlineIcon style={{ color: 'inherit' }} /> </ListItemIcon>\r\n                                <ListItemText primary={'Clientes'} />\r\n                            </ListItem>\r\n                        )\r\n                    }\r\n                       \r\n                    {\r\n                        permisos.includes('Inventario') && (\r\n                            <ListItem button onClick={handleOpenSettings} style={comprobador('/inventario')}>\r\n                                <ListItemIcon style={{ color: 'inherit' }}><ListIcon style={{ color: 'inherit' }} /> </ListItemIcon>\r\n                                <ListItemText primary={'Inventario'} />\r\n                                {openCollapse ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                            </ListItem>\r\n                        )\r\n                    }\r\n                  \r\n                       \r\n                    {\r\n                        permisos.includes('Inventario') && (\r\n                            <Collapse in={openCollapse} timeout=\"auto\" unmountOnExit>\r\n                                <List component=\"div\" disablePadding >\r\n                                    <ListItem button className={classes.nested} onClick={() => props.history.push('/inventario/productos')} >\r\n                                        <ListItemIcon>\r\n                                            <PostAddIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Productos\" />\r\n                                    </ListItem>\r\n                                    <ListItem button className={classes.nested} onClick={() => props.history.push('/inventario/kardex')} >\r\n                                        <ListItemIcon>\r\n                                            <AllInboxIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Kardex\" />\r\n                                    </ListItem>\r\n\r\n\r\n\r\n                                </List>\r\n                            </Collapse>\r\n                        )\r\n                    }\r\n{\r\n                        permisos.includes('Ajuste') && (\r\n                            <ListItem button onClick={() => props.history.push('/inventario/ajustes')}  style={comprobador('/inventario/ajustes')}>\r\n                            <ListItemIcon style={{ color: 'inherit' }}>\r\n                                <TransformIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Ajuste\" />\r\n                        </ListItem>\r\n                        )\r\n                    }\r\n\r\n{\r\n                        permisos.includes('Proveedores') && (\r\n                            <ListItem button onClick={() => props.history.push('/inventario/proveedores')} style={comprobador('/inventario/proveedores')}>\r\n                            <ListItemIcon style={{ color: 'inherit' }}>\r\n                                <EmojiTransportationIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Proveedores\" />\r\n                        </ListItem>\r\n                        )\r\n                    }\r\n\r\n                     {\r\n                        permisos.includes('Laboratorios') && (\r\n              \r\n                                        <ListItem button  onClick={() => props.history.push('/laboratorios')} style={comprobador('/laboratorios')}>\r\n                                    <ListItemIcon style={{ color: 'inherit' }}>\r\n                                        <StoreIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Laboratorios\" />\r\n                                </ListItem>\r\n                            )}\r\n                        {\r\n                        permisos.includes('Ubicaciones') && (\r\n                            <ListItem button onClick={()=>setOpenCollapse2(!openCollapse2)}  style={comprobador('/ubicaciones')}>\r\n                                <ListItemIcon style={{ color: 'inherit' }}><MapIcon style={{ color: 'inherit' }} /> </ListItemIcon>\r\n                                <ListItemText primary={'Ubicaciones'} />\r\n                                {openCollapse2 ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                            </ListItem>\r\n                        )\r\n                    }      \r\n                    {\r\n                        permisos.includes('Ubicaciones') && (\r\n                            <Collapse in={openCollapse2} timeout=\"auto\" unmountOnExit>\r\n                                    <List component=\"div\" disablePadding >\r\n                                <ListItem button className={classes.nested} onClick={() => props.history.push('/zonas')} >\r\n                                        <ListItemIcon>\r\n                                            <RoomIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Zonas\" />\r\n                                    </ListItem>\r\n                                </List>\r\n                            </Collapse>\r\n                        )\r\n                    }\r\n                          \r\n               \r\n\r\n{\r\n                        permisos.includes('Personal') && (\r\n                              \r\n                    <ListItem button onClick={() => props.history.push('/personal')} style={comprobador('/personal')}>\r\n                    <ListItemIcon style={{ color: 'inherit' }}><PeopleOutlineIcon style={{ color: 'inherit' }} /> </ListItemIcon>\r\n                    <ListItemText primary={'Personal'} />\r\n                </ListItem>\r\n                        )\r\n                    }\r\n{\r\n                        permisos.includes('Roles') && (\r\n                 \r\n                            <ListItem button onClick={() => props.history.push('/roles')} style={comprobador('/roles')}>\r\n                            <ListItemIcon style={{ color: 'inherit' }}><SecurityIcon style={{ color: 'inherit' }} /> </ListItemIcon>\r\n                            <ListItemText primary={'Roles'} />\r\n                        </ListItem>\r\n                        )\r\n                    }\r\n            {\r\n                        permisos.includes('Reporte') && (\r\n                            <ListItem button onClick={() => props.history.push('/reporte')} style={comprobador('/reporte')}>\r\n                            <ListItemIcon style={{ color: 'inherit' }}><PrintOutlinedIcon style={{ color: 'inherit' }} /> </ListItemIcon>\r\n                            <ListItemText primary={'Reporte'} />\r\n                        </ListItem>\r\n                        )\r\n                    }\r\n                \r\n\r\n                </List>\r\n\r\n                <div>\r\n                    <Divider />\r\n                    <List>\r\n\r\n                        <ListItem button onClick={cerrar}>\r\n                            <ListItemIcon><ExitToAppIcon /> </ListItemIcon>\r\n                            <ListItemText primary={'Salir'} />\r\n                        </ListItem>\r\n\r\n                    </List>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n    console.log(history)\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n\r\n            {\r\n                // initializer.usuario != null ?\r\n                history.location.pathname != \"/bienvenida\" && history.location.pathname != \"/login\" ?\r\n\r\n                    <React.Fragment>\r\n                        <AppBar position=\"fixed\" className={classes.appBar} color=\"white\" elevation={0} style={{ border: '1px solid rgba(0, 0, 0, 0.12)' }}>\r\n                            <Toolbar>\r\n\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    aria-label=\"open drawer\"\r\n                                    edge=\"start\"\r\n                                    onClick={handleDrawerToggle}\r\n                                   \r\n                                >\r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n\r\n                                <div className={classes.search}>\r\n                                    <div className={classes.searchIcon}>\r\n                                        <SearchIcon />\r\n                                    </div>\r\n                                    <InputBase\r\n                                        placeholder=\"Search…\"\r\n                                        classes={{\r\n                                            root: classes.inputRoot,\r\n                                            input: classes.inputInput,\r\n                                        }}\r\n                                        inputProps={{ 'aria-label': 'search' }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.grow} />\r\n\r\n                                <Avatar variant=\"rounded\" style={{ marginTop: 5, backgroundColor: '#e3f2fd', borderRadius: 5, marginBottom: 15 }} >\r\n                                    <IconButton aria-label=\"show 4 new mails\" color=\"inherit\" >\r\n\r\n                                        <NotificationsIcon style={{ color: '#1e88e5' }} />\r\n\r\n                                    </IconButton>\r\n\r\n                                </Avatar>\r\n                                <Avatar variant=\"rounded\" style={{ marginLeft: 10, marginTop: 5, backgroundColor: '#ede7f6', borderRadius: 5, marginBottom: 15 }} >\r\n                                    <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n\r\n                                        <AccountCircle style={{ color: '#5e35b1' }} />\r\n                                    </IconButton>\r\n\r\n                                </Avatar>\r\n\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                        <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                            <Hidden  implementation=\"css\">\r\n                                <Drawer\r\n                                    container={container}\r\n                                    variant=\"temporary\"\r\n                                    anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                                    open={mobileOpen}\r\n                                    onClose={handleDrawerToggle}\r\n                                    classes={{\r\n                                        paper: classes.drawerPaper,\r\n                                    }}\r\n                                    ModalProps={{\r\n                                        keepMounted: true, // Better open performance on mobile.\r\n                                    }}\r\n                                >\r\n                                    {drawer}\r\n                                </Drawer>\r\n                            </Hidden>\r\n                         \r\n                        </nav>\r\n                    </React.Fragment>\r\n                    :\r\n                    null\r\n            }\r\n            <main className={history != null ? history.location.pathname != \"/bienvenida\" ? classes.content : \"\" : \"\"}>\r\n\r\n\r\n                <div className={classes.toolbar} />\r\n                {props.children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","import React, { Component, useState, useContext } from 'react';\r\nimport '../style/AppBar.css'\r\nimport Menu from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Home from '@material-ui/icons/Home';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Notifications from '@material-ui/icons/Notifications';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport ArrowDropDownCircle from '@material-ui/icons/ArrowDropDownCircle';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Drawer from './Drawer2';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ModalLogin from './ModalLogin'\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { desencriptarJson } from '../utils/security'\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Initializer from '../store/Initializer'\r\nfunction HideOnScroll(props) {\r\n    const { children, window } = props;\r\n\r\n\r\n\r\n    const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n    return (\r\n        <Slide appear={false} direction=\"down\" in={!trigger}>\r\n            {children}\r\n        </Slide>\r\n    );\r\n}\r\n\r\nconst AppBarC = (props) => {\r\n    const initializer = useContext(Initializer);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\r\n    let history = useHistory();\r\n    const [show, setShow] = useState(false);\r\n    const handleClickAway = () => {\r\n        setShow(false);\r\n    };\r\n\r\n    return (\r\n\r\n        <HideOnScroll {...props}>\r\n\r\n            <AppBar color=\"primary\" position=\"sticky\">\r\n                <ClickAwayListener onClickAway={handleClickAway}>\r\n\r\n                    <Toolbar>\r\n                        <Grid item container direction=\"row\" alignItems=\"center\" justify=\"flex-start\" xs={7} >\r\n                            <Drawer {...props} />\r\n                            <Button disableRipple style={{display:'flex',justifyContent:'center',alignItems:'center'}}  color=\"primary\" variant=\"contained\" size=\"small\" onClick={() => window.location.href = './dashboard'}><img src={require('../assets/isotipoAmbiensa.png')} className=\"foto\" style={{ borderRadius: 8, height: '30px', width: '30px' }} /></Button>\r\n                            \r\n                            <div className=\"title\">\r\n                                <Box className=\"vertical-line\" ml={1} mr={1} />\r\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\r\n                                    Gestor comercial\r\n                                </Typography>\r\n                            </div>\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item container direction=\"row\" alignItems=\"center\" justify=\"flex-end\" xs={5} >\r\n\r\n                            {/*     <IconButton aria-label=\"delete\" color=\"inherit\">\r\n                                <Badge color=\"secondary\" badgeContent={1}>\r\n                                    <Notifications fontSize=\"inherit\" />\r\n                                </Badge>\r\n                            </IconButton> */}\r\n                            {\r\n                                !fullScreen&&\r\n                                initializer.usuario != null ? JSON.parse(desencriptarJson(initializer.usuario)).user.names+\" \"+JSON.parse(desencriptarJson(initializer.usuario)).user.last_names : \"\"\r\n                            }\r\n                       \r\n                            <IconButton aria-label=\"delete\" color=\"inherit\" size=\"medium\" onClick={() => {\r\n                                setShow(!show)\r\n                            }} ><ArrowDropDownCircle /></IconButton>\r\n                            <Fade in={show}>\r\n                                <Paper>\r\n                                    <ModalLogin changeTheme={props.changeTheme} show={show} {...props} />\r\n                                </Paper>\r\n\r\n                            </Fade>\r\n\r\n                        </Grid>\r\n                    </Toolbar>\r\n\r\n\r\n                </ClickAwayListener>\r\n            </AppBar>\r\n\r\n        </HideOnScroll>\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default AppBarC","export default __webpack_public_path__ + \"static/media/login.5ac0cdfa.png\";","export default __webpack_public_path__ + \"static/media/register.eb451a71.png\";","import React from 'react'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { registrar } from '../../utils/API/auth';\r\nimport Initializer from '../../store/Initializer'\r\nexport default function Iniciar(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [nombre,setNombre]=React.useState(\"\")\r\n    const [apellido,setApellido]=React.useState(\"\")\r\n\r\n    const [correo,setCorreo]=React.useState(\"\")\r\n    const [clave,setClave]=React.useState(\"\")\r\n    const entrar=()=>{\r\n        registrar({names:nombre,last_names:apellido,email:correo,password:clave},props.setTab,initializer)\r\n    }\r\n    return (\r\n        <form className={props.classes.form} noValidate>\r\n               <TextField\r\n            variant=\"outlined\"\r\n            style={{marginBottom:10,marginTop:10}}\r\n            required\r\n            style={{marginBottom:10}}\r\n            id=\"email\"\r\n            size=\"small\"\r\n            label=\"Nombres\"\r\n            name=\"email\"\r\n            value={nombre}\r\n            onChange={(e)=>setNombre(e.target.value)}\r\n            \r\n        />\r\n           <TextField\r\n            variant=\"outlined\"\r\n         \r\n            required\r\n            style={{marginBottom:10}}\r\n            size=\"small\"\r\n            id=\"email\"\r\n            label=\"Apellidos\"\r\n            name=\"email\"\r\n            value={apellido}\r\n            onChange={(e)=>setApellido(e.target.value)}\r\n          \r\n        />\r\n        <TextField\r\n            variant=\"outlined\"\r\n            style={{marginBottom:10}}\r\n            size=\"small\"\r\n            required\r\n\r\n            id=\"email\"\r\n            label=\"Correo electrónico\"\r\n            name=\"email\"\r\n            value={correo}\r\n            onChange={(e)=>setCorreo(e.target.value)}\r\n        />\r\n        <TextField\r\n            variant=\"outlined\"\r\n          \r\n            size=\"small\"\r\n            required\r\n            value={clave}\r\n            onChange={(e)=>setClave(e.target.value)}\r\n            name=\"password\"\r\n            label=\"Contraseña\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n     \r\n        />\r\n\r\n        <Button\r\n\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={entrar}\r\n            className={props.classes.submit}\r\n        >\r\n            Registrate ahora\r\n        </Button>\r\n\r\n    </form>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Initializer from '../../store/Initializer'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { iniciarSesion } from '../../utils/API/auth';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport logo from '../../assets/logo2.jpg'\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nexport default function Iniciar(props) {\r\n  const initializer = React.useContext(Initializer);\r\n  const classes = useStyles();\r\n  const [showPassword, setShowPassword] = React.useState(false)\r\n  const [correo, setCorreo] = React.useState(\"\")\r\n  const [clave, setClave] = React.useState(\"\")\r\n  React.useEffect(() => {\r\n    if(initializer.usuario!=null){\r\n      window.location.href ='/panel'\r\n    }\r\n\r\n  }, [initializer.usuario])\r\n  const entrar = () => {\r\n    iniciarSesion(correo, clave, initializer)\r\n  }\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <form noValidate>\r\n      <div className={classes.paper}>\r\n        <Avatar size=\"\" className={classes.avatar}  src={logo}>\r\n\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Iniciar sesión\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            margin=\"normal\"\r\n\r\n            id=\"email\"\r\n            label=\"Correo electrónico\"\r\n            name=\"email\"\r\n            value={correo}\r\n            onChange={(e) => setCorreo(e.target.value)}\r\n          />\r\n          <FormControl variant=\"outlined\" style={{ width: '100%', marginTop: 10 }}>\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">Contraseña</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              value={clave}\r\n              onChange={(e) => {\r\n                setClave(e.target.value)\r\n              }}\r\n              onKeyDown={(e)=>{\r\n                if (e.key === \"Enter\") {\r\n                  entrar()\r\n                }\r\n                }}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n             \r\n              label=\"Contraseña\"\r\n            />\r\n          </FormControl>\r\n         \r\n\r\n          <Button\r\n\r\n            onClick={entrar}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Iniciar Sesión Ahora\r\n          </Button>\r\n         \r\n        </form>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </form>\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport splashL from '../../assets/login.png'\r\nimport splashR from '../../assets/register.png'\r\n\r\nimport Register from './Register'\r\nimport Iniciar from './Iniciar'\r\nimport { useMediaQuery, useTheme } from '@material-ui/core';\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\">\r\n          Natural System\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n    const dato = props.location.state;\r\n    const theme = useTheme();\r\n\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const classes = useStyles();\r\n    const [tab,setTab]=React.useState(0)\r\n\r\n\r\n    React.useEffect(()=>{\r\n        console.log(dato)\r\n        if(dato!=undefined){\r\n            if(dato.hasOwnProperty('register')){\r\n                setTab(1)\r\n            }\r\n        }\r\n        \r\n    },[dato])\r\n    return (\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            {\r\n                tab==0?\r\n                <Iniciar />\r\n                :\r\n                <Register />\r\n\r\n            }\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n\r\n    );\r\n}\r\n","\r\nimport React, { Component,forwardRef }  from 'react';\r\n\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport Edit from '@material-ui/icons/EditOutlined';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport LibraryAddCheckIcon from '@material-ui/icons/LibraryAddCheck';\r\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\r\nimport ImportExportIcon from '@material-ui/icons/ImportExportOutlined';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport FormatListNumberedRtlIcon from '@material-ui/icons/FormatListNumberedRtl';\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport PhoneInTalkIcon from '@material-ui/icons/PhoneInTalk';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nexport const TableIcons = {\r\n    \r\n    RefreshIcon: forwardRef((props, ref) => <RefreshIcon {...props} ref={ref} />),\r\n    Add: forwardRef((props, ref) => <AddBox  {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    LibraryAddCheckIcon: forwardRef((props, ref) => <LibraryAddCheckIcon {...props} ref={ref} />),\r\n    IndeterminateCheckBoxIcon: forwardRef((props, ref) => <IndeterminateCheckBoxIcon {...props} ref={ref} />),\r\n    ImportExportIcon: forwardRef((props, ref) => <ImportExportIcon {...props} ref={ref} />),\r\n    VisibilityOutlinedIcon: forwardRef((props, ref) => <VisibilityOutlinedIcon {...props} ref={ref} />),\r\n    MailOutlineIcon: forwardRef((props, ref) => <MailOutlineIcon {...props} ref={ref} />),\r\n    AssignmentIndIcon: forwardRef((props, ref) => <AssignmentIndIcon {...props} ref={ref} />),\r\n    TelegramIcon: forwardRef((props, ref) => <TelegramIcon {...props} ref={ref} />),\r\n    FormatListNumberedRtlIcon: forwardRef((props, ref) => <FormatListNumberedRtlIcon {...props} ref={ref} />),\r\n    PaymentIcon: forwardRef((props, ref) => <PaymentIcon {...props} ref={ref} />),\r\n    GetAppIcon: forwardRef((props, ref) => <GetAppIcon {...props} ref={ref} />),\r\n    AutorenewIcon: forwardRef((props, ref) => <AutorenewIcon {...props} ref={ref} />),\r\n    PhoneInTalkIcon:forwardRef((props, ref) => <PhoneInTalkIcon {...props} ref={ref} />),\r\n    EventIcon:forwardRef((props, ref) => <EventIcon {...props} ref={ref} />),\r\n    AccountCircleIcon:forwardRef((props, ref) => <AccountCircleIcon {...props} ref={ref} />),\r\n    SaveIcon:forwardRef((props, ref) => <SaveIcon {...props} ref={ref} />),\r\n    MonetizationOnIcon:forwardRef((props, ref) => <MonetizationOnIcon {...props} ref={ref} />)\r\n\r\n    \r\n    \r\n  };\r\nexport const LocalizationTable = {\r\n    pagination: {\r\n        labelDisplayedRows: '{from}-{to} of {count}'\r\n    },\r\n    toolbar: {\r\n        nRowsSelected: '{0} fila(s) seleccionada',\r\n        searchPlaceholder:'Buscar'\r\n    },\r\n    pagination:{\r\n        labelRowsSelect: 'filas',\r\n    } ,\r\n    header: {\r\n        actions: ''\r\n    },\r\n    body: {\r\n        emptyDataSourceMessage: 'No hay datos por mostrar',\r\n        filterRow: {\r\n            filterTooltip: 'Filter'\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeAccent = (str) => {\r\n\r\n    return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n  }","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\n\r\n\r\nexport const subirFoto = (id,data,store,carga) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n  var resp = new FormData()\r\nfor ( var key in data ) {\r\n  resp.append(key, data[key]);\r\n}\r\n  let url = ENTRYPOINT+\"products/upload_image/\"+id;\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: resp,\r\n    body: resp,\r\n    headers: { Accept: \"application/json\",\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n       carga()\r\n      } else {\r\n      }\r\n    })\r\n    .catch((error) => {\r\n\r\n    });\r\n}\r\n\r\n\r\nexport const editarSistema = (id,data, store,limpiar) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"products/\"+id;\r\n    let setting = {\r\n      method: \"PUT\",\r\n      url: url,\r\n      params:data,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          limpiar()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const eliminarSistema = (id,store,carga) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"products/\"+id;\r\n    \r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          carga()\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\nexport const registrarSistema = (data,store,limpiar) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    var resp = new FormData()\r\n    for ( var key in data ) {\r\n      resp.append(key, data[key]);\r\n    }\r\n    let url = ENTRYPOINT+\"products\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: resp,\r\n      body: resp,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          limpiar()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\n\r\n  \r\n  export const obtenerInventory = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"inventories\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerTodos = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"products\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerSistemaEvaluaciones = (setLabels,setValues,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"systems_evaluations\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setLabels(response.data.system)\r\n      setValues(response.data.count)\r\n\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { editarSistema, registrarSistema } from '../../../utils/API/sistemas';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [nombre, setNombre] = React.useState(\"\")\r\n    const [url, setUrl] = React.useState(\"\")\r\n    const [descripcion, setDescripcion] = React.useState(\"\")\r\n    React.useEffect(()=>{\r\n        if(props.sistema!=null){\r\n            setNombre(props.sistema.name)\r\n            setUrl(props.sistema.url)\r\n            setDescripcion(props.sistema.description)\r\n        }\r\n    },[props.sistema])\r\n    const guardar=()=>{\r\n        if(props.sistema==null){\r\n            registrarSistema({name:nombre,url:url,description:descripcion},initializer)\r\n            limpiar()\r\n        }else{\r\n            editarSistema(props.sistema.id,{name:nombre,url:url,description:descripcion},initializer)\r\n            limpiar()\r\n\r\n        }\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n    const limpiar=()=>{\r\n        setNombre(\"\")\r\n        setUrl(\"\")\r\n        setDescripcion(\"\")\r\n        props.setSelected(null)\r\n        props.carga()\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n                limpiar()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Sistemas</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                   {props.sistema!=null?\"Formulario de edición de sistema\": \"Formulario de creación de sistema\"}\r\n                </DialogContentText>\r\n                <Grid container>\r\n                    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ marginBottom: 10,width:'100%' }}\r\n                        size=\"small\"\r\n                        label=\"Nombre\"\r\n                        value={nombre}\r\n                        onChange={(e) => setNombre(e.target.value)}\r\n\r\n                    /></Grid>\r\n                    <Grid item xs={12}>   <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ marginBottom: 10,width:'100%' }}\r\n                        size=\"small\"\r\n                        label=\"Url\"\r\n                        value={url}\r\n                        onChange={(e) => setUrl(e.target.value)}\r\n\r\n                    /></Grid>\r\n                    <Grid item xs={12}>  <TextField\r\n                        variant=\"outlined\"\r\n\r\n                        style={{ marginBottom: 10,width:'100%' }}\r\n                   \r\n                        label=\"Descripción\"\r\n\r\n                        value={descripcion}\r\n                        onChange={(e) => setDescripcion(e.target.value)}\r\n\r\n                    /></Grid>\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Guardar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { eliminarSistema, registrarSistema } from '../../../utils/API/sistemas';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const guardar=()=>{\r\n        eliminarSistema(props.sistema.id,initializer)\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => props.setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Sistemas</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    ¿Está seguro que desea eliminar el registro?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const editar= (id,data, store,limpiar) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"clients/\"+id;\r\n    let setting = {\r\n      method: \"PUT\",\r\n      url: url,\r\n      params:data,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n          limpiar()\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const eliminar = (id,store,carga) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"clients/\"+id;\r\n    \r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          carga()\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\nexport const registrar = (data,store,limpiar) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"clients\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          limpiar()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\nexport const obtenerTodos = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"clients\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerSistemaEvaluaciones = (setLabels,setValues,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"systems_evaluations\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setLabels(response.data.system)\r\n      setValues(response.data.count)\r\n\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n","import React,{useState} from 'react'\r\nimport Chart from \"react-apexcharts\";\r\nexport default function BarChart(props) {\r\n    const [series,setSeries]=useState([{\r\n      name: 'Monto ($)',\r\n      data:props.monto\r\n    }, {\r\n      name: 'Número',\r\n      data: props.cantidad\r\n    }])\r\n      const [options,setOptions]=useState({\r\n        chart: {\r\n          height: 350,\r\n   \r\n          type: 'bar',\r\n          zoom: {\r\n            enabled: true,\r\n            type: 'x',\r\n            resetIcon: {\r\n                offsetX: -10,\r\n                offsetY: 0,\r\n                fillColor: '#fff',\r\n                strokeColor: '#37474F'\r\n            },\r\n            selection: {\r\n                background: '#90CAF9',\r\n                border: '#0D47A1'\r\n            }    \r\n        }\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            dataLabels: {\r\n              position: 'top', // top, center, bottom\r\n            },\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n          formatter: function (val) {\r\n            return val ;\r\n          },\r\n          offsetY: -20,\r\n          style: {\r\n            fontSize: '12px',\r\n            colors: [\"#304758\"]\r\n          }\r\n        },\r\n        \r\n        xaxis: {\r\n          categories: props.meses,\r\n          position: 'top',\r\n          axisBorder: {\r\n            show: false\r\n          },\r\n          axisTicks: {\r\n            show: false\r\n          },\r\n          crosshairs: {\r\n            fill: {\r\n              type: 'gradient',\r\n              gradient: {\r\n                colorFrom: '#D8E3F0',\r\n                colorTo: '#BED1E6',\r\n                stops: [0, 100],\r\n                opacityFrom: 0.4,\r\n                opacityTo: 0.5,\r\n              }\r\n            }\r\n          },\r\n          tooltip: {\r\n            enabled: true,\r\n          }\r\n        },\r\n        yaxis: {\r\n          axisBorder: {\r\n            show: false\r\n          },\r\n          axisTicks: {\r\n            show: false,\r\n          },\r\n          labels: {\r\n            show: false,\r\n            formatter: function (val) {\r\n              return val + \"%\";\r\n            }\r\n          }\r\n        \r\n        },\r\n        title: {\r\n          text: props.text,\r\n        \r\n          offsetY: 0,\r\n          align: 'center',\r\n          style: {\r\n            color: '#444',\r\n       \r\n          }\r\n        }\r\n      }) \r\n    \r\n        \r\n\r\n    return (\r\n       \r\n   \r\n\r\n        <Chart height={240} width={\"100%\"} options={options} series={series} type=\"bar\"  />\r\n\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport Chart from \"react-apexcharts\";\r\nexport default function BarChart(props) {\r\n    const [series,setSeries]=useState([{\r\n      name: 'Monto ($)',\r\n      data: [props.factura, props.caja]\r\n    }])\r\n      const [options,setOptions]=useState({\r\n        chart: {\r\n            type: 'bar',\r\n            height: 350\r\n          },\r\n          plotOptions: {\r\n            bar: {\r\n              borderRadius: 4,\r\n              horizontal: true,\r\n            }\r\n          },\r\n          dataLabels: {\r\n            enabled: false\r\n          },\r\n          xaxis: {\r\n            categories: ['Ventas', 'Caja'\r\n            ],\r\n          },  title: {\r\n            text: props.text,\r\n          \r\n            offsetY: 0,\r\n            align: 'center',\r\n            style: {\r\n              color: '#444',\r\n         \r\n            }\r\n          }\r\n        \r\n      }) \r\n    \r\n        \r\n\r\n    return (\r\n       \r\n   \r\n\r\n        <Chart height={240} width={\"100%\"} options={options} series={series} type=\"bar\"  />\r\n\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport Chart from \"react-apexcharts\";\r\nexport default function BarChart(props) {\r\n    const [series,setSeries]=useState([props.compras,props.ventas])\r\n      const [options,setOptions]=useState({\r\n        chart: {\r\n            width: 380,\r\n            type: 'pie',\r\n          },\r\n          labels: ['Compras', 'Ventas'],\r\n          title: {\r\n            text: props.text,\r\n          \r\n            offsetY: 0,\r\n            align: 'center',\r\n            style: {\r\n              color: '#444',\r\n         \r\n            }\r\n          }\r\n        \r\n      }) \r\n    \r\n        \r\n\r\n    return (\r\n       \r\n   \r\n\r\n        <Chart height={240} width={\"100%\"} options={options} series={series} type=\"pie\"  />\r\n\r\n    )\r\n}\r\n","export const dateFormat=(fecha)=>{\r\n\r\n    let dayInicio=fecha.getDate()<10?'0'+fecha.getDate():fecha.getDate()\r\n    let monthInicio=(fecha.getMonth()+1)<10?'0'+(fecha.getMonth()+1):(fecha.getMonth()+1)\r\n    let fechaFinal=dayInicio+'/'+monthInicio+'/'+fecha.getFullYear()+\" \"+fecha.getTime()\r\n    return fechaFinal\r\n}\r\nexport const  toIsoDate=(date)=> {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\n \r\nexport const dateFormatA=(fecha)=>{\r\n\r\n    let dayInicio=fecha.getDate()<10?'0'+fecha.getDate():fecha.getDate()\r\n    let monthInicio=(fecha.getMonth()+1)<10?'0'+(fecha.getMonth()+1):(fecha.getMonth()+1)\r\n    let fechaFinal=dayInicio+'/'+monthInicio+'/'+fecha.getFullYear()\r\n    return fechaFinal\r\n}\r\nexport const utcDate=(fecha)=>{\r\n    let fechaFinal=null\r\nif(fecha!=null){\r\n    let dayInicio=fecha.getDate()<10?'0'+fecha.getDate():fecha.getDate()\r\n    let monthInicio=(fecha.getMonth()+1)<10?'0'+(fecha.getMonth()+1):(fecha.getMonth()+1)\r\n   fechaFinal=fecha.getFullYear()+'-'+monthInicio+'-'+dayInicio\r\n}\r\n\r\n    return fechaFinal\r\n}\r\nexport const getHours=(fecha)=>{\r\n\r\n    let fechaFinal=fecha.getHours()+':'+fecha.getMinutes()\r\n    return fechaFinal\r\n}\r\nexport const convertirDate=(dateString)=>{\r\n    if(dateString!=\"\"){\r\n        \r\n        let dateParts = dateString.split(\"/\");\r\n        let dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]); \r\n        return dateObject \r\n    }else{\r\n        return '';\r\n    }\r\n\r\n}\r\n","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const editarSistema = (id,data, store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"polls/\"+id;\r\n    let setting = {\r\n      method: \"PUT\",\r\n      url: url,\r\n      params:data,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const eliminarPool = (id,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"polls/\"+id;\r\n    \r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\nexport const registrarSistema = (data,store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"polls\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\nexport const obtenerTodos = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"polls\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const evaluar = (data,store,setIdPoll) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"polls\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         setIdPoll(response.id_poll)\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\n  export const obtenerPool = (id,setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"polls/\"+id\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerPool2 = (id,setData,setData2,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"polls/\"+id\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData(response.data)\r\n      setData2(response.data.answers)\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerPoolResult = (id,setData,setData2,setData3,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"poll_result/\"+id\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n     if(response.data.length!=0){\r\n      setData3({\r\n        poll:response.data.poll.name,\r\n        poll_score:response.data.poll.score,\r\n       description:response.data.poll.descripcion,\r\n       system:response.data.system.name\r\n     \r\n      }\r\n       )\r\n    }\r\n    \r\n      setData(response.data.metric)\r\n      setData2(response.data.score)\r\n   \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n} \r\nexport const obtenerFeatureResult = (data,setLabels,setValues,setData) => {\r\n\r\nlet url = ENTRYPOINT+\"features_result\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  params:data,\r\n  headers: { 'Accept': 'application/json',\r\n }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n    \r\n      setData(response.data.data)\r\n      setLabels(response.data.sub_caracteristica)\r\n      setValues(response.data.score)\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n} \r\nexport const obtenerPanelResult = (setData,setLabels,setValues,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  let url = ENTRYPOINT+\"obtener_panel_result\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, \r\n\r\n   }\r\n  \r\n  };\r\n  \r\n  \r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n      setData(response.data)\r\n        setLabels(response.data1.labels)\r\n        setValues(response.data1.values)\r\n  \r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n  \r\n  \r\n    });\r\n  } \r\n  \r\n  export const obtenerMetricasSistemas = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n    let url = ENTRYPOINT+\"metrics_systems\"\r\n    let setting = {\r\n      method: \"Get\",\r\n      url: url,\r\n      headers: { 'Accept': 'application/json',    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, \r\n  \r\n     }\r\n    \r\n    };\r\n    \r\n    \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n       if(response.type!=\"error\"){\r\n        setData(response.data)\r\n\r\n       }else{\r\n       \r\n       }\r\n      })\r\n      .catch((error) => {\r\n       \r\n    \r\n    \r\n      });\r\n    } \r\n    \r\n\r\n    export const editarPoll = (id,data, store,carga) => {\r\n      const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n     \r\n   \r\n      let url = ENTRYPOINT+\"polls/\"+id;\r\n      let setting = {\r\n        method: \"PUT\",\r\n        url: url,\r\n        params:data,\r\n        data: data,\r\n        body: data,\r\n        headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n      };\r\n      mostrarLoader(true);\r\n    \r\n      axios(setting)\r\n        .then((res) => {\r\n          let response = res.data;\r\n          if (response.type != \"error\") {\r\n           carga()\r\n            mostrarLoader(false);\r\n            mostrarNotificacion({ type: \"success\", message: response.message });\r\n          } else {\r\n            mostrarNotificacion({ type: \"error\", message: response.message });\r\n            mostrarLoader(false);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          mostrarLoader(false);\r\n    \r\n          mostrarNotificacion({ type: \"error\", message: error.message });\r\n        });\r\n    };","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\n\r\nexport const obtenerTodosPorPoll = (id,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"showByPoll/\"+id\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData(response.data)\r\n   \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerTodos = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"metrics\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerPreguntas = (data,setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"questions\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    params:data,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerOpciones = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"options\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const editarUnidad= (id,data, store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"invoices/\"+id;\r\n    let setting = {\r\n      method: \"PUT\",\r\n      url: url,\r\n      params:data,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const eliminarUnidad = (id,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"invoices/\"+id;\r\n    \r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\n  export const anularFactura = (id,store,carga) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"invoices/cancel/\"+id;\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          carga()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n          carga()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\nexport const registrarUnidad = (data,store,    limpiar,imprimir) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"invoices\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          limpiar()\r\n          imprimir(response.numero_factura)\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\nexport const obtenerTodos = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"invoices\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerSistemaEvaluaciones = (setLabels,setValues,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"systems_evaluations\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setLabels(response.data.system)\r\n      setValues(response.data.count)\r\n\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n","export default __webpack_public_path__ + \"static/media/noValue.30b18636.svg\";","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const obtenerComprasYVentas = (setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"sales_purchases\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\nmostrarLoader(true)\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n      if(response.type!=\"error\"){\r\n          setData(response.data)\r\n      \r\n          mostrarLoader(false)\r\n\r\n      }else{\r\n       \r\n          mostrarLoader(false)\r\n\r\n      }\r\n  })\r\n  .catch((error) => {\r\n   \r\n      mostrarLoader(false)\r\n\r\n  });\r\n}\r\n\r\nexport const obtenerVentasCaja = (setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"sales_cash\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\nmostrarLoader(true)\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n      if(response.type!=\"error\"){\r\n          setData(response.data)\r\n      \r\n          mostrarLoader(false)\r\n\r\n      }else{\r\n       \r\n          mostrarLoader(false)\r\n\r\n      }\r\n  })\r\n  .catch((error) => {\r\n   \r\n      mostrarLoader(false)\r\n\r\n  });\r\n}\r\nexport const obtenerKpisPanel = (params,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\nlet url = ENTRYPOINT+\"kpis\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  params:params,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\nmostrarLoader(true);\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData(response.data)\r\n      mostrarLoader(false);\r\n      mostrarNotificacion({ type: \"success\", message: response.message });\r\n\r\n   }else{\r\n    mostrarNotificacion({ type: \"error\", message: response.message });\r\n    mostrarLoader(false);\r\n   }\r\n  })\r\n  .catch((error) => {\r\n    mostrarLoader(false);\r\n\r\n\r\n  });\r\n}\r\n\r\nexport const obtenerStatusPorSupervisor = (supervisor,setData1,store,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\nlet supervisor_id = supervisor \r\nif(JSON.parse(desencriptarJson(usuario)).user.type_user == \"supervisor\"){\r\n  supervisor_id = JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n}\r\n\r\nlet url = ENTRYPOINT+\"clients/status_by_supervisor?supervisor_id=\"+supervisor_id+\"&min=\"+min+\"&max=\"+max\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData1({values:response.data,labels:response.types})\r\n     \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerStatusPorAsesor = (asesor,setData1,store,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\nlet asesor_id = asesor \r\nif(JSON.parse(desencriptarJson(usuario)).user.type_user == \"asessor\"){\r\n  asesor_id = JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n}\r\n\r\nlet url = ENTRYPOINT+\"clients/status_by_asesor?asesor_id=\"+asesor_id+\"&min=\"+min+\"&max=\"+max\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData1({values:response.data,labels:response.types})\r\n     \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerClientesPorPaso = (setData1,store,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\nlet url = ENTRYPOINT+\"clients_by_step\"+\"?min=\"+min+\"&max=\"+max\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData1({values:response.clients,labels:response.types})\r\n     \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerKpis = (setData1,setData2,setData3,setData4,store,min,max) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n \r\n  let url = ENTRYPOINT+\"kpis\"+\"?min=\"+min+\"&max=\"+max\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData1(response.leads)\r\n        setData2(response.asessors)\r\n        setData3(response.supervisors)\r\n      //  setData4(response.leads)\r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerKpisA = (setData1,setData2,setData3,store,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\nlet query = \"\"\r\n  if(JSON.parse(desencriptarJson(usuario)).user.type_user == \"asessor\"){\r\n    query = \"asesor_id=\"+JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n}else{\r\n  query = \"supervisor_id=\"+JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n}\r\nlet url = ENTRYPOINT+\"kpis?min=\"+min+\"&max=\"+max+\"&\"+query\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData1(response.leads)\r\n      setData2(response.citas)\r\n      setData3(response.calls)\r\n\r\n   }else{\r\n   console.log(\"error\")\r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerKpisR = (setData1,store,asesor,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  let id_asesor=JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n  if(asesor!=''){\r\n    id_asesor = asesor\r\n  }\r\nlet url = ENTRYPOINT+\"kpis_performance?asesor_id=\"+id_asesor+\"&min=\"+min+\"&max=\"+max\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData1({citations1:response.citas,citations2:response.citas_efectivas,calls1:response.calls,calls2:response.calls_efectivas})\r\n     \r\n \r\n\r\n   }else{\r\n   console.log(\"error\")\r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n\r\nexport const getFactibilidad = (setData,store,asesor_id,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n \r\nlet url = ENTRYPOINT+'getFactibilidad?id_asesor='+asesor_id+\"&min=\"+min+\"&max=\"+max\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n    let temp =response.data\r\n    \r\n   \r\n     setData(temp)\r\n\r\n\r\n      \r\n      \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerEstadoProspectos = (setData,store,asesor_id,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  let id_asesor=JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n  if(asesor_id!=''){\r\n    id_asesor = asesor_id\r\n  }\r\nlet url = ENTRYPOINT+'client/get_purchase_status?asesor_id='+id_asesor+\"&min=\"+min+\"&max=\"+max\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n    let temp =response.data\r\n    let values = []\r\n    let label = []\r\n    temp.map((e)=>{\r\n      values.push(e.count)\r\n      if(e.estado_compra==0){\r\n        label.push('Bajo (No esta decidido)')\r\n      }else if(e.estado_compra==1){\r\n        label.push('Medio (Va a comprar en un mes)')\r\n        \r\n      }else if(e.estado_compra==2){\r\n        label.push('Alto (Va a comprar en 8 días)')\r\n      }\r\n      \r\n    })\r\n   \r\n     setData({value:values,label:label})\r\n\r\n\r\n      \r\n      \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerGoalEffeectiveCitations = (setData,store,asesor,month,year) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n /*  let id_asesor=JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n  if(asesor_id!=''){\r\n    id_asesor = asesor_id\r\n  } */\r\n\r\nlet url = ENTRYPOINT+'goals/get_effective_citations?asesor='+asesor+\"&month=\"+month+\"&year=\"+year\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n   \r\n\r\n     setData({total_performance:response.total_performance,obtained:response.obtained,goal:response.global_goal,performance:response.performance,label:response.categories})\r\n\r\n\r\n      \r\n      \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n\r\nexport const obtenerMetasObtenidasPorSupervisor = (data,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n /*  let id_asesor=JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n  if(asesor_id!=''){\r\n    id_asesor = asesor_id\r\n  } */\r\n\r\nlet url = ENTRYPOINT+'goals/get_obtained_supervisor'\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,},\r\n  params: data\r\n};\r\n\r\nmostrarLoader(true)\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n   \r\nlet values=[]\r\nlet labels=[]\r\nlet obtained=[]\r\n\r\nresponse.data.map((e)=>{\r\n  values.push(e.goal!=null?e.goal:0)\r\n  obtained.push(e.obtained!=null?e.obtained:0)\r\n labels.push(e.names.replace(/ .*/,'')+\" \"+e.last_names.replace(/ .*/,''))\r\n})\r\n\r\nsetData({goal:values,labels:labels,obtained:obtained})\r\n \r\n\r\n      \r\n      \r\n     mostrarLoader(false)\r\n\r\n   }else{\r\n    mostrarLoader(false)\r\n\r\n   }\r\n  })\r\n  .catch((error) => {\r\n    mostrarLoader(false)\r\n\r\n\r\n\r\n  });\r\n}\r\nexport const obtenerMetasPorAsesor = (data,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n /*  let id_asesor=JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n  if(asesor_id!=''){\r\n    id_asesor = asesor_id\r\n  } */\r\n\r\nlet url = ENTRYPOINT+'goals/get_by_asesor'\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,},\r\n  params: data\r\n};\r\n\r\nmostrarLoader(true)\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n   \r\nlet values=[]\r\nlet labels=[]\r\n\r\nresponse.data.map((e)=>{\r\n  values.push(e.goal)\r\n  labels.push(e.names.replace(/ .*/,'')+\" \"+e.last_names.replace(/ .*/,''))\r\n})\r\nsetData({values:values,labels:labels})\r\n     //setData({total_performance:response.total_performance,obtained:response.obtained,goal:response.global_goal,performance:response.performance,label:response.categories})\r\n\r\n\r\n      \r\n      \r\n     mostrarLoader(false)\r\n\r\n   }else{\r\n    mostrarLoader(false)\r\n\r\n   }\r\n  })\r\n  .catch((error) => {\r\n    mostrarLoader(false)\r\n\r\n\r\n\r\n  });\r\n}\r\nexport const obtenerMetasPorSupervisor = (data,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n /*  let id_asesor=JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n  if(asesor_id!=''){\r\n    id_asesor = asesor_id\r\n  } */\r\n\r\nlet url = ENTRYPOINT+'goals/get_by_supervisor'\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,},\r\n  params: data\r\n};\r\n\r\nmostrarLoader(true)\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n   \r\nlet values=[]\r\nlet labels=[]\r\nlet ids=[]\r\nresponse.data.map((e)=>{\r\n  ids.push(e.id)\r\n  values.push(e.goal)\r\n  labels.push(e.month.trim())\r\n})\r\nsetData({ids:ids,values:values,labels:labels})\r\n     //setData({total_performance:response.total_performance,obtained:response.obtained,goal:response.global_goal,performance:response.performance,label:response.categories})\r\n\r\n\r\n      \r\n      \r\n     mostrarLoader(false)\r\n\r\n   }else{\r\n    mostrarLoader(false)\r\n\r\n   }\r\n  })\r\n  .catch((error) => {\r\n    mostrarLoader(false)\r\n\r\n\r\n\r\n  });\r\n}\r\nexport const obtenerCitasPorSemana = (setData1,setData2,store,asesor,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  let id_asesor=JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n  if(asesor!=''){\r\n    id_asesor = asesor\r\n  }\r\nlet url = ENTRYPOINT+\"citations_by_week?asesor_id=\"+id_asesor+\"&min=\"+min+\"&max=\"+max\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n /*     console.log(JSON.stringify(response))\r\n  \r\n     let citas = response.citas\r\n     let citas_efectivas = response.citas_efectivas\r\n    let value1 = []\r\n    let label1 = []\r\n\r\n    let value2 = []\r\n    let label2 = []\r\n\r\n    citas.map((e)=>{\r\n      label1.push(e.range)\r\n      value1.push(e.count)\r\n    })\r\n    citas_efectivas.map((e)=>{\r\n      label2.push(e.range)\r\n      value2.push(e.count)\r\n    })\r\n */\r\n    // setData1({values:value1,labels:label1})\r\n    // setData2({values:value2,labels:label2})\r\n\r\n    setData1({data:response.citas,backup:response.citas})\r\n    setData2({data:response.citas_efectivas,backup:response.citas_efectivas})\r\n\r\n   }else{\r\n   console.log(\"error\")\r\n   }\r\n  })\r\n  .catch((error) => {\r\n    console.log(error)\r\n\r\n\r\n  });\r\n}\r\nexport const obtenerLlamadasPorSemana = (setData1,setData2,store,asesor,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  let id_asesor=JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n  if(asesor!=''){\r\n    id_asesor = asesor\r\n  }\r\nlet url = ENTRYPOINT+\"calls_by_week?asesor_id=\"+id_asesor+\"&min=\"+min+\"&max=\"+max\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n/*      console.log(response)\r\n     let citas = response.calls\r\n     let citas_efectivas = response.calls_efectivas\r\n    let value1 = []\r\n    let label1 = []\r\n\r\n    let value2 = []\r\n    let label2 = []\r\n\r\n    citas.map((e)=>{\r\n      label1.push(e.range)\r\n      value1.push(e.count)\r\n    })\r\n    citas_efectivas.map((e)=>{\r\n      label2.push(e.range)\r\n      value2.push(e.count)\r\n    })\r\n\r\n     setData1({values:value1,labels:label1})\r\n     setData2({values:value2,labels:label2}) */\r\n     \r\n     setData1({data:response.calls,backup:response.calls})\r\n     setData2({data:response.calls_efectivas,backup:response.calls_efectivas})\r\n\r\n   }else{\r\n   console.log(\"error\")\r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n\r\nexport const obtenerClientesPorMes = (setData1,store,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  let query = \"\"\r\n  if(JSON.parse(desencriptarJson(usuario)).user.type_user == \"asessor\"){\r\n    query = \"asesor_id=\"+JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n}else if(JSON.parse(desencriptarJson(usuario)).user.type_user == \"supervisor\"){\r\n  query = \"supervisor_id=\"+JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n}\r\nlet url = ENTRYPOINT+\"clients_by_month\"+\"?min=\"+min+\"&max=\"+max+\"&\"+query\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData1({data:response.clients,backup:response.clients})\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerCitasAsesores = (setData1,setData2,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n \r\n  let url = ENTRYPOINT+\"cites_by_monthAll\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData1(response.clients)\r\n        setData2(response.months)\r\n       \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerCitasPorMes = (setData1,setData2,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\nlet url = ENTRYPOINT+\"cites_by_month?asesor_id=\"+JSON.parse(desencriptarJson(usuario)).user.user_ca\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData1(response.clients)\r\n      setData2(response.months)\r\n     \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n\r\n\r\nexport const obtenerClientesPorTipo = (setData1,setData2,store,min,max) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n \r\n  let url = ENTRYPOINT+\"clients_by_type\"+\"?min=\"+min+\"&max=\"+max\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData1(response.clients)\r\n        setData2(response.types)\r\n       \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerAsesoresPorProduccion = (setData1,setData2,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n \r\n  let url = ENTRYPOINT+\"assesors_by_production\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData1(response.assesors)\r\n        setData2(response.productions)\r\n       \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerSupervisorProProduccion = (setData1,setData2,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\nlet url = ENTRYPOINT+\"supervisors_by_production\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData1(response.assesors)\r\n      setData2(response.productions)\r\n     \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n\r\n\r\nexport const obtenerLeadsPorMes = (setData1,setData2,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\nlet url = ENTRYPOINT+\"assesors/leads_month?asesor_id=\"+JSON.parse(desencriptarJson(usuario)).user.user_ca\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData1(response.leads)\r\n      setData2(response.months)\r\n     \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerKpisAsesor = (setData4,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\nlet url = ENTRYPOINT+\"assesors/pending_leads?asesor_id=\"+JSON.parse(desencriptarJson(usuario)).user.user_ca\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n    setData4(response.leads)\r\n     \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { utcDate } from '../../../utils/Date'\r\nimport {\r\n    DatePicker,\r\n    KeyboardDatePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport es from 'date-fns/locale/es'\r\nimport { Grid, IconButton } from '@material-ui/core';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const getFirst = () => {\r\n        let date = new Date();\r\n        let primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\r\n\r\n        return primerDia\r\n    }\r\n    const getLast = () => {\r\n        let date = new Date();\r\n\r\n        let ultimoDia = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n        return ultimoDia\r\n    }\r\n    return (\r\n        <div>\r\n  \r\n\r\n            <IconButton aria-label=\"abrirmodal\" onClick={handleClickOpen}>\r\n                <DateRangeIcon />\r\n                </IconButton>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">Filtros</DialogTitle>\r\n                <DialogContent>\r\n                \r\n               \r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} style={{display:'flex',justifyContent:'space-between',alignItems:'center'}}>\r\n\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Seleccione el rango de fechas para filtrar.\r\n                        \r\n                        </DialogContentText>\r\n                 \r\n                    <Button onClick={()=>{\r\n                        props.setDesde(getFirst())\r\n                        props.setHasta(getLast())\r\n                   \r\n                    }}  color=\"default\" variant=\"outlined\">MES ACTUAL</Button>\r\n                  \r\n                    </Grid>\r\n\r\n                        <Grid item md={6} xs={12}>\r\n\r\n\r\n                            <MuiPickersUtilsProvider style={{ width: \"100%\" }} utils={DateFnsUtils} locale={es}>\r\n                                <KeyboardDatePicker\r\n                                    autoOk\r\n                                    \r\n                                    ampm={false}\r\n                                    size=\"small\"\r\n                                    inputVariant=\"outlined\"\r\n                                    label=\"Desde\"\r\n                                    style={{ width: \"100%\" }}\r\n                                    // disablePast\r\n                                    format=\"yyyy-MM-dd\"\r\n                                    value={props.desde}\r\n\r\n                                    onChange={date => props.setDesde(date)}\r\n                                />\r\n\r\n\r\n                            </MuiPickersUtilsProvider>\r\n\r\n\r\n                        </Grid>\r\n                        <Grid item md={6} xs={12}>\r\n\r\n\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n                                <KeyboardDatePicker\r\n                                    autoOk\r\n                                    \r\n                                    ampm={false}\r\n                                    size=\"small\"\r\n                                    inputVariant=\"outlined\"\r\n                                    label=\"Hasta\"\r\n                                    style={{ width: \"100%\" }}\r\n                                    // disablePast\r\n                                    format=\"yyyy-MM-dd\"\r\n                                    value={props.hasta}\r\n\r\n                                    onChange={date => props.setHasta(date)}\r\n                                />\r\n\r\n\r\n                            </MuiPickersUtilsProvider>\r\n\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                   \r\n                    <Button onClick={handleClose}  color=\"primary\">\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button onClick={()=>{\r\n                        props.filtrarFecha()\r\n                        handleClose()\r\n                    }} color=\"primary\">\r\n                        Aceptar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","\r\nimport {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const downloadFiles = (tipo,store,filter) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n    let params = \"\"\r\n  if (filter.length != 0) {\r\n    filter.map((e) => {\r\n      params += \"&\" + e.tipo + \"=\" + e.valor\r\n    })\r\n  }\r\n    let url = ENTRYPOINT+\"reporte?tipo=\"+tipo+params;\r\n    let setting = {\r\n      method: \"GET\",\r\n\r\n      url: url,\r\n      responseType: 'blob',\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if(res.data.type!=\"error\"){\r\n      \r\n\r\n          var _url = window.URL.createObjectURL(new Blob([response], { type: \"application/pdf\" }));\r\n          window.open(_url, \"_blank\").focus(); // window.open + focus\r\n\r\n        \r\n          mostrarLoader(false);\r\n        \r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          \r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n     \r\n      });\r\n  };\r\n\r\n\r\n\r\n  export const ObtenerGrafico1 = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"sales/last_months\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\n  export const printTicket = (id,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"print_invoice/\"+id;\r\n    let setting = {\r\n      method: \"GET\",\r\n\r\n      url: url,\r\n      responseType: 'blob',\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if(res.data.type!=\"error\"){\r\n      \r\n\r\n          var _url = window.URL.createObjectURL(new Blob([response], { type: \"application/pdf\" }));\r\n          window.open(_url, \"_blank\").focus(); // window.open + focus\r\n\r\n        \r\n          mostrarLoader(false);\r\n        \r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          \r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n     \r\n      });\r\n  };","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const editar= (id,data, store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"clients/\"+id;\r\n    let setting = {\r\n      method: \"PUT\",\r\n      url: url,\r\n      params:data,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const eliminar = (id,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"clients/\"+id;\r\n    \r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\n  export const registrarDesglose = (data,store,carga) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"splits\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          carga()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n          carga()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\nexport const registrar = (data,store,carga) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"cash\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          carga()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n          carga()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\n  \r\n  export const obtenerDesglose = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"splits\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n  mostrarLoader(true)\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n        if(response.type!=\"error\"){\r\n            setData(response.data)\r\n        \r\n            mostrarLoader(false)\r\n\r\n        }else{\r\n     \r\n            mostrarLoader(false)\r\n\r\n        }\r\n    })\r\n    .catch((error) => {\r\n      \r\n        mostrarLoader(false)\r\n\r\n    });\r\n}\r\nexport const obtenerDesglosePorId = (id,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"splits/\"+id\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\nmostrarLoader(true)\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n      if(response.type!=\"error\"){\r\n          setData(response.data)\r\n      \r\n          mostrarLoader(false)\r\n\r\n      }else{\r\n   \r\n          mostrarLoader(false)\r\n\r\n      }\r\n  })\r\n  .catch((error) => {\r\n    \r\n      mostrarLoader(false)\r\n\r\n  });\r\n}\r\n  export const obtenerHistoricoCajas = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"cash\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n  mostrarLoader(true)\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n        if(response.type!=\"error\"){\r\n            setData(response.data)\r\n        \r\n            mostrarLoader(false)\r\n            mostrarNotificacion({ type: \"success\", message: response.message });\r\n\r\n        }else{\r\n            setData(response.abierta)\r\n              mostrarNotificacion({ type: \"error\", message: response.message });\r\n            mostrarLoader(false)\r\n\r\n        }\r\n    })\r\n    .catch((error) => {\r\n      \r\n        mostrarLoader(false)\r\n\r\n    });\r\n}\r\nexport const estaAbiertaCaja = (setData,store,msg) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"cash_is_open\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n  mostrarLoader(true)\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n        if(response.type!=\"error\"){\r\n            setData(response.abierta)\r\n        \r\n            mostrarLoader(false)\r\n\r\n        }else{\r\n            setData(response.abierta)\r\n            if(msg){\r\n              mostrarNotificacion({ type: \"error\", message: response.message });\r\n\r\n            }\r\n            mostrarLoader(false)\r\n\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        setData(0)\r\n        mostrarLoader(false)\r\n\r\n    });\r\n}\r\nexport const obtenerSistemaEvaluaciones = (setLabels,setValues,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"systems_evaluations\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setLabels(response.data.system)\r\n      setValues(response.data.count)\r\n\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Initializer from '../../store/Initializer'\r\nimport Tabs from '@material-ui/core/Tabs';\r\n\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { LocalizationTable, TableIcons, removeAccent } from '../../utils/table.js'\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid, IconButton } from '@material-ui/core';\r\nimport { obtenerSistemaEvaluaciones, obtenerTodos } from '../../utils/API/sistemas.js';\r\nimport Crear from './components/Crear'\r\nimport Eliminar from './components/Eliminar'\r\nimport { obtenerTodos as obtenerMetricasSistemas } from '../../utils/API/clientes';\r\nimport Bar from './components/Bar';\r\nimport BarVertical from './components/BarVertical';\r\nimport PieChart from './components/PieChart';\r\n\r\nimport { utcDate } from '../../utils/Date'\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Tab2 from './components/Tab2';\r\nimport { obtenerTodos as obtenerTodosS } from '../../utils/API/facturas';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Radio from './components/Radio';\r\nimport noValue from '../../assets/noValue.svg'\r\nimport { obtenerComprasYVentas, obtenerKpisPanel, obtenerVentasCaja } from '../../utils/API/dashboard';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport FiltroPanel from './components/FiltroPanel';\r\nimport { ObtenerGrafico1 } from '../../utils/API/reporte';\r\nimport { estaAbiertaCaja } from '../../utils/API/cajas';\r\nimport { Alert } from '@material-ui/lab';\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    card: {\r\n        backgroundColor: \"#5e35b1\",\r\n        color: '#fff',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        '&:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: '#4527a0',\r\n            borderRadius: '50%',\r\n            top: '-85px',\r\n            right: '-95px',\r\n            [theme.breakpoints.down('xs')]: {\r\n                top: '-105px',\r\n                right: '-140px'\r\n            }\r\n        },\r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: '#4527a0',\r\n            borderRadius: '50%',\r\n            top: '-125px',\r\n            right: '-15px',\r\n            opacity: 0.5,\r\n            [theme.breakpoints.down('xs')]: {\r\n                top: '-155px',\r\n                right: '-70px'\r\n            }\r\n        }\r\n    },\r\n    card2: {\r\n        backgroundColor: \"#5e35b1\",\r\n        color: '#fff',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        '&:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: '#1565c0',\r\n            borderRadius: '50%',\r\n            top: '-85px',\r\n            right: '-95px',\r\n            [theme.breakpoints.down('xs')]: {\r\n                top: '-105px',\r\n                right: '-140px'\r\n            }\r\n        },\r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: '#1565c0',\r\n            borderRadius: '50%',\r\n            top: '-125px',\r\n            right: '-15px',\r\n            opacity: 0.5,\r\n            [theme.breakpoints.down('xs')]: {\r\n                top: '-155px',\r\n                right: '-70px'\r\n            }\r\n        }\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\nexport default function Sistemas(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const classes = useStyles();\r\n\r\n    const [data, setData] = React.useState(null)\r\n    const [data0, setData0] = React.useState([])\r\n    const [desde, setDesde] = React.useState(null)\r\n    const [hasta, setHasta] = React.useState(null)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [open2, setOpen2] = React.useState(false)\r\n    const [selected, setSelected] = React.useState(null)\r\n    const [selected2, setSelected2] = React.useState(null)\r\n    const [values, setValues] = React.useState([])\r\n    const [labels, setLabels] = React.useState([])\r\n    const [values2, setValues2] = React.useState([])\r\n    const [labels2, setLabels2] = React.useState([])\r\n    const [value, setValue] = React.useState(0);\r\n    const [sistemas, setSistemas] = React.useState([])\r\n    const [sistema, setSistema] = React.useState('')\r\n    const [data1, setData1] = React.useState({ventas:[],cantidad:[],meses:[]})\r\n    const [cajaAbierta, setCajaAbierta] = React.useState(null)\r\n    const [comprasVentas, setComprasVentas] = React.useState({ventas:[],compras:[]})\r\n    const [cajaVenta, setCajaVenta] = React.useState({factura:[],caja:[]})\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerKpisPanel({desde:utcDate(getFirst()),hasta:utcDate(getLast())},setData, initializer)\r\n            estaAbiertaCaja(setCajaAbierta, initializer,false)\r\n            obtenerComprasYVentas(setComprasVentas,initializer)\r\n\r\n            obtenerVentasCaja(setCajaVenta,initializer)\r\n            ObtenerGrafico1(setData1,initializer)\r\n            setDesde(getFirst())\r\n            setHasta(getLast())\r\n        }\r\n    }, [initializer.usuario])\r\n    const getFirstLast = () => {\r\n        return \"(\" + utcDate(desde) + \" hasta \" + utcDate(hasta) + \")\"\r\n      }\r\n    const getFirst = () => {\r\n        let date = new Date();\r\n        let primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\r\n\r\n        return primerDia\r\n    }\r\n    const getLast = () => {\r\n        let date = new Date();\r\n\r\n        let ultimoDia = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n        return ultimoDia\r\n    }\r\n    const carga = () => {\r\n        obtenerKpisPanel(setData, initializer)\r\n        setSelected(null)\r\n        setSelected2(null)\r\n    }\r\n    const total = () => {\r\n        let tot = 0\r\n        data0.map((e) => {\r\n            tot += e.evaluaciones\r\n        })\r\n        return tot\r\n    }\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const getName = (id) => {\r\n        let object = null\r\n        sistemas.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n    const filtrarFecha=()=>{\r\n        obtenerKpisPanel({desde:utcDate(desde),hasta:utcDate(hasta)},setData, initializer)\r\n\r\n    }\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Crear sistema={selected} setSelected={setSelected} setOpen={setOpen} open={open} carga={carga} />\r\n            <Eliminar sistema={selected2} setOpen={setOpen2} open={open2} carga={carga} />\r\n            <Grid item xs={12} md={12} style={{display:'flex',justifyContent:'space-between'}}>\r\n                <Typography variant=\"h5\" >\r\n                    Dashboard <span style={{color:'#4527a0'}}>{getFirstLast()}</span>\r\n                </Typography> \r\n                \r\n                <FiltroPanel desde={desde} hasta={hasta} setDesde={setDesde} setHasta={setHasta} filtrarFecha={filtrarFecha}/>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} md={12} >\r\n                <Grid container spacing={2}>\r\n                <Grid item xs={12} md={12}>\r\n                        <Alert severity=\"info\">Caja: {cajaAbierta==0?'Cerrada':'Abierta'}</Alert>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <Card class={classes.card} style={{ width: '100%', height: 157, marginRight: 20, marginBottom: 5, backgroundColor: '#5e35b1', borderRadius: 12 }}>\r\n                            <CardContent>\r\n                                <Avatar variant=\"rounded\" style={{ zIndex: 1, height: 30, width: 30, position: 'absolute', top: 15, right: 10, backgroundColor: '#5e35b1', borderRadius: 5, marginBottom: 15 }} >\r\n                                    <IconButton aria-label=\"show 4 new mails\" color=\"inherit\" >\r\n\r\n                                        <MoreHorizIcon fontSize=\"small\" />\r\n                                    </IconButton>\r\n\r\n                                </Avatar>\r\n                                <Avatar variant=\"rounded\" style={{ marginTop: 5, backgroundColor: '#4527a0', borderRadius: 5, marginBottom: 15 }} >\r\n\r\n                                    <DescriptionOutlinedIcon />\r\n\r\n                                </Avatar>\r\n\r\n\r\n                                <Typography variant=\"h4\" style={{ color: 'white', fontSize: '2.125rem' }} >\r\n                                    {data != null ? data.ventas : 0}\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\" style={{ color: 'white' }} gutterBottom>\r\n                                    Número Ventas\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <Card class={classes.card2} style={{ width: '100%', height: 157, marginRight: 20, marginBottom: 5, backgroundColor: '#1e88e5', borderRadius: 12 }}>\r\n                            <CardContent>\r\n                                <Avatar variant=\"rounded\" style={{ zIndex: 1, height: 30, width: 30, position: 'absolute', top: 15, right: 10, backgroundColor: '#1e88e5', borderRadius: 5, marginBottom: 15 }} >\r\n                                    <IconButton aria-label=\"show 4 new mails\" color=\"inherit\" >\r\n\r\n                                        <MoreHorizIcon fontSize=\"small\" />\r\n                                    </IconButton>\r\n\r\n                                </Avatar>\r\n                                <Avatar variant=\"rounded\" style={{ marginTop: 5, backgroundColor: '#1565c0', borderRadius: 5, marginBottom: 15 }} >\r\n                                    <AttachMoneyIcon />\r\n                                </Avatar>\r\n\r\n\r\n                                <Typography variant=\"h4\" style={{ color: 'white', fontSize: '2.125rem' }} >\r\n                                    ${data != null ? data.monto.toFixed(2) : 0}\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\" style={{ color: 'white' }} gutterBottom>\r\n                                    Total ventas\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <Card class={classes.card} style={{ width: '100%', height: 157, marginRight: 20, marginBottom: 5, backgroundColor: '#5e35b1', borderRadius: 12 }}>\r\n                            <CardContent>\r\n                                <Avatar variant=\"rounded\" style={{ zIndex: 1, height: 30, width: 30, position: 'absolute', top: 15, right: 10, backgroundColor: '#5e35b1', borderRadius: 5, marginBottom: 15 }} >\r\n                                    <IconButton aria-label=\"show 4 new mails\" color=\"inherit\" >\r\n\r\n                                        <MoreHorizIcon fontSize=\"small\" />\r\n                                    </IconButton>\r\n\r\n                                </Avatar>\r\n                                <Avatar variant=\"rounded\" style={{ marginTop: 5, backgroundColor: '#4527a0', borderRadius: 5, marginBottom: 15 }} >\r\n                                    <PersonOutlineIcon />\r\n                                </Avatar>\r\n\r\n\r\n                                <Typography variant=\"h4\" style={{ color: 'white', fontSize: '2.125rem' }} >\r\n                                    {data != null ? data.clientes : 0}\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\" style={{ color: 'white' }} gutterBottom>\r\n                                    Número clientes\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <Card class={classes.card} style={{ width: '100%', height: 157, marginRight: 20, marginBottom: 5, backgroundColor: '#1e88e5', borderRadius: 12 }}>\r\n                            <CardContent>\r\n                                <Avatar variant=\"rounded\" style={{ zIndex: 1, height: 30, width: 30, position: 'absolute', top: 15, right: 10, backgroundColor: '#1e88e5', borderRadius: 5, marginBottom: 15 }} >\r\n                                    <IconButton aria-label=\"show 4 new mails\" color=\"inherit\" >\r\n\r\n                                        <MoreHorizIcon fontSize=\"small\" />\r\n                                    </IconButton>\r\n\r\n                                </Avatar>\r\n                                <Avatar variant=\"rounded\" style={{ marginTop: 5, backgroundColor: '#1565c0', borderRadius: 5, marginBottom: 15 }} >\r\n                                    <PeopleOutlineIcon />\r\n                                </Avatar>\r\n\r\n\r\n                                <Typography variant=\"h4\" style={{ color: 'white', fontSize: '2.125rem' }} >\r\n                                    {data != null ? data.proveedores : 0}\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\" style={{ color: 'white' }} gutterBottom>\r\n                                    Número proveedores\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n                <Grid item md={12} xs={12}>\r\n                <div style={{ marginTop: 15 }} >\r\n                    {\r\n                        data1.ventas.length != 0 && data1.cantidad.length != 0 && data1.meses.length != 0 ? (\r\n                            <Bar monto={data1.ventas} cantidad={data1.cantidad} meses={data1.meses} text=\"Ventas de los últimos 6 meses\"/>\r\n                        )\r\n                            :\r\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\r\n                                <img src={noValue} width={150} height={150} alt=\"\" srcset=\"\" />\r\n                                <p>No hay registros</p>\r\n                            </div>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </Grid>\r\n            <Grid item md={6} xs={12}>\r\n                <div style={{ marginTop: 15 }} >\r\n\r\n                {\r\n                        cajaVenta.factura != 0 && cajaVenta.caja != 0 ? (\r\n                            <BarVertical factura={cajaVenta.factura} caja={cajaVenta.caja} text=\"Ventas/Caja de hoy\"/>\r\n                            )\r\n                            :\r\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\r\n                                <img src={noValue} width={150} height={150} alt=\"\" srcset=\"\" />\r\n                                <p>No hay registros</p>\r\n                            </div>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </Grid>\r\n            <Grid item md={6} xs={12}>\r\n                <div style={{ marginTop: 15 }} >\r\n                \r\n                {\r\n                        comprasVentas.ventas != 0 && comprasVentas.compras != 0 ? (\r\n                            <PieChart ventas={comprasVentas.ventas} compras={comprasVentas.compras} text=\"Compras/Ventas de los 3 meses\"/>\r\n                            )\r\n                            :\r\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\r\n                                <img src={noValue} width={150} height={150} alt=\"\" srcset=\"\" />\r\n                                <p>No hay registros</p>\r\n                            </div>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </Grid>\r\n              {/* \r\n            <Grid item md={6} xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\r\n\r\n                {\r\n                    labels2.length != 0 && values2.length != 0 ? (\r\n                        <Radio values={values2} labels={labels2} />\r\n                    )\r\n                        :\r\n                        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\r\n\r\n                            <img src={noValue} width={150} height={150} alt=\"\" srcset=\"\" />\r\n                            <p>No hay registros</p>\r\n                        </div>\r\n                }\r\n\r\n\r\n            </Grid>\r\n            <Grid item md={6} xs={12}>\r\n                <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n\r\n                        { title: \"Sistema\", field: \"name\" },\r\n\r\n                        {\r\n                            title: \"Puntaje\", field: \"avg\", render: rowData => <span >{rowData.avg}%</span>\r\n                        },\r\n\r\n\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        data\r\n                    }\r\n                    localization={LocalizationTable}\r\n                    detailPanel={rowData => {\r\n                        return (\r\n                            <div style={{ padding: 10 }}>\r\n\r\n                                <MaterialTable\r\n                                    icons={TableIcons}\r\n                                    columns={[\r\n\r\n                                        { title: \"Métrica\", field: \"metric\", headerStyle: { fontWeight: 'bold' } },\r\n\r\n                                        { title: \"Puntaje\", field: \"avg\", render: rowData => <span >{parseFloat(rowData.avg).toFixed(2)}%</span> },\r\n\r\n\r\n\r\n\r\n                                    ]}\r\n                                    data={\r\n                                        rowData.detail\r\n                                    }\r\n                                    localization={LocalizationTable}\r\n\r\n                                    options={{\r\n                                        showTitle: false,\r\n                                        actionsColumnIndex: -1,\r\n                                        search: false,\r\n                                        header: false,\r\n                                        toolbar: false,\r\n                                        padding: 'dense',\r\n                                        headerStyle: {\r\n                                            textAlign: 'left'\r\n                                        },\r\n                                        pageSizeOptions: false,\r\n                                        cellStyle: {\r\n                                            textAlign: 'left'\r\n                                        },\r\n                                        paging: false,\r\n                                        searchFieldStyle: {\r\n\r\n                                            padding: 5\r\n                                        }\r\n                                    }}\r\n\r\n                                />\r\n                            </div>\r\n                        )\r\n                    }}\r\n                    title=\"Puntaje por sistemas\"\r\n                    options={{\r\n\r\n                        actionsColumnIndex: -1,\r\n                        search: false,\r\n                        maxBodyHeight: 350,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Grid>\r\n */}\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const guardar=()=>{\r\n        props.accion()\r\n        props.setOpen(false)\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            fullWidth={props.ancho}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => props.setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Confirmación</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    {props.titulo}\r\n                </DialogContentText>\r\n                {props.body}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                {\r\n                    props.hasOwnProperty('customAction')&&(\r\n                        props.customAction\r\n                    )\r\n                }\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Aceptar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const editar= (id,data, store,   limpiar) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"orders/\"+id;\r\n    let setting = {\r\n      method: \"PUT\",\r\n      url: url,\r\n      params:data,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          limpiar()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n          limpiar()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        limpiar()\r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const eliminar = (id,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"orders/\"+id;\r\n    \r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\n\r\n  \r\n  export const autorizarOrden = (id,store,carga) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"autorize_order/\"+id;\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         carga()\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\n  \r\n  export const anularCompra = (id,store,carga) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"orders/cancel/\"+id;\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          carga()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n          carga()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n    \r\n      });\r\n  }\r\n\r\nexport const registrar = (data,store,limpiar) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"orders\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          limpiar()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n          limpiar()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n        limpiar()\r\n      });\r\n  }\r\n\r\n  export const guardarAlmacen = (data,store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"transfers\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\n\r\n   \r\n  export const obtenerDetalleOrden = (order,setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"order_detail/\"+order\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerTodos = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"orders\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData.setData(response.data)\r\n        setData.setTotalCompras(response.total_compras)\r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\n\r\nexport const obtenerInventarioOrden = (id,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"order_inventory/\"+id\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n     let d=[]\r\n     response.data.map((e,i)=>{\r\n      d.push({...e,numero:(i+1)})\r\n     })\r\n      setData(d)\r\n   \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   console.log(error)\r\n\r\n\r\n  });\r\n}\r\nexport const cambiarEstado = (data,store,carga) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n  let url = ENTRYPOINT+\"change_order_status\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: data,\r\n    body: data,\r\n    headers: { Accept: \"application/json\",\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n       \r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n        carga()\r\n      } else {\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n}\r\n\r\nexport const obtenerStatusOrden = (setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"orders_status\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData(response.data)\r\n   \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerSistemaEvaluaciones = (setLabels,setValues,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"systems_evaluations\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setLabels(response.data.system)\r\n      setValues(response.data.count)\r\n\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const editar= (id,data, store,limpiar) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"suppliers/\"+id;\r\n    let setting = {\r\n      method: \"PUT\",\r\n      url: url,\r\n      params:data,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          limpiar()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const eliminar = (id,store,carga) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"suppliers/\"+id;\r\n    \r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          carga()\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\n  \r\nexport const subirFoto = (id,data,store,carga) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n  var resp = new FormData()\r\nfor ( var key in data ) {\r\n  resp.append(key, data[key]);\r\n}\r\n  let url = ENTRYPOINT+\"suppliers/upload_image/\"+id;\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: resp,\r\n    body: resp,\r\n    headers: { Accept: \"application/json\",\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        carga()\r\n      } else {\r\n      }\r\n    })\r\n    .catch((error) => {\r\n\r\n    });\r\n}\r\nexport const registrar = (data,store,limpiar) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    var resp = new FormData()\r\n    for ( var key in data ) {\r\n      resp.append(key, data[key]);\r\n    }\r\n    let url = ENTRYPOINT+\"suppliers\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: resp,\r\n      body: resp,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          limpiar()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\nexport const obtenerTodos = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"suppliers\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerSistemaEvaluaciones = (setLabels,setValues,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"systems_evaluations\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setLabels(response.data.system)\r\n      setValues(response.data.count)\r\n\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const editarUnidad= (id,data, store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"categories/\"+id;\r\n    let setting = {\r\n      method: \"PUT\",\r\n      url: url,\r\n      params:data,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const eliminarUnidad = (id,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"categories/\"+id;\r\n    \r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\nexport const registrarUnidad = (data,store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"categories\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\nexport const obtenerTodos = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"categories\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerSistemaEvaluaciones = (setLabels,setValues,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"systems_evaluations\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setLabels(response.data.system)\r\n      setValues(response.data.count)\r\n\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const editar = (id,data, store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"warehouses/\"+id;\r\n    let setting = {\r\n      method: \"PUT\",\r\n      url: url,\r\n      params:data,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const eliminar = (id,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"warehouses/\"+id;\r\n    \r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\nexport const registrar = (data,store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"warehouses\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\n  \r\n  export const obtenerInventario = (id,setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"warehouses/inventory/\"+id\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerTodos = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"warehouses\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerSistemaEvaluaciones = (setLabels,setValues,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"systems_evaluations\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setLabels(response.data.system)\r\n      setValues(response.data.count)\r\n\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const editarUnidad= (id,data, store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"unities/\"+id;\r\n    let setting = {\r\n      method: \"PUT\",\r\n      url: url,\r\n      params:data,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const eliminarUnidad = (id,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"unities/\"+id;\r\n    \r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\nexport const registrarUnidad = (data,store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"unities\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\nexport const obtenerTodos = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"unities\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerSistemaEvaluaciones = (setLabels,setValues,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"systems_evaluations\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setLabels(response.data.system)\r\n      setValues(response.data.count)\r\n\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Checkbox, FormControlLabel, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editarSistema, registrarSistema, subirFoto } from '../../../../utils/API/sistemas';\r\nimport { obtenerTodos as obtenerCategorias } from '../../../../utils/API/categories';\r\nimport { obtenerTodos as obtenerTodosBodegas } from '../../../../utils/API/bodegas';\r\n\r\nimport { obtenerTodos as obtenerUnidades } from '../../../../utils/API/unidades';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [nombre, setNombre] = React.useState(\"\")\r\n    const [barcode, setBarcode] = React.useState(\"\")\r\n    const [supplierCode, setSupplirCode] = React.useState(\"\")\r\n    const [serie, setSerie] = React.useState(\"\")\r\n    const [unity, setUnity] = React.useState(\"\")\r\n    const [unityData, setUnityData] = React.useState([])\r\n\r\n    const [category, setCategory] = React.useState(\"\")\r\n    const [categoryData, setCategoryData] = React.useState([])\r\n    const [image, setImage] = React.useState(null)\r\n    const [listPrice, setListPrice] = React.useState(\"\")\r\n    const [salePrice, setSalePrice] = React.useState(\"\")\r\n\r\n    const [stock, setStock] = React.useState(\"\")\r\n    const [stockMin, setStockMin] = React.useState(\"\")\r\n    const [stockMax, setStockMax] = React.useState(\"\")\r\n\r\n    const [hasIva, setHasIva] = React.useState(true)\r\n    const [fraction, setFraction] = React.useState(\"\")\r\n    const [descripcion, setDescripcion] = React.useState(\"\")\r\n\r\n    const [bodegaData, setBodegaData] = React.useState([])\r\n    const [bodega, setBodega] = React.useState('')\r\n     \r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n\r\n            obtenerCategorias(setCategoryData, initializer)\r\n            obtenerTodosBodegas(setBodegaData, initializer)\r\n\r\n            obtenerUnidades(setUnityData, initializer)\r\n        }\r\n\r\n    }, [initializer.usuario])\r\n    React.useEffect(() => {\r\n        if (props.sistema != null) {\r\n            setNombre(props.sistema.name)\r\n            setBarcode(props.sistema.bar_code)\r\n            setSupplirCode(props.sistema.supplier_code)\r\n            setUnity(props.sistema.unity_id)\r\n            setCategory(props.sistema.category_id)\r\n            setListPrice(props.sistema.list_price)\r\n            setSalePrice(props.sistema.sale_price)\r\n            setStockMax(props.sistema.max_stock)\r\n            setStock(props.sistema.stock)\r\n            setStockMin(props.sistema.min_stock)\r\n            setDescripcion(props.sistema.description)\r\n            setFraction(props.sistema.fraction)\r\n            setHasIva(props.sistema.has_iva)\r\n            setBodega(props.sistema.warehouse_id)\r\n\r\n        }\r\n    }, [props.sistema])\r\n    const subir = () => {\r\n        if (props.sistema != null) {\r\n            if (image != null) {\r\n                subirFoto(props.sistema.id, { url: image }, initializer, props.carga)\r\n            }\r\n        }\r\n    }\r\n    const validaciones=(key)=>{\r\n        let msg=\"\"\r\n        if(key.fraction<=0){\r\n            msg+=\"Fracción mínima debe ser 1\"\r\n\r\n        }\r\n        \r\n        if(msg!=\"\"){\r\n            initializer.mostrarNotificacion({ type: \"warning\", message: msg});\r\n            return false\r\n        }else{\r\n            return true\r\n        }\r\n\r\n    }\r\n    const guardar = () => {\r\n        let data = {\r\n            'name': nombre,\r\n            'bar_code': barcode,\r\n            'list_price': listPrice,\r\n            'sale_price': salePrice,\r\n            'category_id': category,\r\n            'description': descripcion,\r\n            'stock': stock != \"\" ? stock : 0,\r\n            'min_stock': stockMin,\r\n            'max_stock': stockMax,\r\n            'unity_id': unity,\r\n            'url': image,\r\n            'has_iva':hasIva?1:0,\r\n            'fraction': fraction!=\"\" ? fraction : 0,\r\n            'warehouse_id':bodega\r\n        }\r\n  \r\n            if (props.sistema == null) {\r\n                registrarSistema(data, initializer,limpiar)\r\n                \r\n               \r\n            } else {\r\n                editarSistema(props.sistema.id, data, initializer,limpiar)\r\n                \r\n                subir()\r\n\r\n                if (image == null) {\r\n                    props.carga()\r\n                }\r\n            }\r\n            props.setOpen(false)\r\n      \r\n    }\r\n    const cerrarModal=()=>{\r\n        props.setSelected(null)\r\n        setNombre(\"\")\r\n        setBarcode(\"\")\r\n        setSupplirCode(\"\")\r\n        setListPrice(\"\")\r\n        setSalePrice(\"\")\r\n        setBodega(\"\")\r\n\r\n        setSerie(\"\")\r\n        setImage(null)\r\n        setCategory('')\r\n        setDescripcion('')\r\n        setUnity('')\r\n\r\n        setStockMax(\"\")\r\n\r\n        setStock(\"\")\r\n\r\n        setStockMin(\"\")\r\n    }\r\n    const limpiar = () => {\r\n        setNombre(\"\")\r\n        setBarcode(\"\")\r\n        setSupplirCode(\"\")\r\n        setListPrice(\"\")\r\n        setSalePrice(\"\")\r\n\r\n        setSerie(\"\")\r\n        setImage(null)\r\n        setCategory('')\r\n        setDescripcion('')\r\n        setUnity('')\r\n\r\n        setStockMax(\"\")\r\n\r\n        setStock(\"\")\r\n\r\n        setStockMin(\"\")\r\n        props.setSelected(null)\r\n        props.carga()\r\n    }\r\n    const getName = (id) => {\r\n        let object = null\r\n        unityData.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n    const getName3 = (id) => {\r\n        let object = null\r\n        bodegaData.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n    const getName2 = (id) => {\r\n        let object = null\r\n        categoryData.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n                cerrarModal()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    {props.sistema != null ? \"Formulario de edición de productos\" : \"Formulario de creación de productos\"}\r\n                </DialogContentText>\r\n\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width: '100%' }}\r\n\r\n                        label=\"Código de barras\"\r\n                        value={barcode}\r\n                        onChange={(e) => setBarcode(e.target.value)}\r\n\r\n                    /></Grid>\r\n                    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width: '100%' }}\r\n\r\n                        label=\"Nombre\"\r\n                        value={nombre}\r\n                        onChange={(e) => setNombre(e.target.value)}\r\n\r\n                    /></Grid>\r\n                    <Grid item xs={12} md={12} style={{ display: 'flex' }}>\r\n                        <Autocomplete\r\n\r\n                            style={{ width: '100%' }}\r\n                            options={categoryData}\r\n                            value={getName2(category)}\r\n                            getOptionLabel={(option) => option.name}\r\n                            onChange={(event, value) => {\r\n                                if (value != null) {\r\n\r\n                                    setCategory(value.id)\r\n                                } else {\r\n\r\n                                    setCategory('')\r\n\r\n                                }\r\n\r\n                            }} // prints the selected value\r\n                            renderInput={params => (\r\n                                <TextField {...params} label=\"Seleccione una categoria\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={12} style={{ display: 'flex' }}>\r\n                        <Autocomplete\r\n\r\n                            style={{ width: '100%' }}\r\n                            options={unityData}\r\n                            value={getName(unity)}\r\n                            getOptionLabel={(option) => option.name}\r\n                            onChange={(event, value) => {\r\n                                if (value != null) {\r\n\r\n                                    setUnity(value.id)\r\n                                } else {\r\n\r\n                                    setUnity('')\r\n\r\n                                }\r\n\r\n                            }} // prints the selected value\r\n                            renderInput={params => (\r\n                                <TextField {...params} label=\"Seleccione una presentación\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12}>  <TextField\r\n                        variant=\"outlined\"\r\n\r\n                        style={{ width: '100%' }}\r\n\r\n                        label=\"Descripción\"\r\n\r\n                        value={descripcion}\r\n                        onChange={(e) => setDescripcion(e.target.value)}\r\n\r\n                    /></Grid>\r\n   <Grid item xs={12}>  <TextField\r\n                        variant=\"outlined\"\r\n\r\n                        style={{ width: '100%' }}\r\n                        type=\"number\"\r\n                        label=\"Precio de compra\"\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                        }}\r\n                        value={listPrice}\r\n                        onChange={(e) => setListPrice(e.target.value)}\r\n\r\n                    /></Grid>\r\n                    <Grid item xs={12}>  <TextField\r\n                        variant=\"outlined\"\r\n\r\n                        style={{ width: '100%' }}\r\n                        type=\"number\"\r\n                        label=\"Precio de venta\"\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                        }}\r\n                        value={salePrice}\r\n                        onChange={(e) => setSalePrice(e.target.value)}\r\n\r\n                    /></Grid>\r\n                        <Grid item xs={12} md={12} style={{ display: 'flex' }}>\r\n                        <Autocomplete\r\n\r\n                            style={{ width: '100%' }}\r\n                            options={bodegaData}\r\n                            value={getName3(bodega,bodegaData)}\r\n                            getOptionLabel={(option) => option.name}\r\n                            onChange={(event, value) => {\r\n                                if (value != null) {\r\n\r\n                                    setBodega(value.id)\r\n                                } else {\r\n\r\n                                    setBodega('')\r\n\r\n                                }\r\n\r\n                            }} // prints the selected value\r\n                            renderInput={params => (\r\n                                <TextField {...params} label=\"Seleccione un laboratorio\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12}>  <TextField\r\n                        variant=\"outlined\"\r\n\r\n                        style={{ width: '100%' }}\r\n                        type=\"number\"\r\n                        label=\"Fracciones\"\r\n                        value={fraction}\r\n                        onChange={(e) => setFraction(e.target.value)}\r\n\r\n                    /></Grid>\r\n                      <Grid item xs={12}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={hasIva} onChange={() => setHasIva(!hasIva)} />}\r\n                            label=\"¿Grava IVA?\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={12} xs={12}>\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            style={{ display: \"none\", marginRight: \"5px\" }}\r\n                            id=\"templateFile\"\r\n                            multiple\r\n                            type=\"file\"\r\n\r\n                            onChange={(e) => {\r\n                                setImage(e.target.files[0])\r\n                            }}\r\n                        />\r\n                        <label htmlFor=\"templateFile\">\r\n                            <Button\r\n                                startIcon={<CloudUploadIcon />}\r\n                                variant=\"outlined\"\r\n                                color=\"default\"\r\n                                component=\"span\"\r\n                            >\r\n                                Subir foto{\" \"}\r\n                                {image != null\r\n                                    ? \"(\" + image.name + \")\"\r\n                                    : \"\"}\r\n                            </Button>\r\n                        </label>\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                    props.setOpen(false)\r\n                    cerrarModal()\r\n                }} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Guardar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editar as editarProveedor, registrar as registrarProveedor, subirFoto} from '../../../../utils/API/proveedores';\r\nimport { obtenerTodos as obtenerUnidades } from '../../../../utils/API/unidades';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [nombre, setNombre] = React.useState(\"\")\r\n    const [ruc, setRuc] = React.useState(\"\")\r\n    const [logo, setLogo] = React.useState(null)\r\n    const [celular, setCelular] = React.useState(\"\")\r\n    const [correo, setCorreo] = React.useState(\"\")\r\n  \r\n    React.useEffect(()=>{\r\n        if(props.sistema!=null){\r\n            setNombre(props.sistema.business_name)\r\n            setRuc(props.sistema.ruc)\r\n            setCelular(props.sistema.cellphone)\r\n\r\n            setCorreo(props.sistema.email)\r\n\r\n        }\r\n    },[props.sistema])\r\n    const subir=()=>{\r\n        if(props.sistema!=null){\r\n          if(logo!=null){\r\n            subirFoto(props.sistema.id,{url:logo},initializer,  props.carga)\r\n\r\n          }\r\n\r\n        }\r\n    }\r\n    const guardar=()=>{\r\n        let data={ \r\n            'url':logo,\r\n        'business_name': nombre,\r\n        'ruc': ruc,\r\n        'cellphone': celular,\r\n        'email': correo}\r\n        if(props.sistema==null){\r\n            registrarProveedor(data,initializer,limpiar)\r\n            \r\n          \r\n        }else{\r\n            editarProveedor(props.sistema.id,data,initializer,limpiar)\r\n            \r\n            subir()\r\n            if(logo==null){\r\n                props.carga()\r\n            }\r\n\r\n        }\r\n        props.setOpen(false)\r\n      \r\n    }\r\n    const limpiar=()=>{\r\n        setNombre('')\r\n        setRuc(\"\")\r\n        setLogo(null)\r\n        setCelular(\"\")\r\n\r\n        setCorreo(\"\")\r\n        props.setSelected(null)\r\n        props.carga()\r\n    }\r\n  \r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n                limpiar()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Proveedores</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                   {props.sistema!=null?\"Formulario de edición de proveedores\": \"Formulario de creación de proveedores\"}\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                      \r\n                        label=\"Razón Social\"\r\n                        value={nombre}\r\n                        onChange={(e) => setNombre(e.target.value)}\r\n\r\n                    /></Grid>\r\n                 \r\n            \r\n                      <Grid item xs={12}>   <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                  \r\n                        label=\"RUC\"\r\n                        value={ruc}\r\n                        onChange={(e) => setRuc(e.target.value)}\r\n\r\n                    /></Grid>\r\n                      <Grid item xs={12}>   <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                  \r\n                        label=\"Celular\"\r\n                        value={celular}\r\n                        onChange={(e) => setCelular(e.target.value)}\r\n\r\n                    /></Grid>\r\n                         <Grid item xs={12}>   <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                  \r\n                        label=\"Correo\"\r\n                        value={correo}\r\n                        onChange={(e) => setCorreo(e.target.value)}\r\n\r\n                    /></Grid>\r\n                 \r\n  <Grid item md={12} xs={12}>\r\n                    <input\r\n                      accept=\"image/*\"\r\n                      style={{ display: \"none\", marginRight: \"5px\" }}\r\n                      id=\"templateFile\"\r\n                      multiple\r\n                      type=\"file\"\r\n                  \r\n                      onChange={(e) => {\r\n                          setLogo(e.target.files[0])\r\n                      }}\r\n                    />\r\n                    <label htmlFor=\"templateFile\">\r\n                      <Button\r\n                              startIcon={<CloudUploadIcon />}\r\n                        variant=\"outlined\"\r\n                        color=\"default\"\r\n                        component=\"span\"\r\n                      >\r\n                        Subir foto{\" \"}\r\n                        {logo != null\r\n                          ? \"(\" + logo.name + \")\"\r\n                          : \"\"}\r\n                      </Button>\r\n                    </label>\r\n                  </Grid>\r\n                  </Grid>\r\n\r\n\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Guardar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { InputAdornment, Tooltip } from '@material-ui/core';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport Confirmar from '../../../../components/Confirmar'\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { PersonAddOutlined, PostAddOutlined } from '@material-ui/icons';\r\n\r\nimport { Checkbox, FormControlLabel, Grid } from '@material-ui/core';\r\nimport { editar as editarPedido, obtenerDetalleOrden, registrar as registrarPedido } from '../../../../utils/API/pedidos';\r\nimport { obtenerTodos } from '../../../../utils/API/proveedores';\r\nimport { obtenerTodos as obtenerProductos } from '../../../../utils/API/sistemas';\r\nimport Crear from '../../Productos/componentes/Crear'\r\nimport CrearProveedor from '../../Proveedores/componentes/Crear'\r\n\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport MaterialTable from 'material-table';\r\nimport { LocalizationTable, TableIcons } from '../../../../utils/table';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function CrearN(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const [open, setOpen] = React.useState(false)\r\n    const [total, setTotal] = React.useState(0)\r\n\r\n    const [cantidad, setCantidad] = React.useState(\"\")\r\n    const [proveedor, setProveedor] = React.useState(\"\")\r\n    const [proveedorData, setProveedorData] = React.useState([])\r\n    const [autorizar, setAutorizar] = React.useState(false)\r\n    const [productos, setProductos] = React.useState([])\r\n    const [productosData, setProductosData] = React.useState([])\r\n    const [producto, setProducto] = React.useState([])\r\n    const [crearProducto, setCrearProducto] = React.useState(false)\r\n    const [crearProveedor, setCrearProveedor] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerTodos(setProveedorData, initializer)\r\n            obtenerProductos(setProductosData, initializer)\r\n\r\n        }\r\n    }, [initializer.usuario])\r\n    React.useEffect(() => {\r\n        if (props.sistema != null) {\r\n            setProductos([])\r\n            obtenerDetalleOrden(props.sistema.id,setProductos,initializer)\r\n\r\n        }\r\n    }, [props.sistema])\r\n    const guardar = () => {\r\n\r\n       if (props.sistema == null) {\r\n            registrarPedido({ total:total,suppliers: validarData(),authorize:autorizar?1:0 }, initializer,    props.carga)\r\n            obtenerProductos(setProductosData, initializer)\r\n\r\n         \r\n        } else {\r\n            editarPedido(props.sistema.id, { total:total,suppliers: validarData(),authorize:autorizar?1:0 }, initializer, props.carga)\r\n            \r\n\r\n        }\r\n        props.setOpen(false)\r\n        vaciarCampos()\r\n    }\r\n      const vaciarCampos=()=>{\r\n        props.setSelected(null)\r\n        setCantidad(\"\")\r\n        setProveedor(\"\")\r\n        setProducto([])\r\n        setProductos([])\r\n        setTotal(0)\r\n    }\r\n    const limpiar = () => {\r\n        setCantidad(\"\")\r\n        setProveedor(\"\")\r\n        setProducto([])\r\n        setProductos([])\r\n        setTotal(0)\r\n        props.setSelected(null)\r\n        props.carga()\r\n    }\r\n   \r\n    const getName = (id,data) => {\r\n        let object = null\r\n        data.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n    const validarData=()=>{\r\n        let final=[]\r\n\r\n        productos.map((e)=>{\r\n            \r\n            if (!final.some(i => i.supplier_id === e.supplier_id)) {\r\n                final.push({\r\n                    supplier_id:e.supplier_id,\r\n                    products:obtenerProductosPorId(e.supplier_id)\r\n                })\r\n            }\r\n           \r\n        })\r\n        return final\r\n    }\r\n    const obtenerProductosPorId=(id)=>{\r\n        return productos.filter((e)=>e.supplier_id==id)\r\n    }\r\n    const existeEnDetalle=(id)=>{\r\n        let exs = false\r\n        productos.map((e)=>{\r\n          if(e.product_id==id){\r\n              exs=true\r\n          }  \r\n        })\r\n        return exs\r\n    }\r\n    const agregar=() => {\r\n        if(producto.length!=0!=\"\"&&proveedor!=\"\"&&cantidad!=\"\"&&cantidad>0&&cantidad>0){\r\n            let t = productos.slice()\r\n            producto.map((e)=>{\r\n                if(!existeEnDetalle(e.id)){\r\n                t.push({product:e.name,supplier:obtenerProveedor(proveedor),product_id:e.id,quantity:cantidad,supplier_id:proveedor})\r\n                }\r\n            })\r\n            setProductos(t)\r\n            setCantidad('')\r\n  \r\n            setProducto([])\r\n        }else{\r\n            initializer.mostrarNotificacion({ type: \"warning\", message: 'No deje campos vacíos' });\r\n\r\n        }\r\n       \r\n    }\r\n    const obtenerProveedor=(id)=> {\r\n        let nombre=\"\"\r\n        proveedorData.map((e)=>{\r\n            if(e.id==id){\r\n                nombre=e.business_name\r\n            }\r\n        })\r\n        return nombre\r\n    }\r\n    const obtenerProducto=(id)=> {\r\n        let nombre=\"\"\r\n        productosData.map((e)=>{\r\n            if(e.id==id){\r\n                nombre=e.name\r\n            }\r\n        })\r\n        return nombre\r\n    }\r\n    const quitar=(row) => {\r\n        let id = row.tableData.id\r\n        let t = productos.slice()\r\n      \r\n\r\n        setProductos(t.filter((e,i) =>i!=id))\r\n        setCantidad('')\r\n        setProveedor('')\r\n        setProducto([])\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n        fullWidth\r\n        fullScreen\r\n        maxWidth='md'\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n                vaciarCampos()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n              <CrearProveedor sistema={null} setSelected={()=>null} setOpen={setCrearProveedor} open={crearProveedor} carga={()=>{\r\n                obtenerTodos(setProveedorData, initializer)\r\n       \r\n              \r\n         }} />\r\n             <Crear sistema={null} setSelected={()=>null} setOpen={setCrearProducto} open={crearProducto} carga={()=>{\r\n                 obtenerProductos(setProductosData, initializer)\r\n         }} />\r\n            <Confirmar open={open} setOpen={setOpen} accion={guardar} titulo='¿Desea continuar? Se anulará la orden y se creará otra.'/>\r\n            <DialogTitle id=\"alert-dialog-slide-title\">{props.sistema!=null?'Orden de compra '+props.sistema.id:'Orden de compra'}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\"  style={{display:'flex',justifyContent:'space-between',alignItems:'center'}}>\r\n                    {props.sistema != null ? \"Formulario de edición de compras\" : \"Formulario de creación de compras\"}  \r\n                    <div style={{display:'flex'}}>\r\n\r\n                    <Tooltip title=\"Crear proveedor\">\r\n                <IconButton aria-label=\"add_proveedor\" onClick={()=>setCrearProveedor(true)}>\r\n                    <PersonAddOutlined />\r\n                </IconButton>\r\n                </Tooltip>\r\n                      <Tooltip title=\"Crear producto\">\r\n                       \r\n                <IconButton aria-label=\"add_producto\" onClick={()=>setCrearProducto(true)}>\r\n                    <PostAddOutlined />\r\n                </IconButton>\r\n                </Tooltip>\r\n\r\n</div>\r\n                   \r\n                </DialogContentText>\r\n                <Grid container spacing={2}>\r\n                <Grid item xs={12} md={4} style={{ display: 'flex' }}>\r\n                        <Autocomplete\r\n\r\n                            style={{ width: '100%' }}\r\n                            size=\"small\"\r\n                            options={productosData}\r\n                            multiple\r\n                            value={producto}\r\n                            onChange={(event, newValue) => {\r\n                                setProducto(newValue);\r\n                              }}\r\n                              getOptionLabel={(option) => option.bar_code+\" - \"+option.name+ \" - stock: \"+option.stock}\r\n                         // prints the selected value\r\n                            renderInput={params => (\r\n                                <TextField    variant=\"outlined\" {...params} label=\"Seleccione un producto\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{  width: '100%' }}\r\n                        type=\"number\"\r\n                        size=\"small\"\r\n                        label=\"Cantidad\"\r\n                        min=\"0\"\r\n                        value={cantidad}\r\n                        onChange={(e) => setCantidad(e.target.value)}\r\n\r\n                    /></Grid>\r\n                    <Grid item xs={12} md={4} style={{ display: 'flex' }}>\r\n                        <Autocomplete\r\n    size=\"small\"\r\n                            style={{ width: '100%' }}\r\n                            options={proveedorData}\r\n                            value={getName(proveedor,proveedorData)}\r\n                            getOptionLabel={(option) => option.business_name}\r\n                            onChange={(event, value) => {\r\n                                if (value != null) {\r\n\r\n                                    setProveedor(value.id)\r\n                                } else {\r\n\r\n                                    setProveedor('')\r\n\r\n                                }\r\n\r\n                            }} // prints the selected value\r\n                            renderInput={params => (\r\n                                <TextField {...params} label=\"Seleccione un proveedor\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{  width: '100%' }}\r\n                        type=\"number\"\r\n                        size=\"small\"\r\n                        label=\"Total de la compra\"\r\n                        value={total}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                          }}\r\n                        onChange={(e) => setTotal(e.target.value)}\r\n\r\n                    /></Grid>\r\n                  \r\n                 \r\n                 <Grid item xs={12} md={12}>\r\n\r\n                 <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                        {\r\n                            title: 'Producto',\r\n                            field: 'product',\r\n                            render: rowData => (\r\n                             <span >{rowData.product}</span>\r\n                            ),\r\n                          },\r\n                        { title: \"Cantidad\", field: \"quantity\" },\r\n                        { title: \"Proveedor\", field: \"supplier\" }\r\n                \r\n\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        productos\r\n                    }\r\n\r\n                    localization={LocalizationTable}\r\n                title=\"Listado del pedido\"\r\n                actions={[      {\r\n                    icon: TableIcons.Add,\r\n                    tooltip: 'Agregar',\r\n                    isFreeAction:true,\r\n                    onClick: (event, rowData) => {\r\n                      agregar()\r\n                    }\r\n                },\r\n                {\r\n                    icon: TableIcons.Delete,\r\n                    tooltip: 'Eliminar',\r\n                 \r\n                    onClick: (event, rowData) => {\r\n                      quitar(rowData)\r\n                    }\r\n                }]}\r\n\r\n                    options={{\r\n                        pageSize:10,\r\n                \r\n                        actionsColumnIndex: -1,\r\n                        width:'100%',\r\n                        maxBodyHeight: 350,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n</Grid>\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                    props.setOpen(false)\r\n                    vaciarCampos()\r\n                }} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={()=>{\r\n                     if(props.sistema!=null){\r\n                        setOpen(true)\r\n                     }else{\r\n                        guardar()\r\n                     }\r\n                    \r\n                }}>\r\n                    Guardar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { obtenerStatusOrden,cambiarEstado } from '../../../../utils/API/pedidos';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const [status, setStatus] =React.useState('')\r\n    const [statusData, setStatusData] =React.useState([])\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerStatusOrden(setStatusData, initializer)\r\n        }\r\n    }, [initializer.usuario])\r\n    React.useEffect(() => {\r\n        if (props.sistema != null) {\r\n        \r\n                setStatus(props.sistema.status)\r\n       \r\n        }\r\n    }, [props.sistema])\r\n    const guardar = () => {\r\n        if(props.sistema!=null){\r\n            cambiarEstado({order:props.sistema.id,status:status}, initializer)\r\n\r\n        }\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n    console.log(statusData)\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => props.setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Estados</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    Con el estado ENTREGADO deberá distribuir los productos a las bodegas y se cerrará la orden.\r\n                </DialogContentText>\r\n\r\n                <FormControl variant=\"outlined\"  style={{width: '100%'}}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Estado</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        value={status}\r\n                        onChange={(e)=> {\r\n                           \r\n                         \r\n                                    setStatus(e.target.value)\r\n\r\n                              \r\n\r\n                           \r\n                        \r\n                        }}\r\n                        label=\"Estado\"\r\n                    >\r\n\r\n                        {\r\n                            statusData.map((e)=>(\r\n                                <MenuItem value={e.id}>{e.name}</MenuItem>\r\n                            ))\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Confirmar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport Confirmar from '../../../../components/Confirmar'\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Checkbox, FormControlLabel, Grid } from '@material-ui/core';\r\nimport { editar as editarPedido, obtenerDetalleOrden, registrar as registrarPedido,obtenerInventarioOrden, guardarAlmacen } from '../../../../utils/API/pedidos';\r\nimport { obtenerTodos } from '../../../../utils/API/proveedores';\r\nimport { obtenerTodos as obtenerTodosBodegas } from '../../../../utils/API/bodegas';\r\n\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport MaterialTable from 'material-table';\r\nimport { LocalizationTable, TableIcons } from '../../../../utils/table';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [cantidad, setCantidad] = React.useState(\"\")\r\n    const [proveedor, setProveedor] = React.useState(\"\")\r\n    const [proveedorData, setProveedorData] = React.useState([])\r\n    const [autorizar, setAutorizar] = React.useState(false)\r\n    const [productos, setProductos] = React.useState([])\r\n    const [productosData, setProductosData] = React.useState([])\r\n    const [producto, setProducto] = React.useState('')\r\n\r\n    const [almacen, setAlmacen] = React.useState([])\r\n    const [bodegaData, setBodegaData] = React.useState([])\r\n    const [bodega, setBodega] = React.useState('')\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerTodosBodegas(setBodegaData, initializer)\r\n\r\n        }\r\n    }, [initializer.usuario ])\r\n    React.useEffect(() => {\r\n        if (props.sistema != null&&props.open) {\r\n            console.log(props.open)\r\n            setProductos([])\r\n            setAlmacen([])\r\n            obtenerInventarioOrden(props.sistema.id,setProductos, initializer)\r\n\r\n\r\n        }\r\n    }, [props.sistema,props.open])\r\n    const guardar = () => {\r\n        if (props.sistema != null&&almacen.length!=0) {\r\n        guardarAlmacen({data:almacen,order_id:props.sistema.id},initializer)\r\n        }\r\n        props.setOpen(false)\r\n    \r\n        limpiar()\r\n    }\r\n    const limpiar = () => {\r\n        setCantidad(\"\")\r\n        setProveedor(\"\")\r\n        setProducto(\"\")\r\n        setProductos([])\r\n        setAlmacen([])\r\n        props.setSelected(null)\r\n        props.carga()\r\n    }\r\n   \r\n    const getName = (id,data) => {\r\n        let object = null\r\n        data.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n    const validarData=()=>{\r\n        let final=[]\r\n\r\n        productos.map((e)=>{\r\n            \r\n            if (!final.some(i => i.supplier_id === e.supplier_id)) {\r\n                final.push({\r\n                    supplier_id:e.supplier_id,\r\n                    products:obtenerProductosPorId(e.supplier_id)\r\n                })\r\n            }\r\n           \r\n        })\r\n        return final\r\n    }\r\n    const obtenerProductosPorId=(id)=>{\r\n        return productos.filter((e)=>e.supplier_id==id)\r\n    }\r\n    const agregar=() => {\r\n        if(producto!=\"\"&&proveedor!=\"\"&&cantidad!=\"\"&&cantidad>0){\r\n            let t = productos.slice()\r\n            t.push({product:obtenerProducto(producto),supplier:obtenerProveedor(proveedor),product_id:producto,quantity:cantidad,supplier_id:proveedor})\r\n            setProductos(t)\r\n            setCantidad('')\r\n  \r\n            setProducto('')\r\n        }\r\n       \r\n    }\r\n    const obtenerProveedor=(id)=> {\r\n        let nombre=\"\"\r\n        proveedorData.map((e)=>{\r\n            if(e.id==id){\r\n                nombre=e.business_name\r\n            }\r\n        })\r\n        return nombre\r\n    }\r\n    const obtenerBodega=(id)=> {\r\n        let nombre=\"\"\r\n        bodegaData.map((e)=>{\r\n            if(e.id==id){\r\n                nombre=e.name\r\n            }\r\n        })\r\n        return nombre\r\n    }\r\n    const obtenerProducto=(id)=> {\r\n        let nombre=\"\"\r\n        productosData.map((e)=>{\r\n            if(e.id==id){\r\n                nombre=e.name\r\n            }\r\n        })\r\n        return nombre\r\n    }\r\n    const quitar=(row) => {\r\n        let t0=productos.slice()\r\n        let id = row.tableData.id\r\n        let t = almacen.slice()\r\n        console.log(row)\r\n        t0.push({numero:row.numero,product_id:row.product_id,inventory_id:row.inventory_id,name:row.name,jp_code:row.jp_code,supplier_code:row.supplier_code })\r\n        setProductos(t0)\r\n\r\n        setAlmacen(t.filter((e,i) =>i!=id))\r\n     \r\n    }\r\n    const quitarInventario=(row) => {\r\n    \r\n       let t = [];\r\n       productos.slice().map((e,i) =>{\r\n           if(!estaIncluido(e.inventory_id,row)){\r\n            t.push({...e})\r\n           }\r\n       })\r\n       setProductos(t)\r\n       \r\n    }\r\n    const estaIncluido=(id,dt) => {\r\n        let res = false\r\n        dt.map((e,i) =>{\r\n            if(e.inventory_id==id){\r\n                res = true\r\n            }\r\n        })\r\n        return res\r\n    }\r\n    const almacenar=(dat)=>{\r\n       let eli=[]\r\n       if(bodega!=\"\"){\r\n        let t=almacen.slice()\r\n        dat.map((e)=>{\r\n            eli.push(e)\r\n            t.push({...e,warehouse_id:bodega,warehouse:obtenerBodega(bodega)})\r\n        })\r\n       console.log(t)\r\n        quitarInventario(dat)\r\n        setAlmacen(t)\r\n       }else{\r\n          \r\n           initializer.mostrarNotificacion({ type: \"warning\", message: 'Seleccione un laboratorio primero' });\r\n\r\n       }\r\n    \r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n        fullWidth\r\n        maxWidth='lg'\r\n        fullScreen\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n                limpiar()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            \r\n            <Confirmar open={open} setOpen={setOpen} accion={guardar} titulo='¿Desea continuar? Se anulará la orden y se creará otra.'/>\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Almacenaje - Compra {props.sistema?.id}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    Seleccione los productos y envíelos a los laboratorios correspondientes\r\n                </DialogContentText>\r\n                <Grid container spacing={2}>\r\n                <Grid item xs={12} md={12} style={{ display: 'flex' }}>\r\n                        <Autocomplete\r\n\r\n                            style={{ width: '100%' }}\r\n                            options={bodegaData}\r\n                            value={getName(bodega,bodegaData)}\r\n                            getOptionLabel={(option) => option.name}\r\n                            onChange={(event, value) => {\r\n                                if (value != null) {\r\n\r\n                                    setBodega(value.id)\r\n                                } else {\r\n\r\n                                    setBodega('')\r\n\r\n                                }\r\n\r\n                            }} // prints the selected value\r\n                            renderInput={params => (\r\n                                <TextField {...params} label=\"Seleccione un laboratorio destino\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n\r\n                    </Grid>\r\n                    \r\n                    \r\n                  \r\n                 \r\n                 <Grid item xs={12} md={12}>\r\n\r\n                 <MaterialTable\r\n                 key={1}\r\n                 id={1}\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                        { title: \"Número\", field: \"numero\" },\r\n\r\n                        {\r\n                            title: 'Producto',\r\n                            field: 'name',\r\n                            render: rowData => (\r\n                             <span >{rowData.name}</span>\r\n                            ),\r\n                          },\r\n                        { title: \"Código de Barras\", field: \"bar_code\" },\r\n                        { title: \"Stock\", field: \"stock\" },\r\n\r\n                    ]}\r\n                    data={\r\n                        productos\r\n                    }\r\n                    title=\"Productos en el pedido\"\r\n                   \r\n                    localization={LocalizationTable}\r\n                    actions={[\r\n                        {\r\n                            icon: TableIcons.Add,\r\n                            tooltip: 'Agregar',\r\n                         \r\n                            onClick: (evt, data1) => almacenar( data1 )\r\n                         }\r\n                    ]}\r\n                  \r\n\r\n                    options={{\r\n                        pageSize:10,\r\n                        paging:false,\r\n                        search:false,\r\n                        selection: true,\r\n                        actionsColumnIndex: -1,\r\n                        width:'100%',\r\n                        maxBodyHeight: 150,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n</Grid>\r\n<Grid item xs={12} md={12}>\r\n\r\n<MaterialTable\r\nkey={2}\r\nid={2}\r\n   icons={TableIcons}\r\n   columns={[\r\n    { title: \"Número\", field: \"numero\" },\r\n\r\n       {\r\n           title: 'Producto',\r\n           field: 'name',\r\n           render: rowData => (\r\n            <span >{rowData.name}</span>\r\n           ),\r\n         },\r\n       { title: \"Código de Barras\", field: \"bar_code\" },\r\n                        { title: \"Stock\", field: \"stock\" },\r\n       { title: \"Laboratorio Destino\", field: \"warehouse\" }\r\n\r\n\r\n\r\n\r\n   ]}\r\n   data={\r\n       almacen\r\n   }\r\n\r\n   localization={LocalizationTable}\r\n\r\nactions={[    \r\n{\r\n   icon: TableIcons.Delete,\r\n   tooltip: 'Eliminar',\r\n\r\n   onClick: (event, rowData) => {\r\n     quitar(rowData)\r\n   }\r\n}]}\r\n\r\n   options={{\r\n       pageSize:10,\r\n       selection:false,\r\n       paging: false,\r\n       toolbar:false,\r\n       showTitle: false,\r\n       actionsColumnIndex: -1,\r\n       width:'100%',\r\n       maxBodyHeight: 170,\r\n       padding: 'dense',\r\n       headerStyle: {\r\n           textAlign: 'left'\r\n       },\r\n       cellStyle: {\r\n           textAlign: 'left'\r\n       },\r\n       searchFieldStyle: {\r\n\r\n           padding: 5\r\n       }\r\n   }}\r\n\r\n/>\r\n</Grid>\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" disabled={almacen.length==0} onClick={()=>{\r\n                  guardar()\r\n                }}>\r\n                    Guardar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { eliminar as eliminarOrden, registrarSistema } from '../../../../utils/API/pedidos';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const guardar=()=>{\r\n        eliminarOrden(props.sistema.id,initializer)\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => props.setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Sistemas</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    ¿Está seguro que desea eliminar el registro?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Initializer from '../../../store/Initializer'\r\nimport Confirmar from '../../../components/Confirmar'\r\n \r\nimport { LocalizationTable, TableIcons, removeAccent } from '../../../utils/table.js'\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { anularCompra, autorizarOrden, cambiarEstado, obtenerStatusOrden, obtenerTodos } from '../../../utils/API/pedidos.js';\r\nimport Crear from './componentes/Crear'\r\nimport EstadoOrden from './componentes/EstadoOrden'\r\nimport Asignar from './componentes/Asignar'\r\n\r\nimport Eliminar from './componentes/Eliminar'\r\n\r\nexport default function Sistemas(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [data, setData] = React.useState([])\r\n    const [kpis, setKpis] = React.useState({autorizados:0,no_autorizados:0})\r\n\r\n    const [confirmarMensaje, setConfirmarMensaje] = React.useState(false)\r\n    const [totalCompras,setTotalCompras] = React.useState(0)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [open2, setOpen2] = React.useState(false)\r\n    const [open3, setOpen3] = React.useState(false)\r\n    const [open4, setOpen4] = React.useState(false)\r\n\r\n    const [selected, setSelected] = React.useState(null)\r\n    const [selected2, setSelected2] = React.useState(null)\r\n    const [selected3, setSelected3] = React.useState(null)\r\n    const [selected4, setSelected4] = React.useState(null)\r\n    const [selected5, setSelected5] = React.useState(null)\r\n    const [estado, setEstado] = React.useState([])\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerTodos({setTotalCompras,setData}, initializer)\r\n            obtenerStatusOrden(setEstado, initializer)\r\n\r\n        }\r\n    }, [initializer.usuario])\r\n\r\n    React.useEffect(() => {\r\n        if (data.length!=0) {\r\n            let aut=0\r\n            let noaut=0\r\n            data.map((e)=>{\r\n                if(e.authorized!=null){\r\n                    aut++\r\n                }else{\r\n                    noaut++\r\n                }\r\n            })\r\n            setKpis({autorizados:aut,no_autorizados:noaut})\r\n        }\r\n    }, [data])\r\n    const carga = () => {\r\n        obtenerTodos({setTotalCompras,setData}, initializer)\r\n        setSelected(null)\r\n        setSelected2(null)\r\n        setSelected3(null)\r\n        setSelected4(null)\r\n        setSelected5(null)\r\n\r\n    }\r\n    const autorizar=()=>{\r\n        if(selected3!=null){\r\n            autorizarOrden(selected3, initializer,carga)\r\n            \r\n        }\r\n    }\r\n    const cambiarEstadoE = (id) => {\r\n            cambiarEstado({order:id,status:'E'}, initializer,carga)\r\n            \r\n    }\r\n    const anular = () => {\r\n        anularCompra(selected3, initializer, carga)\r\n\r\n    }\r\n    \r\n    return (\r\n        <Grid container spacing={2}>\r\n         <Confirmar open={confirmarMensaje} setOpen={setConfirmarMensaje} accion={anular} titulo='¿Desea continuar? Se anulará la orden.'/>\r\n         <EstadoOrden sistema={selected4} setSelected={setSelected4} setOpen={setOpen3} open={open3} carga={carga} />\r\n         <Asignar sistema={selected5} setSelected={setSelected5} setOpen={setOpen4} open={open4} carga={carga} />\r\n\r\n            <Crear sistema={selected} setSelected={setSelected} setOpen={setOpen} open={open} carga={carga} />\r\n            <Eliminar sistema={selected2} setOpen={setOpen2} open={open2} carga={carga} />\r\n            <Grid item xs={12} md={12} style={{display:'flex',justifyContent:'space-between'}}>\r\n                <Typography variant=\"h5\" >\r\n                    Compras\r\n                </Typography>\r\n                <Button onClick={() => setOpen(true)} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\">\r\n                        Nuevo\r\n                    </Button>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} md={12} style={{ display: 'flex', marginTop: 10 }}>\r\n\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5,borderRadius:12,borderColor: 'rgba(0, 0, 0, 0.12)',borderWidth:1,borderStyle: 'solid'}} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Totales\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                {data.length}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(94, 53, 177)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5,borderRadius:12,borderColor: 'rgba(0, 0, 0, 0.12)',borderWidth:1,borderStyle: 'solid'}} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Totales\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                ${totalCompras.toFixed(2)}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(94, 53, 177)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n    \r\n            <Grid item xs={12}>\r\n                <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                \r\n                        {\r\n                            title: 'Estado',\r\n                            field: 'status',\r\n                            render: rowData =>{\r\n                             \r\n                                return  (\r\n                                    <span>{rowData.status=='A'?'Emitida':'Anulada'}</span> \r\n                                )\r\n                            },\r\n                          }, \r\n                        { title: \"Número\", field: \"id\" },\r\n                        { title: \"Proveedor\", field: \"supplier\" },\r\n                        { title: \"Total\", field: \"total\", type: \"currency\" },\r\n\r\n                        { title: \"Fecha\", field: \"created_at\", type: \"datetime\" },\r\n\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        data\r\n                    }\r\n\r\n                    localization={LocalizationTable}\r\n\r\n                    actions={[\r\n                        \r\n\r\n                        \r\n                     \r\n                        {\r\n                            icon: TableIcons.Delete,\r\n                            tooltip: \"Borrar\",\r\n\r\n                            onClick: (event, rowData) => {\r\n                                if(rowData.status!=\"E\"){\r\n                                    setSelected3(rowData.id)\r\n                                    setConfirmarMensaje(true)\r\n                                }else{\r\n                                    initializer.mostrarNotificacion({ type: \"warning\", message: 'Compra ya anulada' });     \r\n \r\n                                }\r\n                            \r\n                            }\r\n                        },\r\n                    ]} \r\n\r\n                    options={{\r\n                        pageSize:10,\r\n                        showTitle: false,\r\n                        actionsColumnIndex: -1,\r\n                      \r\n                        maxBodyHeight: 350,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { eliminarSistema, registrarSistema } from '../../../../utils/API/sistemas';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const guardar=()=>{\r\n        eliminarSistema(props.sistema.id,initializer,props.carga)\r\n        props.setOpen(false)\r\n        \r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => props.setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    ¿Está seguro que desea eliminar el registro?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editarSistema, registrarSistema } from '../../../../utils/API/sistemas';\r\nimport { obtenerTodos as obtenerUnidades } from '../../../../utils/API/unidades';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [unity, setUnity] = React.useState(\"\")\r\n    const [unityData, setUnityData] = React.useState([])\r\n\r\n    const getName=()=>{\r\n\r\n    }\r\n \r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Filtrar productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                Puede seleccionar filtros anidados\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={1}>\r\n               \r\n                   \r\n                     <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una bodega\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                    \r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una categoría\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una medida\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => props.setOpen(false)}>\r\n                    Confirmar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Initializer from '../../../store/Initializer'\r\n\r\nimport { LocalizationTable, TableIcons, removeAccent } from '../../../utils/table.js'\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { obtenerTodos } from '../../../utils/API/sistemas.js';\r\nimport Crear from './componentes/Crear'\r\nimport Eliminar from './componentes/Eliminar'\r\nimport Filtro from './componentes/Filtro'\r\nimport { PUBLIC_PATH } from '../../../config/API';\r\nimport Confirmar from '../../../components/Confirmar'\r\nexport default function Sistemas(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const [confirmarMensaje, setConfirmarMensaje] = React.useState(false)\r\n\r\n    const [data, setData] = React.useState([])\r\n    const [open, setOpen] = React.useState(false)\r\n    const [open2, setOpen2] = React.useState(false)\r\n    const [selected, setSelected] = React.useState(null)\r\n    const [selected2, setSelected2] = React.useState(null)\r\n    const [imageSelected, setImageSelected] = React.useState(null)\r\n\r\n    const [openFilter, setOpenFilter] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerTodos(setData, initializer)\r\n        }\r\n    }, [initializer.usuario])\r\n    const carga = () => {\r\n        obtenerTodos(setData, initializer)\r\n        setSelected(null)\r\n        setSelected2(null)\r\n    }\r\n    const obtenerFraccionUnidades=(cantidad,fraccion)=>{\r\n        let frac = ((cantidad % 1)*fraccion).toFixed(1)*1\r\n        let unity =cantidad-(cantidad % 1)\r\n\r\n        return {unity,frac}\r\n\r\n    }\r\n    return (\r\n        <Grid container spacing={2}>\r\n\r\n            <Confirmar ancho={true} body={<img\r\n                style={{ height: '100%', width: '100%' }}\r\n                src={PUBLIC_PATH+\"storage/\" + imageSelected}\r\n            />} open={confirmarMensaje} setOpen={setConfirmarMensaje} accion={() => {\r\n                setImageSelected(null)\r\n                setConfirmarMensaje(false)\r\n            }} titulo='Foto del producto' />\r\n\r\n            <Crear sistema={selected} setSelected={setSelected} setOpen={setOpen} open={open} carga={carga} />\r\n            <Eliminar sistema={selected2} setOpen={setOpen2} open={open2} carga={carga} />\r\n            <Filtro setOpen={setOpenFilter} open={openFilter} />\r\n\r\n            <Grid item xs={12} md={12} style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <Typography variant=\"h5\" >\r\n                    Productos\r\n                </Typography>\r\n                <Button onClick={() => setOpen(true)} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\">\r\n                    Nuevo\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={12} style={{ display: 'flex', marginTop: 10 }}>\r\n\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5, borderRadius: 12, borderColor: 'rgba(0, 0, 0, 0.12)', borderWidth: 1, borderStyle: 'solid' }} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Totales\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                {data.length}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(94, 53, 177)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={12}>\r\n                <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                        {\r\n                            title: 'Imágen',\r\n                            field: 'avatar',\r\n                            render: rowData => (\r\n                                <img\r\n                                    onClick={() =>{\r\n                                        setConfirmarMensaje(true)\r\n                                        setImageSelected(rowData.image)\r\n                                    }}\r\n                                    style={{ height: 36, width: 36, borderRadius: 36 ,cursor: 'pointer' }}\r\n                                    src={PUBLIC_PATH+\"storage/\" + rowData.image}\r\n                                />\r\n                            ),\r\n                        },\r\n                        { title: \"Código de Barras\", field: \"bar_code\" },\r\n                        { title: \"Nombre\", field: \"name\" },\r\n                        { title: \"Presentación\", field: \"unity\" },\r\n                        { title: \"Unidades\", field: \"stock\", render: rowData => (\r\n                            <span>{obtenerFraccionUnidades(rowData.stock,rowData.fraction).unity}</span>\r\n                        ), },\r\n                        { title: \"Fracciones\", field: \"fraction\", render: rowData => (\r\n                            <span>{obtenerFraccionUnidades(rowData.stock,rowData.fraction).frac}</span>\r\n                        ),  },\r\n                        { title: \"Precio de compra\", field: \"list_price\" },\r\n                        { title: \"Precio de venta\", field: \"sale_price\" },\r\n                        { title: \"Laboratorio\", field: \"warehouse\" },\r\n                        { title: \"Registro\", field: \"created_at\", type: \"datetime\" },\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        data\r\n                    }\r\n\r\n                    localization={LocalizationTable}\r\n\r\n                    actions={[\r\n                        {\r\n                            icon: TableIcons.Edit,\r\n                            tooltip: 'Editar',\r\n\r\n                            onClick: (event, rowData) => {\r\n                                setSelected(rowData)\r\n                                setOpen(true)\r\n                            }\r\n                        },\r\n\r\n                        {\r\n                            icon: TableIcons.Delete,\r\n                            tooltip: \"Borrar\",\r\n\r\n                            onClick: (event, rowData) => {\r\n                                setSelected2(rowData)\r\n                                setOpen2(true)\r\n                            }\r\n                        },\r\n                      \r\n\r\n                    ]}\r\n\r\n                    options={{\r\n                        pageSize: 10,\r\n                        showTitle: false,\r\n                        actionsColumnIndex: -1,\r\n                   \r\n                        maxBodyHeight: 350,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const editar= (id,data, store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"zones/\"+id;\r\n    let setting = {\r\n      method: \"PUT\",\r\n      url: url,\r\n      params:data,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const eliminar = (id,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"zones/\"+id;\r\n    \r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\nexport const registrar = (data,store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"zones\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\nexport const obtenerTodos = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"zones\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerSistemaEvaluaciones = (setLabels,setValues,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"systems_evaluations\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setLabels(response.data.system)\r\n      setValues(response.data.count)\r\n\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editar as editarBodega, registrar as registrarBodega } from '../../../../utils/API/bodegas';\r\nimport { obtenerTodos as obtenerZonas } from '../../../../utils/API/zones';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [nombre, setNombre] = React.useState(\"\")\r\n    const [jpcode, setJpcode] = React.useState(\"\")\r\n    const [supplierCode, setSupplirCode] = React.useState(\"\")\r\n    const [serie, setSerie] = React.useState(\"\")\r\n    const [zone, setZone] = React.useState(\"\")\r\n    const [zoneData, setZoneData] = React.useState([])\r\n    const [image, setImage] = React.useState(\"\")\r\n\r\n    const [stock, setStock] = React.useState(\"\")\r\n    const [stockMin, setStockMin] = React.useState(\"\")\r\n    const [stockMax, setStockMax] = React.useState(\"\")\r\n\r\n    const [descripcion, setDescripcion] = React.useState(\"\")\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n\r\n        obtenerZonas(setZoneData,initializer)\r\n        }\r\n  \r\n}, [initializer.usuario])\r\n    React.useEffect(()=>{\r\n        if(props.sistema!=null){\r\n            setNombre(props.sistema.name)\r\n            setZone(props.sistema.zone_id)\r\n            setDescripcion(props.sistema.description)\r\n        }\r\n    },[props.sistema])\r\n    const guardar=()=>{\r\n        let data={ \r\n        'name': nombre,\r\n        'description': descripcion,\r\n        'zone_id': zone}\r\n        if(props.sistema==null){\r\n            registrarBodega(data,initializer)\r\n            limpiar()\r\n        }else{\r\n            editarBodega(props.sistema.id,data,initializer)\r\n            limpiar()\r\n\r\n        }\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n    const limpiar=()=>{\r\n        setNombre(\"\")\r\n           \r\n\r\n            setZone(\"\")\r\n\r\n            setDescripcion(\"\")\r\n        props.setSelected(null)\r\n        props.carga()\r\n    }\r\n    const getName = (id) => {\r\n        let object = null\r\n        zoneData.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n                limpiar()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Laboratorios</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                   {props.sistema!=null?\"Formulario de edición de laboratorios\": \"Formulario de creación de laboratorios\"}\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                      \r\n                        label=\"Nombre\"\r\n                        value={nombre}\r\n                        onChange={(e) => setNombre(e.target.value)}\r\n\r\n                    /></Grid>\r\n                  \r\n                    \r\n                     <Grid item xs={12} md={12} style={{ display: 'flex' }}>\r\n                        <Autocomplete\r\n                      \r\n                            style={{ width: '100%'}}\r\n                                options={zoneData}\r\n                                value={getName(zone)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setZone(value.id)\r\n                                    } else {\r\n\r\n                                        setZone('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una zona\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                    \r\n                    <Grid item xs={12}>  <TextField\r\n                        variant=\"outlined\"\r\n\r\n                        style={{ width:'100%' }}\r\n                                    \r\n                        label=\"Descripción\"\r\n\r\n                        value={descripcion}\r\n                        onChange={(e) => setDescripcion(e.target.value)}\r\n\r\n                    /></Grid>\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Guardar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { eliminar as eliminarBodega, registrarSistema } from '../../../../utils/API/bodegas';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const guardar=()=>{\r\n        eliminarBodega(props.sistema.id,initializer)\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => props.setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    ¿Está seguro que desea eliminar el registro?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editarSistema, registrarSistema } from '../../../../utils/API/sistemas';\r\nimport { obtenerTodos as obtenerUnidades } from '../../../../utils/API/unidades';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [unity, setUnity] = React.useState(\"\")\r\n    const [unityData, setUnityData] = React.useState([])\r\n\r\n    const getName=()=>{\r\n\r\n    }\r\n \r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Filtrar productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                Puede seleccionar filtros anidados\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={1}>\r\n               \r\n                   \r\n                     <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una bodega\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                    \r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una categoría\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una medida\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => props.setOpen(false)}>\r\n                    Confirmar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Initializer from '../../../store/Initializer'\r\n\r\nimport { LocalizationTable, TableIcons, removeAccent } from '../../../utils/table.js'\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { obtenerTodos } from '../../../utils/API/bodegas.js';\r\nimport Crear from './componentes/Crear'\r\nimport Eliminar from './componentes/Eliminar'\r\nimport Filtro from './componentes/Filtro'\r\n\r\nexport default function Sistemas(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [data, setData] = React.useState([])\r\n    const [open, setOpen] = React.useState(false)\r\n    const [open2, setOpen2] = React.useState(false)\r\n    const [selected, setSelected] = React.useState(null)\r\n    const [selected2, setSelected2] = React.useState(null)\r\n    const [openFilter, setOpenFilter] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerTodos(setData, initializer)\r\n        }\r\n    }, [initializer.usuario])\r\n    const carga = () => {\r\n        obtenerTodos(setData, initializer)\r\n        setSelected(null)\r\n        setSelected2(null)\r\n    }\r\n    const total=()=>{\r\n        let tot=0\r\n        data.map((e)=>{\r\n            tot+=e.evaluaciones\r\n        })\r\n        return tot\r\n    }\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Crear sistema={selected} setSelected={setSelected} setOpen={setOpen} open={open} carga={carga} />\r\n            <Eliminar sistema={selected2} setOpen={setOpen2} open={open2} carga={carga} />\r\n            <Filtro setOpen={setOpenFilter} open={openFilter}  />\r\n\r\n            <Grid item xs={12} md={12} style={{display:'flex',justifyContent:'space-between'}}>\r\n                <Typography variant=\"h5\" >\r\n                    Laboratorios\r\n                </Typography>\r\n                <Button onClick={() => setOpen(true)} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\">\r\n                        Nuevo\r\n                    </Button>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={12} style={{ display: 'flex', marginTop: 10 }}>\r\n\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5,borderRadius:12,borderColor: 'rgba(0, 0, 0, 0.12)',borderWidth:1,borderStyle: 'solid'}} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Totales\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                {data.length}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(94, 53, 177)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n               \r\n            </Grid>\r\n      \r\n            <Grid item xs={12}>\r\n                <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                      \r\n                        { title: \"Nombre\", field: \"name\" },\r\n                        { title: \"Descripción\", field: \"description\" },\r\n                        { title: \"Zona\", field: \"zone\" },\r\n                        { title: \"Registro\", field: \"created_at\", type: \"datetime\" },\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        data\r\n                    }\r\n\r\n                    localization={LocalizationTable}\r\n\r\n                    actions={[\r\n                        {\r\n                            icon: TableIcons.Edit,\r\n                            tooltip: 'Editar',\r\n\r\n                            onClick: (event, rowData) => {\r\n                                setSelected(rowData)\r\n                                setOpen(true)\r\n                            }\r\n                        },\r\n                       \r\n\r\n                        {\r\n                            icon: TableIcons.Delete,\r\n                            tooltip: \"Borrar\",\r\n\r\n                            onClick: (event, rowData) => {\r\n                                setSelected2(rowData)\r\n                                setOpen2(true)\r\n                            }\r\n                        },\r\n                        {\r\n                            icon: TableIcons.Filter,\r\n                            tooltip: 'Filtrar',\r\n                            isFreeAction: true,\r\n                            onClick: (event) => setOpenFilter(true)\r\n                          }\r\n\r\n                    ]}\r\n\r\n                    options={{\r\n                        pageSize:10,\r\n                        showTitle: false,\r\n                        actionsColumnIndex: -1,\r\n                      \r\n                        maxBodyHeight: 350,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { eliminar, registrarSistema } from '../../../../utils/API/proveedores';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const guardar=()=>{\r\n        eliminar(props.sistema.id,initializer,  props.carga)\r\n        props.setOpen(false)\r\n       \r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => props.setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    ¿Está seguro que desea eliminar el registro?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editarSistema, registrarSistema } from '../../../../utils/API/sistemas';\r\nimport { obtenerTodos as obtenerUnidades } from '../../../../utils/API/unidades';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [unity, setUnity] = React.useState(\"\")\r\n    const [unityData, setUnityData] = React.useState([])\r\n\r\n    const getName=()=>{\r\n\r\n    }\r\n \r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Filtrar productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                Puede seleccionar filtros anidados\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={1}>\r\n               \r\n                   \r\n                     <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una bodega\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                    \r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una categoría\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una medida\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => props.setOpen(false)}>\r\n                    Confirmar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Initializer from '../../../store/Initializer'\r\n\r\nimport { LocalizationTable, TableIcons, removeAccent } from '../../../utils/table.js'\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { obtenerTodos } from '../../../utils/API/proveedores.js';\r\nimport Crear from './componentes/Crear'\r\nimport Eliminar from './componentes/Eliminar'\r\nimport Filtro from './componentes/Filtro'\r\nimport { PUBLIC_PATH } from '../../../config/API';\r\nimport Confirmar from '../../../components/Confirmar'\r\nexport default function Sistemas(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const [imageSelected, setImageSelected] = React.useState(null)\r\n    const [confirmarMensaje, setConfirmarMensaje] = React.useState(false)\r\n\r\n    const [data, setData] = React.useState([])\r\n    const [open, setOpen] = React.useState(false)\r\n    const [open2, setOpen2] = React.useState(false)\r\n    const [selected, setSelected] = React.useState(null)\r\n    const [selected2, setSelected2] = React.useState(null)\r\n    const [openFilter, setOpenFilter] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerTodos(setData, initializer)\r\n        }\r\n    }, [initializer.usuario])\r\n    const carga = () => {\r\n        obtenerTodos(setData, initializer)\r\n        setSelected(null)\r\n        setSelected2(null)\r\n    }\r\n    const total=()=>{\r\n        let tot=0\r\n        data.map((e)=>{\r\n            tot+=e.evaluaciones\r\n        })\r\n        return tot\r\n    }\r\n    return (\r\n        <Grid container spacing={2}>\r\n              <Confirmar ancho={true} body={<img\r\n                style={{ height: '100%', width: '100%' }}\r\n                src={PUBLIC_PATH+\"storage/\" + imageSelected}\r\n            />} open={confirmarMensaje} setOpen={setConfirmarMensaje} accion={() => {\r\n                setImageSelected(null)\r\n                setConfirmarMensaje(false)\r\n            }} titulo='Foto del producto' />\r\n            <Crear sistema={selected} setSelected={setSelected} setOpen={setOpen} open={open} carga={carga} />\r\n            <Eliminar sistema={selected2} setOpen={setOpen2} open={open2} carga={carga} />\r\n            <Filtro setOpen={setOpenFilter} open={openFilter}  />\r\n\r\n            <Grid item xs={12} md={12} style={{display:'flex',justifyContent:'space-between'}}>\r\n                <Typography variant=\"h5\" >\r\n                    Proveedores\r\n                </Typography>\r\n                <Button onClick={() => setOpen(true)} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\">\r\n                        Nuevo\r\n                    </Button>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={12} style={{ display: 'flex', marginTop: 10 }}>\r\n\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5,borderRadius:12,borderColor: 'rgba(0, 0, 0, 0.12)',borderWidth:1,borderStyle: 'solid'}} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Totales\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                {data.length}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(94, 53, 177)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n              \r\n            </Grid>\r\n      \r\n            <Grid item xs={12}>\r\n                <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                        {\r\n                            title: 'Logo',\r\n                            field: 'avatar',\r\n                            render: rowData => (\r\n                              <img\r\n                                onClick={() =>{\r\n                                    if(rowData.logo!=null){\r\n                                        setConfirmarMensaje(true)\r\n                                        setImageSelected(rowData.logo)\r\n                                    }\r\n                                   \r\n                                }}\r\n                                style={{ height: 36, width: 36, borderRadius: 36 ,cursor: 'pointer' }}\r\n                                src={PUBLIC_PATH+\"storage/\" + rowData.logo}\r\n                              />\r\n                            ),\r\n                          },\r\n                        { title: \"Razón Social\", field: \"business_name\" },\r\n                        { title: \"RUC\", field: \"ruc\" },\r\n                        { title: \"Celular\", field: \"cellphone\" },\r\n                        { title: \"Correo\", field: \"email\" },\r\n                        { title: \"Productos\", field: \"products\" },\r\n\r\n                        { title: \"Registro\", field: \"created_at\", type: \"datetime\" },\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        data\r\n                    }\r\n\r\n                    localization={LocalizationTable}\r\n\r\n                    actions={[\r\n                        {\r\n                            icon: TableIcons.Edit,\r\n                            tooltip: 'Editar',\r\n\r\n                            onClick: (event, rowData) => {\r\n                                setSelected(rowData)\r\n                                setOpen(true)\r\n                            }\r\n                        },\r\n\r\n                        {\r\n                            icon: TableIcons.Delete,\r\n                            tooltip: \"Borrar\",\r\n\r\n                            onClick: (event, rowData) => {\r\n                                setSelected2(rowData)\r\n                                setOpen2(true)\r\n                            }\r\n                        },\r\n                        {\r\n                            icon: TableIcons.Filter,\r\n                            tooltip: 'Filtrar',\r\n                            isFreeAction: true,\r\n                            onClick: (event) => setOpenFilter(true)\r\n                          }\r\n\r\n                    ]}\r\n\r\n                    options={{\r\n                        pageSize:10,\r\n                        showTitle: false,\r\n                        actionsColumnIndex: -1,\r\n                      \r\n                        maxBodyHeight: 350,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editarSistema, registrarSistema } from '../../../../utils/API/sistemas';\r\nimport { obtenerTodos as obtenerUnidades } from '../../../../utils/API/unidades';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [nombre, setNombre] = React.useState(\"\")\r\n    const [jpcode, setJpcode] = React.useState(\"\")\r\n    const [supplierCode, setSupplirCode] = React.useState(\"\")\r\n    const [serie, setSerie] = React.useState(\"\")\r\n    const [unity, setUnity] = React.useState(\"\")\r\n    const [unityData, setUnityData] = React.useState([])\r\n    const [image, setImage] = React.useState(\"\")\r\n\r\n    const [stock, setStock] = React.useState(\"\")\r\n    const [stockMin, setStockMin] = React.useState(\"\")\r\n    const [stockMax, setStockMax] = React.useState(\"\")\r\n\r\n    const [descripcion, setDescripcion] = React.useState(\"\")\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n\r\n        obtenerUnidades(setUnityData,initializer)\r\n        }\r\n  \r\n}, [initializer.usuario])\r\n    React.useEffect(()=>{\r\n        if(props.sistema!=null){\r\n            setNombre(props.sistema.name)\r\n            setJpcode(props.sistema.jp_code)\r\n            setSupplirCode(props.sistema.supplier_code)\r\n            setUnity(props.sistema.unity_id)\r\n\r\n            setSerie(props.sistema.serie)\r\n\r\n            setStockMax(props.sistema.max_stock)\r\n\r\n            setStock(props.sistema.stock)\r\n\r\n            setStockMin(props.sistema.min_stock)\r\n            setDescripcion(props.sistema.description)\r\nsetImage(props.sistema.image)\r\n        }\r\n    },[props.sistema])\r\n    const guardar=()=>{\r\n        let data={ 'jp_code': jpcode,\r\n        'supplier_code': supplierCode,\r\n        'bar_code': '',\r\n        'serie': serie,\r\n        'name': nombre,\r\n        'description': descripcion,\r\n        'stock': stock,\r\n        'min_stock': stockMin,\r\n        'max_stock': stockMax,\r\n        'unity_id': unity,\r\n        'user_id': 1}\r\n        if(props.sistema==null){\r\n            registrarSistema(data,initializer)\r\n            limpiar()\r\n        }else{\r\n            editarSistema(props.sistema.id,data,initializer)\r\n            limpiar()\r\n\r\n        }\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n    const limpiar=()=>{\r\n        setNombre(\"\")\r\n            setJpcode(\"\")\r\n            setSupplirCode(\"\")\r\n\r\n            setSerie(\"\")\r\n\r\n            setStockMax(\"\")\r\n\r\n            setStock(\"\")\r\n\r\n            setStockMin(\"\")\r\n        props.setSelected(null)\r\n        props.carga()\r\n    }\r\n    const getName = (id) => {\r\n        let object = null\r\n        unityData.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n                limpiar()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                   {props.sistema!=null?\"Formulario de edición de productos\": \"Formulario de creación de productos\"}\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                      \r\n                        label=\"Nombre\"\r\n                        value={nombre}\r\n                        onChange={(e) => setNombre(e.target.value)}\r\n\r\n                    /></Grid>\r\n                    <Grid item xs={12}>   <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                    \r\n                        label=\"Código JP\"\r\n                        value={jpcode}\r\n                        onChange={(e) => setJpcode(e.target.value)}\r\n                        InputProps={{\r\n                            endAdornment: <InputAdornment position=\"start\">      <IconButton size=\"small\" aria-label=\"delete\">\r\n                            <AutorenewIcon />\r\n                          </IconButton></InputAdornment>,\r\n                          }}\r\n                    />\r\n            \r\n                    </Grid>\r\n                      <Grid item xs={12}>   <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                  \r\n                        label=\"Código Proveedor\"\r\n                        value={supplierCode}\r\n                        onChange={(e) => setSupplirCode(e.target.value)}\r\n\r\n                    /></Grid>\r\n                      <Grid item xs={12}>   <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                  \r\n                        label=\"Serie\"\r\n                        value={serie}\r\n                        onChange={(e) => setSerie(e.target.value)}\r\n\r\n                    /></Grid>\r\n                     <Grid item xs={12} md={12} style={{ display: 'flex' }}>\r\n                        <Autocomplete\r\n                      \r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una medida\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                      <Grid item xs={12}>   <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                      \r\n                        label=\"Cantidad\"\r\n                        type=\"number\"\r\n                        value={stock}\r\n                        onChange={(e) => setStock(e.target.value)}\r\n\r\n                    /></Grid>\r\n                      <Grid item xs={12}>   <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                   \r\n                        type=\"number\"\r\n                        label=\"Cantidad mínima\"\r\n                        value={stockMin}\r\n                        onChange={(e) => setStockMin(e.target.value)}\r\n\r\n                    /></Grid>\r\n                      <Grid item xs={12}>   <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n               \r\n                        type=\"number\"\r\n                        label=\"Cantidad máxima\"\r\n                        value={stockMax}\r\n                        onChange={(e) => setStockMax(e.target.value)}\r\n\r\n                    /></Grid>\r\n                    <Grid item xs={12}>  <TextField\r\n                        variant=\"outlined\"\r\n\r\n                        style={{ width:'100%' }}\r\n                                    \r\n                        label=\"Descripción\"\r\n\r\n                        value={descripcion}\r\n                        onChange={(e) => setDescripcion(e.target.value)}\r\n\r\n                    /></Grid>\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Guardar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { eliminarSistema, registrarSistema } from '../../../../utils/API/sistemas';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const guardar=()=>{\r\n        eliminarSistema(props.sistema.id,initializer)\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => props.setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    ¿Está seguro que desea eliminar el registro?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editarSistema, registrarSistema } from '../../../../utils/API/sistemas';\r\nimport { obtenerTodos as obtenerUnidades } from '../../../../utils/API/unidades';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [unity, setUnity] = React.useState(\"\")\r\n    const [unityData, setUnityData] = React.useState([])\r\n\r\n    const getName=()=>{\r\n\r\n    }\r\n \r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Filtrar productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                Puede seleccionar filtros anidados\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={1}>\r\n               \r\n                   \r\n                     <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una bodega\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                    \r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una categoría\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una medida\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => props.setOpen(false)}>\r\n                    Confirmar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Initializer from '../../../store/Initializer'\r\n\r\nimport { LocalizationTable, TableIcons, removeAccent } from '../../../utils/table.js'\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { obtenerInventory } from '../../../utils/API/sistemas.js';\r\nimport Crear from './componentes/Crear'\r\nimport Eliminar from './componentes/Eliminar'\r\nimport Filtro from './componentes/Filtro'\r\nimport { PUBLIC_PATH } from '../../../config/API';\r\nimport Confirmar from '../../../components/Confirmar'\r\nexport default function Sistemas(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const [imageSelected, setImageSelected] = React.useState(null)\r\n    const [confirmarMensaje, setConfirmarMensaje] = React.useState(false)\r\n\r\n    const [data, setData] = React.useState([])\r\n    const [open, setOpen] = React.useState(false)\r\n    const [open2, setOpen2] = React.useState(false)\r\n    const [selected, setSelected] = React.useState(null)\r\n    const [selected2, setSelected2] = React.useState(null)\r\n    const [openFilter, setOpenFilter] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerInventory(setData, initializer)\r\n        }\r\n    }, [initializer.usuario])\r\n    const carga = () => {\r\n        obtenerInventory(setData, initializer)\r\n        setSelected(null)\r\n        setSelected2(null)\r\n    }\r\n    const total=()=>{\r\n        let tot=0\r\n        data.map((e)=>{\r\n            tot+=e.evaluaciones\r\n        })\r\n        return tot\r\n    }\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Confirmar ancho={true} body={<img\r\n                style={{ height: '100%', width: '100%' }}\r\n                src={PUBLIC_PATH+\"storage/\" + imageSelected}\r\n            />} open={confirmarMensaje} setOpen={setConfirmarMensaje} accion={() => {\r\n                setImageSelected(null)\r\n                setConfirmarMensaje(false)\r\n            }} titulo='Foto del producto' />\r\n            <Crear sistema={selected} setSelected={setSelected} setOpen={setOpen} open={open} carga={carga} />\r\n            <Eliminar sistema={selected2} setOpen={setOpen2} open={open2} carga={carga} />\r\n            <Filtro setOpen={setOpenFilter} open={openFilter}  />\r\n\r\n            <Grid item xs={12} md={12} style={{display:'flex',justifyContent:'space-between'}}>\r\n                <Typography variant=\"h5\" >\r\n                    Inventario\r\n                </Typography>\r\n               \r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={12} style={{ display: 'flex', marginTop: 10 }}>\r\n\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5,borderRadius:12,borderColor: 'rgba(0, 0, 0, 0.12)',borderWidth:1,borderStyle: 'solid'}} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Totales\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                {data.length}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(94, 53, 177)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5,borderRadius:12,borderColor: 'rgba(0, 0, 0, 0.12)',borderWidth:1,borderStyle: 'solid'}} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Productos stock mínimo\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                {data.length}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(30, 136, 229)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5,borderRadius:12,borderColor: 'rgba(0, 0, 0, 0.12)',borderWidth:1,borderStyle: 'solid'}} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Productos stock mínimo\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                {data.length}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(216, 67, 21)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n      \r\n            <Grid item xs={12}>\r\n                <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                        {\r\n                            title: 'Imágen',\r\n                            field: 'avatar',\r\n                            render: rowData => (\r\n                                <img\r\n                                    onClick={() =>{\r\n                                        setConfirmarMensaje(true)\r\n                                        setImageSelected(rowData.image)\r\n                                    }}\r\n                                    style={{ height: 36, width: 36, borderRadius: 36 ,cursor: 'pointer' }}\r\n                                    src={PUBLIC_PATH+\"storage/\" + rowData.image}\r\n                                />\r\n                            ),\r\n                          },\r\n                        { title: \"Cod. (JP)\", field: \"jp_code\" },\r\n                        { title: \"Cod. (Provedor)\", field: \"supplier_code\" },\r\n                        { title: \"Serie\", field: \"serie\" },\r\n                        { title: \"Nombre\", field: \"name\" },\r\n                        { title: \"Medida\", field: \"unity\" },\r\n\r\n                        { title: \"Registro\", field: \"created_at\", type: \"datetime\" },\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        data\r\n                    }\r\n\r\n                    localization={LocalizationTable}\r\n\r\n                    actions={[\r\n                     \r\n                        {\r\n                            icon: TableIcons.Filter,\r\n                            tooltip: 'Filtrar',\r\n                            isFreeAction: true,\r\n                            onClick: (event) => setOpenFilter(true)\r\n                          }\r\n\r\n                    ]}\r\n\r\n                    options={{\r\n                        pageSize:10,\r\n                        showTitle: false,\r\n                        actionsColumnIndex: -1,\r\n                      \r\n                        maxBodyHeight: 350,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const editarUnidad= (id,data, store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"transfers/\"+id;\r\n    let setting = {\r\n      method: \"PUT\",\r\n      url: url,\r\n      params:data,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const eliminarUnidad = (id,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"transfers/\"+id;\r\n    \r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\nexport const registrarUnidad = (data,store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"transfers\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\nexport const obtenerTodos = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"transfers\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerSistemaEvaluaciones = (setLabels,setValues,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"systems_evaluations\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setLabels(response.data.system)\r\n      setValues(response.data.count)\r\n\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport Confirmar from '../../../../components/Confirmar'\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Checkbox, FormControlLabel, Grid } from '@material-ui/core';\r\nimport { editar as editarPedido, obtenerDetalleOrden, registrar as registrarPedido,obtenerInventarioOrden, guardarAlmacen } from '../../../../utils/API/pedidos';\r\nimport { obtenerTodos } from '../../../../utils/API/proveedores';\r\nimport { obtenerInventario, obtenerTodos as obtenerTodosBodegas } from '../../../../utils/API/bodegas';\r\n\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport MaterialTable from 'material-table';\r\nimport { LocalizationTable, TableIcons } from '../../../../utils/table';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [cantidad, setCantidad] = React.useState(\"\")\r\n    const [proveedor, setProveedor] = React.useState(\"\")\r\n    const [proveedorData, setProveedorData] = React.useState([])\r\n    const [inventario, setInventario] = React.useState([])\r\n    const [productos, setProductos] = React.useState([])\r\n    const [productosData, setProductosData] = React.useState([])\r\n    const [producto, setProducto] = React.useState('')\r\n\r\n    const [almacen, setAlmacen] = React.useState([])\r\n    const [bodegaData, setBodegaData] = React.useState([])\r\n    const [bodegaO, setBodegaO] = React.useState('')\r\n    const [bodegaD, setBodegaD] = React.useState('')\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerTodos(setProveedorData, initializer)\r\n            obtenerTodosBodegas(setBodegaData, initializer)\r\n\r\n        }\r\n    }, [initializer.usuario ])\r\n    React.useEffect(() => {\r\n        if (props.sistema != null&&props.open) {\r\n            console.log(props.open)\r\n            setProductos([])\r\n            setAlmacen([])\r\n            obtenerInventarioOrden(props.sistema.id,setProductos, initializer)\r\n\r\n\r\n        }\r\n    }, [props.sistema,props.open])\r\n    const guardar = () => {\r\n      \r\n        guardarAlmacen({data:almacen},initializer)\r\n    \r\n        props.setOpen(false)\r\n    \r\n        limpiar()\r\n    }\r\n    const limpiar = () => {\r\n        setCantidad(\"\")\r\n        setProveedor(\"\")\r\n        setProducto(\"\")\r\n        setProductos([])\r\n        setAlmacen([])\r\n        props.setSelected(null)\r\n        props.carga()\r\n    }\r\n   \r\n    const getName = (id,data) => {\r\n        let object = null\r\n        data.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n    const validarData=()=>{\r\n        let final=[]\r\n\r\n        productos.map((e)=>{\r\n            \r\n            if (!final.some(i => i.supplier_id === e.supplier_id)) {\r\n                final.push({\r\n                    supplier_id:e.supplier_id,\r\n                    products:obtenerProductosPorId(e.supplier_id)\r\n                })\r\n            }\r\n           \r\n        })\r\n        return final\r\n    }\r\n    const obtenerProductosPorId=(id)=>{\r\n        return productos.filter((e)=>e.supplier_id==id)\r\n    }\r\n    const agregar=() => {\r\n        if(producto!=\"\"&&proveedor!=\"\"&&cantidad!=\"\"&&cantidad>0){\r\n            let t = productos.slice()\r\n            t.push({product:obtenerProducto(producto),supplier:obtenerProveedor(proveedor),product_id:producto,quantity:cantidad,supplier_id:proveedor})\r\n            setProductos(t)\r\n            setCantidad('')\r\n  \r\n            setProducto('')\r\n        }\r\n       \r\n    }\r\n    const obtenerProveedor=(id)=> {\r\n        let nombre=\"\"\r\n        proveedorData.map((e)=>{\r\n            if(e.id==id){\r\n                nombre=e.business_name\r\n            }\r\n        })\r\n        return nombre\r\n    }\r\n    const obtenerBodega=(id)=> {\r\n        let nombre=\"\"\r\n        bodegaData.map((e)=>{\r\n            if(e.id==id){\r\n                nombre=e.name\r\n            }\r\n        })\r\n        return nombre\r\n    }\r\n    const obtenerProducto=(id)=> {\r\n        let nombre=\"\"\r\n        productosData.map((e)=>{\r\n            if(e.id==id){\r\n                nombre=e.name\r\n            }\r\n        })\r\n        return nombre\r\n    }\r\n    const quitar=(row) => {\r\n        let t0=inventario.slice()\r\n        let id = row.tableData.id\r\n        let t = almacen.slice()\r\n        console.log(row)\r\n        t0.push({numero:row.numero,product_id:row.product_id,inventory_id:row.inventory_id,name:row.name,jp_code:row.jp_code,supplier_code:row.supplier_code })\r\n        setInventario(t0)\r\n\r\n        setAlmacen(t.filter((e,i) =>i!=id))\r\n     \r\n    }\r\n    const quitarInventario=(row) => {\r\n    \r\n       let t = [];\r\n       inventario.slice().map((e,i) =>{\r\n           if(!estaIncluido(e.inventory_id,row)){\r\n            t.push({...e})\r\n           }\r\n       })\r\n       setInventario(t)\r\n       \r\n    }\r\n    const estaIncluido=(id,dt) => {\r\n        let res = false\r\n        dt.map((e,i) =>{\r\n            if(e.inventory_id==id){\r\n                res = true\r\n            }\r\n        })\r\n        return res\r\n    }\r\n    const almacenar=(dat)=>{\r\n       let eli=[]\r\n       if(bodegaD!=\"\"){\r\n        let t=almacen.slice()\r\n        dat.map((e)=>{\r\n            eli.push(e)\r\n            t.push({...e,warehouse_idO:bodegaO,warehouse_id:bodegaD,warehouse:obtenerBodega(bodegaD)})\r\n        })\r\n       console.log(t)\r\n        quitarInventario(dat)\r\n        setAlmacen(t)\r\n       }else{\r\n          \r\n           initializer.mostrarNotificacion({ type: \"warning\", message: 'Seleccione una bodega destino' });\r\n\r\n       }\r\n    \r\n    }\r\n    const cargarInventario=(id)=>{\r\n        if (id!=''){\r\n            setInventario([])\r\n            obtenerInventario(id,setInventario,initializer)\r\n        }\r\n  \r\n    }\r\n    return (\r\n        <Dialog\r\n        fullWidth\r\n        maxWidth='lg'\r\n        fullScreen\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n                limpiar()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            \r\n            <DialogTitle id=\"alert-dialog-slide-title\">Transferencia</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    Seleccione los productos y envíelos a la bodega correspondiente\r\n                </DialogContentText>\r\n                <Grid container spacing={2}>\r\n                <Grid item xs={12} md={12} style={{ display: 'flex' }}>\r\n                        <Autocomplete\r\n\r\n                            style={{ width: '100%' }}\r\n                            options={bodegaData}\r\n                            value={getName(bodegaO,bodegaData)}\r\n                            getOptionLabel={(option) => option.name}\r\n                            onChange={(event, value) => {\r\n                                if (value != null) {\r\n\r\n                                    setBodegaO(value.id)\r\n                                    setBodegaD('')\r\n                                    cargarInventario(value.id)\r\n                                } else {\r\n\r\n                                    setBodegaO('')\r\n                                    setBodegaD('')\r\n                                }\r\n\r\n                            }} // prints the selected value\r\n                            renderInput={params => (\r\n                                <TextField {...params} label=\"Seleccione la bodega origen\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={12} style={{ display: 'flex' }}>\r\n                        <Autocomplete\r\n\r\n                            style={{ width: '100%' }}\r\n                            options={bodegaData}\r\n                            getOptionDisabled={(option) => option.id === bodegaO}\r\n                            value={getName(bodegaD,bodegaData)}\r\n                            getOptionLabel={(option) => option.name}\r\n                            onChange={(event, value) => {\r\n                                if (value != null) {\r\n                                    if(bodegaO!=value.id){\r\n                                        setBodegaD(value.id)\r\n\r\n                                    }\r\n                                } else {\r\n\r\n                                    setBodegaD('')\r\n\r\n                                }\r\n\r\n                            }} // prints the selected value\r\n                            renderInput={params => (\r\n                                <TextField {...params} label=\"Seleccione la bodega destino\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n\r\n                    </Grid>\r\n                    \r\n                  \r\n                 \r\n                 <Grid item xs={12} md={12}>\r\n\r\n                 <MaterialTable\r\n                 key={1}\r\n                 id={1}\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                 \r\n\r\n                        {\r\n                            title: 'Producto',\r\n                            field: 'name',\r\n                            render: rowData => (\r\n                             <span >{rowData.name}</span>\r\n                            ),\r\n                          },\r\n                        { title: \"Código JP\", field: \"jp_code\" },\r\n                        { title: \"Código Proveedor\", field: \"supplier_code\" }\r\n                \r\n\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        inventario\r\n                    }\r\n                    title=\"Productos en el pedido\"\r\n                   \r\n                    localization={LocalizationTable}\r\n                    actions={[\r\n                        {\r\n                            icon: TableIcons.Add,\r\n                            tooltip: 'Agregar',\r\n                         \r\n                            onClick: (evt, data1) => almacenar( data1 )\r\n                         }\r\n                    ]}\r\n                  \r\n\r\n                    options={{\r\n                        pageSize:10,\r\n                        paging:false,\r\n                        search:false,\r\n                        selection: true,\r\n                        actionsColumnIndex: -1,\r\n                        width:'100%',\r\n                        maxBodyHeight: 150,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n</Grid>\r\n<Grid item xs={12} md={12}>\r\n\r\n<MaterialTable\r\nkey={2}\r\nid={2}\r\n   icons={TableIcons}\r\n   columns={[\r\n\r\n       {\r\n           title: 'Producto',\r\n           field: 'name',\r\n           render: rowData => (\r\n            <span >{rowData.name}</span>\r\n           ),\r\n         },\r\n       { title: \"Código JP\", field: \"jp_code\" },\r\n       { title: \"Código Proveedor\", field: \"supplier_code\" },\r\n       { title: \"Bodega Destino\", field: \"warehouse\" }\r\n\r\n\r\n\r\n\r\n   ]}\r\n   data={\r\n       almacen\r\n   }\r\n\r\n   localization={LocalizationTable}\r\n\r\nactions={[    \r\n{\r\n   icon: TableIcons.Delete,\r\n   tooltip: 'Eliminar',\r\n\r\n   onClick: (event, rowData) => {\r\n     quitar(rowData)\r\n   }\r\n}]}\r\n\r\n   options={{\r\n       pageSize:10,\r\n       selection:false,\r\n       paging: false,\r\n       toolbar:false,\r\n       showTitle: false,\r\n       actionsColumnIndex: -1,\r\n       width:'100%',\r\n       maxBodyHeight: 170,\r\n       padding: 'dense',\r\n       headerStyle: {\r\n           textAlign: 'left'\r\n       },\r\n       cellStyle: {\r\n           textAlign: 'left'\r\n       },\r\n       searchFieldStyle: {\r\n\r\n           padding: 5\r\n       }\r\n   }}\r\n\r\n/>\r\n</Grid>\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                      limpiar()\r\n                }} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" disabled={almacen.length==0} onClick={()=>{\r\n                  guardar()\r\n                }}>\r\n                    Guardar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { eliminar as eliminarBodega, registrarSistema } from '../../../../utils/API/bodegas';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const guardar=()=>{\r\n        eliminarBodega(props.sistema.id,initializer)\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => props.setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    ¿Está seguro que desea eliminar el registro?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editarSistema, registrarSistema } from '../../../../utils/API/sistemas';\r\nimport { obtenerTodos as obtenerUnidades } from '../../../../utils/API/unidades';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [unity, setUnity] = React.useState(\"\")\r\n    const [unityData, setUnityData] = React.useState([])\r\n\r\n    const getName=()=>{\r\n\r\n    }\r\n \r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Filtrar productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                Puede seleccionar filtros anidados\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={1}>\r\n               \r\n                   \r\n                     <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una bodega\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                    \r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una categoría\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una medida\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => props.setOpen(false)}>\r\n                    Confirmar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Initializer from '../../../store/Initializer'\r\n\r\nimport { LocalizationTable, TableIcons, removeAccent } from '../../../utils/table.js'\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { obtenerTodos } from '../../../utils/API/transferencias';\r\nimport Crear from './componentes/Crear'\r\nimport Eliminar from './componentes/Eliminar'\r\nimport Filtro from './componentes/Filtro'\r\n\r\nexport default function Sistemas(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [data, setData] = React.useState([])\r\n    const [open, setOpen] = React.useState(false)\r\n    const [open2, setOpen2] = React.useState(false)\r\n    const [selected, setSelected] = React.useState(null)\r\n    const [selected2, setSelected2] = React.useState(null)\r\n    const [openFilter, setOpenFilter] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerTodos(setData, initializer)\r\n        }\r\n    }, [initializer.usuario])\r\n    const carga = () => {\r\n        obtenerTodos(setData, initializer)\r\n        setSelected(null)\r\n        setSelected2(null)\r\n    }\r\n    const total=()=>{\r\n        let tot=0\r\n        data.map((e)=>{\r\n            tot+=e.evaluaciones\r\n        })\r\n        return tot\r\n    }\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Crear sistema={selected} setSelected={setSelected} setOpen={setOpen} open={open} carga={carga} />\r\n            <Eliminar sistema={selected2} setOpen={setOpen2} open={open2} carga={carga} />\r\n            <Filtro setOpen={setOpenFilter} open={openFilter}  />\r\n\r\n            <Grid item xs={12} md={12} style={{display:'flex',justifyContent:'space-between'}}>\r\n                <Typography variant=\"h5\" >\r\n                    Transferencias\r\n                </Typography>\r\n                <Button onClick={() => setOpen(true)} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\">\r\n                        Nuevo\r\n                    </Button>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={12} style={{ display: 'flex', marginTop: 10 }}>\r\n\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5,borderRadius:12,borderColor: 'rgba(0, 0, 0, 0.12)',borderWidth:1,borderStyle: 'solid'}} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Totales\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                {data.length}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(94, 53, 177)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n               \r\n            </Grid>\r\n      \r\n            <Grid item xs={12}>\r\n                <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                      \r\n                        { title: \"Nombre\", field: \"name\" },\r\n                        { title: \"Descripción\", field: \"jp_code\" },\r\n                        { title: \"Zona\", field: \"supplier_code\" },\r\n                        { title: \"Productos\", field: \"warehouse_origin\" },\r\n                        { title: \"Productos\", field: \"warehouse_destination\" },\r\n                        { title: \"Registro\", field: \"created_at\", type: \"datetime\" },\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        data\r\n                    }\r\n\r\n                    localization={LocalizationTable}\r\n\r\n                    actions={[\r\n                        {\r\n                            icon: TableIcons.Edit,\r\n                            tooltip: 'Editar',\r\n\r\n                            onClick: (event, rowData) => {\r\n                                setSelected(rowData)\r\n                                setOpen(true)\r\n                            }\r\n                        },\r\n                        {\r\n                            icon: TableIcons.Filter,\r\n                            tooltip: 'Filtrar',\r\n                            isFreeAction: true,\r\n                            onClick: (event) => setOpenFilter(true)\r\n                          }\r\n\r\n                    ]}\r\n\r\n                    options={{\r\n                        pageSize:10,\r\n                        showTitle: false,\r\n                        actionsColumnIndex: -1,\r\n                      \r\n                        maxBodyHeight: 350,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const editarUnidad= (id,data, store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"adjustments/\"+id;\r\n    let setting = {\r\n      method: \"PUT\",\r\n      url: url,\r\n      params:data,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const eliminarUnidad = (id,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"adjustments/\"+id;\r\n    \r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\nexport const registrarUnidad = (data,store,limpiar) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"adjustments\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          limpiar()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\nexport const obtenerTodos = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"adjustments\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerSistemaEvaluaciones = (setLabels,setValues,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"systems_evaluations\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setLabels(response.data.system)\r\n      setValues(response.data.count)\r\n\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const editarUnidad= (id,data, store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"reasons/\"+id;\r\n    let setting = {\r\n      method: \"PUT\",\r\n      url: url,\r\n      params:data,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const eliminarUnidad = (id,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"reasons/\"+id;\r\n    \r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\nexport const registrarUnidad = (data,store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"reasons\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\nexport const obtenerTodos = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"reasons\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerSistemaEvaluaciones = (setLabels,setValues,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"systems_evaluations\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setLabels(response.data.system)\r\n      setValues(response.data.count)\r\n\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport Confirmar from '../../../../components/Confirmar'\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Checkbox, FormControlLabel, Grid } from '@material-ui/core';\r\nimport { editar as editarPedido, obtenerDetalleOrden, registrar as registrarPedido,obtenerInventarioOrden, guardarAlmacen } from '../../../../utils/API/pedidos';\r\nimport { obtenerTodos as obtenerRazones } from '../../../../utils/API/razones';\r\nimport { obtenerInventario, obtenerTodos as obtenerTodosBodegas } from '../../../../utils/API/bodegas';\r\nimport { obtenerTodos as obtenerProductos } from '../../../../utils/API/sistemas';\r\nimport Crear from '../../Productos/componentes/Crear'\r\n\r\nimport { Alert, Autocomplete } from '@material-ui/lab';\r\nimport MaterialTable from 'material-table';\r\nimport { LocalizationTable, TableIcons } from '../../../../utils/table';\r\nimport { registrarUnidad } from '../../../../utils/API/ajustes';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crearn(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [cantidad, setCantidad] = React.useState(\"\")\r\n    const [razon, setRazon] = React.useState(\"\")\r\n    const [razonData, setRazonData] = React.useState([])\r\n    const [inventario, setInventario] = React.useState([])\r\n    const [productos, setProductos] = React.useState([])\r\n    const [crearProducto, setCrearProducto] = React.useState(false)\r\n\r\n\r\n    const [almacen, setAlmacen] = React.useState([])\r\n    const [bodegaData, setBodegaData] = React.useState([])\r\n    const [bodegaO, setBodegaO] = React.useState('')\r\n    const [bodegaD, setBodegaD] = React.useState('')\r\n    const [productosData, setProductosData] = React.useState([])\r\n    const [producto, setProducto] = React.useState('')\r\n    const [productoC, setProductoC] = React.useState(null)\r\n    const [fraction, setFraction] = React.useState(\"\")\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerRazones(setRazonData, initializer)\r\n            obtenerTodosBodegas(setBodegaData, initializer)\r\n            obtenerProductos(setProductosData, initializer)\r\n\r\n        }\r\n    }, [initializer.usuario ])\r\n    React.useEffect(() => {\r\n        if (props.sistema != null&&props.open) {\r\n            console.log(props.open)\r\n            setProductos([])\r\n            setAlmacen([])\r\n            obtenerInventarioOrden(props.sistema.id,setProductos, initializer)\r\n\r\n\r\n        }\r\n    }, [props.sistema,props.open])\r\n    const guardar = () => {\r\n        registrarUnidad({data:productos},initializer,limpiar)\r\n        props.setOpen(false)\r\n    }\r\n    const limpiar = () => {\r\n      \r\n        setCantidad(\"\")\r\n        setRazon(\"\")\r\n        setProducto('')\r\n        setProductoC(null)\r\n\r\n        setProductos([])\r\n        setAlmacen([])\r\n        props.setSelected(null)\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n   \r\n    const getName = (id,data) => {\r\n        let object = null\r\n        data.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n    const validarData=()=>{\r\n        let final=[]\r\n\r\n        productos.map((e)=>{\r\n            \r\n            if (!final.some(i => i.supplier_id === e.supplier_id)) {\r\n                final.push({\r\n                    supplier_id:e.supplier_id,\r\n                    products:obtenerProductosPorId(e.supplier_id)\r\n                })\r\n            }\r\n           \r\n        })\r\n        return final\r\n    }\r\n    const obtenerProductosPorId=(id)=>{\r\n        return productos.filter((e)=>e.supplier_id==id)\r\n    }\r\n    const quitar=(row) => {\r\n        let id = row.tableData.id\r\n        let t = productos.slice()\r\n      \r\n\r\n        setProductos(t.filter((e,i) =>i!=id))\r\n        setCantidad('')\r\n        setFraction('')\r\n        setRazon('')\r\n        setProducto('')\r\n        setProductoC(null)\r\n\r\n    }\r\n\r\n\r\n  \r\n    const obtenerBodega=(id)=> {\r\n        let nombre=\"\"\r\n        bodegaData.map((e)=>{\r\n            if(e.id==id){\r\n                nombre=e.name\r\n            }\r\n        })\r\n        return nombre\r\n    }\r\n    const obtenerRazon=(id)=> {\r\n        let nombre=\"\"\r\n        razonData.map((e)=>{\r\n            if(e.id==id){\r\n                nombre=e.name\r\n            }\r\n        })\r\n        return nombre\r\n    }\r\n   \r\n    const quitarInventario=(row) => {\r\n    \r\n       let t = [];\r\n       inventario.slice().map((e,i) =>{\r\n           if(!estaIncluido(e.inventory_id,row)){\r\n            t.push({...e})\r\n           }\r\n       })\r\n       setInventario(t)\r\n       \r\n    }\r\n    const estaIncluido=(id,dt) => {\r\n        let res = false\r\n        dt.map((e,i) =>{\r\n            if(e.inventory_id==id){\r\n                res = true\r\n            }\r\n        })\r\n        return res\r\n    }\r\n    \r\n    const cargarInventario=(id)=>{\r\n        if (id!=''){\r\n            setInventario([])\r\n            obtenerInventario(id,setInventario,initializer)\r\n        }\r\n  \r\n    }\r\n    const existeEnDetalle=(id)=>{\r\n        let exs = false\r\n        productos.map((e)=>{\r\n          if(e.product_id==id){\r\n              exs=true\r\n          }  \r\n        })\r\n        return exs\r\n    }\r\n    const agregar=() => {\r\n        if(producto!=\"\"&&razon!=\"\"&&cantidad!=\"\"&&cantidad>0&&cantidad>0){\r\n            let outStock=false\r\n            let t = productos.slice()\r\n           \r\n                if(!existeEnDetalle(productoC.id)){\r\n                    let frac = ((cantidad % 1)*productoC.fraction).toFixed(1)*1\r\n                   \r\n                    let unity =cantidad-(cantidad % 1)\r\n               \r\n                if(razon==2){\r\n                    if((productoC.stock-cantidad)>=0){\r\n                        t.push({warehouse:productoC.warehouse,unity:unity,fraction:frac,product:productoC.name,bar_code:productoC.bar_code,stock:productoC.stock,product_id:productoC.id,reason_id:razon,reason:obtenerRazon(razon),quantity:cantidad})\r\n                        }else{\r\n                            outStock=true\r\n                        }\r\n                }else{\r\n                    t.push({warehouse:productoC.warehouse,unity:unity,fraction:frac,product:productoC.name,bar_code:productoC.bar_code,stock:productoC.stock,product_id:productoC.id,reason_id:razon,reason:obtenerRazon(razon),quantity:cantidad})\r\n\r\n                }\r\n            }\r\n         \r\n            setProductos(t)\r\n            setCantidad('')\r\n            setFraction('')\r\n            setProducto('')\r\n            setProductoC(null)\r\n            if(outStock){\r\n                initializer.mostrarNotificacion({ type: \"warning\", message: 'No hay suficiente stock' });\r\n            }\r\n        }else{\r\n            initializer.mostrarNotificacion({ type: \"warning\", message: 'No deje campos vacíos' });\r\n\r\n        }\r\n       \r\n    }\r\n    const getName2 = (id) => {\r\n        let object = null\r\n        razonData.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n    const cambiarFraccionamiento = (obj, modi, val) => {\r\n        console.log(obj)\r\n        if (obj == null) {\r\n            return 0\r\n        }\r\n        if (modi == 'cantidad') {\r\n            if (val > obj.stock&&razon==2) {\r\n                return 0\r\n            } else {\r\n                let fr = obj.fraction\r\n                let t = fr * val\r\n                return t\r\n            }\r\n\r\n        } else if (modi == \"fraccion\") {\r\n            console.log(\"valor cambiar\" + val)\r\n            let temp = obj.stock * obj.fraction\r\n            console.log(\"valor maximo\" + temp)\r\n            if (val > temp&&razon==2) {\r\n                return 0\r\n            } else {\r\n                let decT = (val * 1) / obj.fraction\r\n               \r\n\r\n             \r\n                return decT\r\n            }\r\n        }\r\n\r\n    }\r\n    const obtenerFraccionUnidades=(cantidad,fraccion)=>{\r\n        let frac = ((cantidad % 1)*fraccion).toFixed(1)*1\r\n        let unity =cantidad-(cantidad % 1)\r\n\r\n        return {unity,frac}\r\n\r\n    }\r\n    return (\r\n        <Dialog\r\n        fullWidth\r\n        maxWidth='lg'\r\n        fullScreen\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n                limpiar()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n              <Crear sistema={null} setSelected={()=>null} setOpen={setCrearProducto} open={crearProducto} carga={()=>{\r\n                 obtenerProductos(setProductosData, initializer)\r\n         }} />\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Ajuste</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    Seleccione los productos y cantidades a ajustar\r\n                </DialogContentText>\r\n                <Grid container spacing={2}>\r\n                <Grid item xs={12} md={6} style={{ display: 'flex' }}>\r\n                        <Autocomplete\r\n\r\n                            style={{ width: '100%' }}\r\n                            size=\"small\"\r\n                            options={razonData}\r\n                            \r\n                            value={getName2(razon)}\r\n                            onChange={(event, newValue) => {\r\n                              \r\n                                if (newValue != null) {\r\n\r\n                                    setRazon(newValue.id);\r\n                                } else {\r\n\r\n                                    setRazon('')\r\n\r\n                                }\r\n                              }}\r\n                            getOptionLabel={(option) =>option.name}\r\n                         // prints the selected value\r\n                            renderInput={params => (\r\n                                <TextField    variant=\"outlined\" {...params} label=\"Seleccione un tipo\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} style={{ display: 'flex' }}>\r\n                        <Autocomplete\r\n\r\n                            style={{ width: '100%' }}\r\n                            size=\"small\"\r\n                            options={productosData}\r\n                            value={getName(producto, productosData)}\r\n\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n\r\n                                    setProducto(newValue.id);\r\n                                    setProductoC(newValue)\r\n                                    setCantidad(1)\r\n                                    setFraction(newValue.fraction)\r\n                                } else {\r\n                                    setProductoC(null)\r\n                                    setProducto('')\r\n\r\n                                }\r\n                            }}\r\n                            getOptionLabel={(option) => option.bar_code + \" - \" + option.name + \" - unidades: \" +obtenerFraccionUnidades(option.stock,option.fraction).unity+ (option.fraction!=0?(\" - fracciones: \"+obtenerFraccionUnidades(option.stock,option.fraction).frac):\"\")}\r\n                            // prints the selected value\r\n                            renderInput={params => (\r\n                                <TextField variant=\"outlined\" {...params} label=\"Seleccione un producto\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={ productoC!=null?(productoC.fraction!=0?6:12):12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{  width: '100%' }}\r\n                        type=\"number\"\r\n                        size=\"small\"\r\n                        label=\"Unidad\"\r\n                        min=\"0\"\r\n                        value={cantidad}\r\n                        onChange={(e) => {\r\n                            setCantidad(e.target.value)\r\n                            if(productoC!=null){\r\n                                if (productoC.fraction != 0) {\r\n                                    setFraction(cambiarFraccionamiento(productoC, 'cantidad', e.target.value))\r\n    \r\n                                }\r\n                            }\r\n                           \r\n                        }}\r\n\r\n                    /></Grid>\r\n                  {\r\n                        productoC!=null?\r\n                        productoC.fraction != 0 ?\r\n                            <Grid item xs={12} md={6} >    <TextField\r\n                                variant=\"outlined\"\r\n                                style={{ width: '100%' }}\r\n                             \r\n                                size=\"small\"\r\n                                label=\"Fracciones\"\r\n\r\n                                value={fraction}\r\n                                onChange={(e) => {\r\n                                    const re = /^[0-9\\b]+$/;\r\n\r\n                                    if (e.target.value === \"\" || re.test(e.target.value)) {\r\n                                    setFraction(e.target.value)\r\n                                    setCantidad(cambiarFraccionamiento(productoC, 'fraccion', e.target.value).toFixed(3)*1)\r\n\r\n                                    }\r\n                                }}\r\n\r\n                            /></Grid>\r\n                            : null :null\r\n                    }\r\n\r\n                    {\r\n                        ((cantidad == 0 && fraction != 0) || (fraction == 0 && cantidad != 0)) && (productoC!=null?(productoC.fraction != 0?true:false):false) ?\r\n                            <Grid item xs={12} md={12}>\r\n\r\n                                <Alert severity=\"info\">No hay stock suficiente</Alert>\r\n                            </Grid>\r\n                            : null\r\n                    }\r\n                 \r\n                 <Grid item xs={12} md={12}>\r\n\r\n                 <MaterialTable\r\n                 key={1}\r\n                 id={1}\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                 \r\n\r\n                        {\r\n                            title: 'Producto',\r\n                            field: 'product',\r\n                            render: rowData => (\r\n                             <span >{rowData.product}</span>\r\n                            ),\r\n                          },\r\n                        { title: \"Código de Barras\", field: \"bar_code\" },\r\n                        { title: \"Laboratorio\", field: \"warehouse\" },\r\n                        { title: \"Unidades\", field: \"unity\", editable: 'never' },\r\n                        { title: \"Fracciones\", field: \"fraction\", editable: 'never' },\r\n                        { title: \"Tipo\", field: \"reason\" }\r\n\r\n                \r\n\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        productos\r\n                    }\r\n                    title=\"Productos a ajustar\"\r\n                   \r\n                    localization={LocalizationTable}\r\n                    actions={[      {\r\n                        icon: TableIcons.Add,\r\n                        tooltip: 'Agregar',\r\n                        isFreeAction:true,\r\n                        onClick: (event, rowData) => {\r\n                          agregar()\r\n                        }\r\n                    },\r\n                    {\r\n                        icon: TableIcons.Delete,\r\n                        tooltip: 'Eliminar',\r\n                     \r\n                        onClick: (event, rowData) => {\r\n                          quitar(rowData)\r\n                        }\r\n                    }]}\r\n                  \r\n\r\n                    options={{\r\n                        pageSize:10,\r\n                        paging:false,\r\n                        search:false,\r\n                     \r\n                        actionsColumnIndex: -1,\r\n                        width:'100%',\r\n                        maxBodyHeight: 150,\r\n          \r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n</Grid>\r\n\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                      limpiar()\r\n                }} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" disabled={productos.length==0} onClick={()=>{\r\n                  guardar()\r\n                }}>\r\n                    Guardar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { eliminar as eliminarBodega, registrarSistema } from '../../../../utils/API/bodegas';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const guardar=()=>{\r\n        eliminarBodega(props.sistema.id,initializer)\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => props.setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    ¿Está seguro que desea eliminar el registro?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editarSistema, registrarSistema } from '../../../../utils/API/sistemas';\r\nimport { obtenerTodos as obtenerUnidades } from '../../../../utils/API/unidades';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [unity, setUnity] = React.useState(\"\")\r\n    const [unityData, setUnityData] = React.useState([])\r\n\r\n    const getName=()=>{\r\n\r\n    }\r\n \r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Filtrar productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                Puede seleccionar filtros anidados\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={1}>\r\n               \r\n                   \r\n                     <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una bodega\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                    \r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una categoría\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una medida\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => props.setOpen(false)}>\r\n                    Confirmar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Initializer from '../../../store/Initializer'\r\n\r\nimport { LocalizationTable, TableIcons, removeAccent } from '../../../utils/table.js'\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { obtenerTodos } from '../../../utils/API/ajustes';\r\nimport Crear from './componentes/Crear'\r\nimport Eliminar from './componentes/Eliminar'\r\nimport Filtro from './componentes/Filtro'\r\n\r\nexport default function Sistemas(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [data, setData] = React.useState([])\r\n    const [open, setOpen] = React.useState(false)\r\n    const [open2, setOpen2] = React.useState(false)\r\n    const [selected, setSelected] = React.useState(null)\r\n    const [selected2, setSelected2] = React.useState(null)\r\n    const [openFilter, setOpenFilter] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerTodos(setData, initializer)\r\n        }\r\n    }, [initializer.usuario])\r\n    const carga = () => {\r\n        obtenerTodos(setData, initializer)\r\n        setSelected(null)\r\n        setSelected2(null)\r\n    }\r\n    const total=()=>{\r\n        let tot=0\r\n        data.map((e)=>{\r\n            tot+=e.evaluaciones\r\n        })\r\n        return tot\r\n    }\r\n    const obtenerFraccionUnidades=(cantidad,fraccion)=>{\r\n        let frac = ((cantidad % 1)*fraccion).toFixed(1)*1\r\n        let unity =cantidad-(cantidad % 1)\r\n\r\n        return {unity,frac}\r\n\r\n    }\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Crear sistema={selected} setSelected={setSelected} setOpen={setOpen} open={open} carga={carga} />\r\n            <Eliminar sistema={selected2} setOpen={setOpen2} open={open2} carga={carga} />\r\n            <Filtro setOpen={setOpenFilter} open={openFilter}  />\r\n\r\n            <Grid item xs={12} md={12} style={{display:'flex',justifyContent:'space-between'}}>\r\n                <Typography variant=\"h5\" >\r\n                    Ajustes\r\n                </Typography>\r\n                <Button onClick={() => setOpen(true)} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\">\r\n                        Nuevo\r\n                    </Button>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={12} style={{ display: 'flex', marginTop: 10 }}>\r\n\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5,borderRadius:12,borderColor: 'rgba(0, 0, 0, 0.12)',borderWidth:1,borderStyle: 'solid'}} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Totales\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                {data.length}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(94, 53, 177)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n               \r\n            </Grid>\r\n      \r\n            <Grid item xs={12}>\r\n                <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                      \r\n                        { title: \"Nombre\", field: \"name\" },\r\n                        { title: \"Codigo de Barras\", field: \"bar_code\" },\r\n                        { title: \"Laboratorio\", field: \"warehouse\" },\r\n                        { title: \"Ajuste unidad\", field: \"quantity\" ,render: rowData => (\r\n                            <span>{obtenerFraccionUnidades(rowData.quantity,rowData.fraction).unity}</span>\r\n                        ), },\r\n                        { title: \"Ajuste fracción\", field: \"quantity\" ,render: rowData => (\r\n                            <span>{obtenerFraccionUnidades(rowData.quantity,rowData.fraction).frac}</span>\r\n                        ), },\r\n                        { title: \"Tipo\", field: \"reason\" },\r\n\r\n                     \r\n                        { title: \"Registro\", field: \"created_at\", type: \"datetime\" },\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        data\r\n                    }\r\n\r\n                    localization={LocalizationTable}\r\n\r\n                 \r\n\r\n                    options={{\r\n                        pageSize:10,\r\n                        showTitle: false,\r\n                        actionsColumnIndex: -1,\r\n                      \r\n                        maxBodyHeight: 350,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editar as editarBodega, registrar as registrarBodega } from '../../../../utils/API/clientes';\r\nimport { obtenerTodos as obtenerZonas } from '../../../../utils/API/zones';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [nombre, setNombre] = React.useState(\"\")\r\n    const [documento, setDocumento] = React.useState(\"\")\r\n    const [direccion, setDireccion] = React.useState(\"\")\r\n    const [celular, setCelular] = React.useState(\"\")\r\n    const [correo, setCorreo] = React.useState(\"\")\r\n    const [telefono, setTelefono] = React.useState(\"\")\r\n    const [jpcode, setJpcode] = React.useState(\"\")\r\n    const [supplierCode, setSupplirCode] = React.useState(\"\")\r\n    const [serie, setSerie] = React.useState(\"\")\r\n    const [zone, setZone] = React.useState(\"\")\r\n    const [zoneData, setZoneData] = React.useState([])\r\n    const [image, setImage] = React.useState(\"\")\r\n\r\n    const [stock, setStock] = React.useState(\"\")\r\n    const [stockMin, setStockMin] = React.useState(\"\")\r\n    const [stockMax, setStockMax] = React.useState(\"\")\r\n\r\n    const [descripcion, setDescripcion] = React.useState(\"\")\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n\r\n        obtenerZonas(setZoneData,initializer)\r\n        }\r\n  \r\n}, [initializer.usuario])\r\n    React.useEffect(()=>{\r\n        if(props.sistema!=null){\r\n            setNombre(props.sistema.names)\r\n            setDocumento(props.sistema.document)\r\n            setDireccion(props.sistema.address)\r\n            setCelular(props.sistema.cellphone)\r\n            setCorreo(props.sistema.email)\r\n            setTelefono(props.sistema.landline)\r\n\r\n        }\r\n    },[props.sistema])\r\n    const guardar=()=>{\r\n        let data={ \r\n        'names': nombre,\r\n        'document': documento,\r\n        'address': direccion,\r\n        'cellphone': celular,\r\n        'email': correo,\r\n        'landline': telefono}\r\n        if(props.sistema==null){\r\n            registrarBodega(data,initializer,limpiar)\r\n          \r\n        }else{\r\n            editarBodega(props.sistema.id,data,initializer,limpiar)\r\n\r\n        }\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n    const limpiar=()=>{\r\n        setNombre(\"\")\r\n        setDocumento(\"\")\r\n        setDireccion(\"\")\r\n        setCelular(\"\")\r\n        setCorreo(\"\")\r\n        setTelefono(\"\")\r\n        props.setSelected(null)\r\n        props.carga()\r\n    }\r\n    const getName = (id) => {\r\n        let object = null\r\n        zoneData.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n                limpiar()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Clientes</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                   {props.sistema!=null?\"Formulario de edición de clientes\": \"Formulario de creación de clientes\"}\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={2}>\r\n            \r\n    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                      \r\n                        label=\"Cédula/RUC\"\r\n                        value={documento}\r\n                        onChange={(e) => setDocumento(e.target.value)}\r\n\r\n                    /></Grid>\r\n                  \r\n                    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                      \r\n                        label=\"Nombre\"\r\n                        value={nombre}\r\n                        onChange={(e) => setNombre(e.target.value)}\r\n\r\n                    /></Grid>\r\n                  \r\n                  <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                      \r\n                        label=\"Dirección\"\r\n                        value={direccion}\r\n                        onChange={(e) => setDireccion(e.target.value)}\r\n\r\n                    /></Grid>\r\n                      <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                        type=\"number\"\r\n                        label=\"Celular\"\r\n                        value={celular}\r\n                        onChange={(e) => setCelular(e.target.value)}\r\n\r\n                    /></Grid>\r\n                      <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                        type=\"number\"\r\n                        label=\"Teléfono fijo\"\r\n                        value={telefono}\r\n                        onChange={(e) => setTelefono(e.target.value)}\r\n\r\n                    /></Grid>\r\n                   \r\n                   <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                      \r\n                        label=\"Correo\"\r\n                        value={correo}\r\n                        onChange={(e) => setCorreo(e.target.value)}\r\n\r\n                    /></Grid>\r\n\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Guardar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { eliminar as eliminarBodega, registrarSistema } from '../../../../utils/API/bodegas';\r\nimport { Alert } from '@material-ui/lab';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const [valor, setValor] = React.useState('');\r\n    const [cambio, setCambio] = React.useState('');\r\n\r\n    const guardar = () => {\r\n        if(valor!=\"\"){\r\n            let total = props.sistema\r\n            console.log(total)\r\n            console.log(valor)\r\n            let pagar = Math.abs(total-valor)\r\n            setCambio(pagar.toFixed(2))\r\n        }\r\n      \r\n      /*   props.setOpen(false)\r\n        props.carga() */\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n                setValor('')\r\n                setCambio('')\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Cambio</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    Ingresel valor pagado por el cliente\r\n                </DialogContentText>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"Valor\"\r\n                            style={{ width: '100%' }}\r\n                            value={valor}\r\n                            onChange={(e) => setValor(e.target.value)}\r\n\r\n                        />\r\n                    </Grid>\r\n                    {\r\n                        cambio!=\"\" &&(\r\n                            <Grid item xs={12} md={12}>\r\n                            <Alert severity=\"success\">Cambio: ${cambio}</Alert>\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                   \r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                    props.setOpen(false)\r\n                    setValor('')\r\n                    setCambio('')\r\n                }} color=\"default\">\r\n                    Cerrar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Calcular\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport Confirmar from '../../../../components/Confirmar'\r\nimport VerFoto from '../../../../components/Confirmar'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Checkbox, Grid, InputAdornment, Tooltip } from '@material-ui/core';\r\nimport { editar as editarPedido, obtenerDetalleOrden, registrar as registrarPedido, obtenerInventarioOrden, guardarAlmacen } from '../../../../utils/API/pedidos';\r\nimport { obtenerTodos as obtenerRazones } from '../../../../utils/API/razones';\r\nimport { obtenerInventario, obtenerTodos as obtenerTodosBodegas } from '../../../../utils/API/bodegas';\r\nimport { obtenerTodos as obtenerProductos } from '../../../../utils/API/sistemas';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport { Alert, Autocomplete } from '@material-ui/lab';\r\nimport MaterialTable from 'material-table';\r\nimport { LocalizationTable, TableIcons } from '../../../../utils/table';\r\nimport { registrarUnidad } from '../../../../utils/API/facturas';\r\nimport { obtenerTodos as obtenerClientes } from '../../../../utils/API/clientes';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { Paper } from '@material-ui/core';\r\nimport { PersonAddOutlined, PostAddOutlined } from '@material-ui/icons';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\nimport CrearCliente from '../../Clientes/componentes/Crear'\r\nimport { downloadFiles, printTicket } from '../../../../utils/API/reporte';\r\nimport { PUBLIC_PATH } from '../../../../config/API';\r\nimport Cambio from './Cambio'\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function CrearN(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const [open, setOpen] = React.useState(false)\r\n    const [finalConsumer, setFinalConsumer] = React.useState(false)\r\n    const [crearCliente, setCrearCliente] = React.useState(false)\r\n    const [cambioCliente, setCambioCliente] = React.useState(false)\r\n    const [confirmarMensaje, setConfirmarMensaje] = React.useState(false)\r\n    const [foto, setFoto] = React.useState(false)\r\n\r\n    const [imageSelected, setImageSelected] = React.useState(null)\r\n    const [cantidad, setCantidad] = React.useState(\"\")\r\n    const [fraction, setFraction] = React.useState(\"\")\r\n\r\n    const [inventario, setInventario] = React.useState([])\r\n    const [productos, setProductos] = React.useState([])\r\n\r\n    const [almacen, setAlmacen] = React.useState([])\r\n    const [bodegaData, setBodegaData] = React.useState([])\r\n    const [bodegaO, setBodegaO] = React.useState('')\r\n    const [bodegaD, setBodegaD] = React.useState('')\r\n    const [productosData, setProductosData] = React.useState([])\r\n    const [producto, setProducto] = React.useState(\"\")\r\n    const [productoC, setProductoC] = React.useState(null)\r\n\r\n    const [clientData, setClientData] = React.useState([])\r\n    const [client, setClient] = React.useState(\"\")\r\n\r\n    const [subTotalV, setSubTotalV] = React.useState(0)\r\n    const [subTotalVI, setSubTotalVI] = React.useState(0)\r\n    const [discount, setDiscount] = React.useState(0)\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n\r\n            obtenerTodosBodegas(setBodegaData, initializer)\r\n            obtenerProductos(setProductosData, initializer)\r\n            obtenerClientes(setClientData, initializer)\r\n        }\r\n    }, [initializer.usuario])\r\n    React.useEffect(() => {\r\n        if (props.sistema != null && props.open) {\r\n            console.log(props.open)\r\n            setProductos([])\r\n            setAlmacen([])\r\n            obtenerInventarioOrden(props.sistema.id, setProductos, initializer)\r\n\r\n\r\n        }\r\n    }, [props.sistema, props.open])\r\n    const guardar = () => {\r\n        if (finalConsumer == false && client == \"\") {\r\n            initializer.mostrarNotificacion({ type: \"warning\", message: 'Seleccione un cliente' });\r\n            return false\r\n        }\r\n        if (subTotalV == 0) {\r\n            initializer.mostrarNotificacion({ type: \"warning\", message: 'No puede hacer una factura por valor 0' });\r\n            return false\r\n        }\r\n\r\n        registrarUnidad({discount:discount, iva: (subTotalV - subTotalVI) * 0.12, client_id: finalConsumer ? '' : client, final_consumer: finalConsumer ? 1 : 0, total: subTotalV + ((subTotalV - subTotalVI) * 0.12), data: productos }, initializer, limpiar, imprimir)\r\n\r\n        props.setOpen(false)\r\n        obtenerProductos(setProductosData, initializer)\r\n\r\n\r\n\r\n\r\n    }\r\n    const imprimir = (id) => {\r\n        printTicket(id, initializer)\r\n    }\r\n    const limpiar = () => {\r\n        setSubTotalVI(0)\r\n        setCantidad(\"\")\r\n        setSubTotalV(0)\r\n        setClient(\"\")\r\n        setFinalConsumer(false)\r\n        setProducto(\"\")\r\n        setDiscount(0)\r\n        setProductos([])\r\n        setAlmacen([])\r\n        props.setSelected(null)\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n\r\n    const getName = (id, data) => {\r\n        let object = null\r\n        data.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n    const validarData = () => {\r\n        let final = []\r\n\r\n        productos.map((e) => {\r\n\r\n            if (!final.some(i => i.supplier_id === e.supplier_id)) {\r\n                final.push({\r\n                    supplier_id: e.supplier_id,\r\n                    products: obtenerProductosPorId(e.supplier_id)\r\n                })\r\n            }\r\n\r\n        })\r\n        return final\r\n    }\r\n    const obtenerProductosPorId = (id) => {\r\n        return productos.filter((e) => e.supplier_id == id)\r\n    }\r\n    const quitar = (row) => {\r\n        console.log(subTotalVI)\r\n        let id = row.tableData.id\r\n        let t = productos.slice()\r\n        let tot = subTotalV - row.subtotal\r\n        let toti = row.has_iva == 0 ? subTotalVI - row.subtotal : subTotalVI\r\n        let dsc = discount-row.hasOwnProperty('discount')?row.discount:0\r\n\r\n        setProductos(t.filter((e, i) => i != id))\r\n        setCantidad('')\r\n        setDiscount(dsc)\r\n        setProducto(\"\")\r\n        setSubTotalV(tot)\r\n        setSubTotalVI(toti)\r\n    }\r\n\r\n    const existeEnDetalle = (id) => {\r\n        let exs = false\r\n        productos.map((e) => {\r\n            if (e.product_id == id) {\r\n                exs = true\r\n            }\r\n        })\r\n        return exs\r\n    }\r\n\r\n    const obtenerBodega = (id) => {\r\n        let nombre = \"\"\r\n        bodegaData.map((e) => {\r\n            if (e.id == id) {\r\n                nombre = e.name\r\n            }\r\n        })\r\n        return nombre\r\n    }\r\n\r\n    const quitarInventario = (row) => {\r\n\r\n        let t = [];\r\n        inventario.slice().map((e, i) => {\r\n            if (!estaIncluido(e.inventory_id, row)) {\r\n                t.push({ ...e })\r\n            }\r\n        })\r\n        setInventario(t)\r\n\r\n    }\r\n    const estaIncluido = (id, dt) => {\r\n        let res = false\r\n        dt.map((e, i) => {\r\n            if (e.inventory_id == id) {\r\n                res = true\r\n            }\r\n        })\r\n        return res\r\n    }\r\n\r\n    const cargarInventario = (id) => {\r\n        if (id != '') {\r\n            setInventario([])\r\n            obtenerInventario(id, setInventario, initializer)\r\n        }\r\n\r\n    }\r\n    \r\n    const obtenerFraccionUnidades=(cantidad,fraccion)=>{\r\n        let frac = ((cantidad % 1)*fraccion).toFixed(1)*1\r\n        let unity =cantidad-(cantidad % 1)\r\n\r\n        return {unity,frac}\r\n\r\n    }\r\n    const agregar = () => {\r\n        if (producto != \"\" && cantidad != \"\" && cantidad > 0 && cantidad > 0) {\r\n            let t = productos.slice()\r\n            let subT = subTotalV\r\n            let subTSinIva = subTotalVI\r\n            let outStock = false\r\n            if (!existeEnDetalle(productoC.id)) {\r\n\r\n                if ((productoC.stock - cantidad) >= 0) {\r\n                   \r\n                    let frac = ((cantidad % 1)*productoC.fraction).toFixed(1)*1\r\n                   \r\n                    let unity =cantidad-(cantidad % 1)\r\n               \r\n                    t.push({image:productoC.image, description:productoC.description,unity:unity, warehouse: productoC.warehouse, has_iva: productoC.has_iva, product: productoC.name, bar_code: productoC.bar_code, stock: (productoC.stock - cantidad), product_id: productoC.id, quantity: cantidad, fraction: frac, price: productoC.sale_price, subtotal: (cantidad * productoC.sale_price) })\r\n                    subT = subT + (cantidad * productoC.sale_price)\r\n                    subTSinIva = subTSinIva + (productoC.has_iva == 0 ? (cantidad * productoC.sale_price) : 0)\r\n\r\n                } else {\r\n                    outStock = true\r\n                }\r\n            }\r\n\r\n            /* producto.map((e) => {\r\n                if(!existeEnDetalle(e.id)){\r\n                    if((e.stock-cantidad)>=0){\r\n                        t.push({ product: e.name, bar_code: e.bar_code, stock: (e.stock-cantidad), product_id: e.id, quantity: cantidad, price: e.sale_price, subtotal: (cantidad * e.sale_price) })\r\n                        subT = subT + (cantidad * e.sale_price)\r\n                    }else{\r\n                        outStock=true\r\n                    }\r\n                  \r\n                }\r\n           \r\n\r\n            }) */\r\n            setSubTotalV(subT)\r\n\r\n            setSubTotalVI(subTSinIva)\r\n            setProductos(t)\r\n\r\n            setCantidad('')\r\n            setFraction('')\r\n\r\n            setProducto(\"\")\r\n            setProductoC(null)\r\n            if (outStock) {\r\n                initializer.mostrarNotificacion({ type: \"warning\", message: 'No hay suficiente stock' });\r\n            } else {\r\n                if (t.length == 0) {\r\n                    initializer.mostrarNotificacion({ type: \"warning\", message: 'Producto ya agregado' });\r\n                }\r\n            }\r\n\r\n        } else {\r\n            initializer.mostrarNotificacion({ type: \"warning\", message: 'No deje campos vacíos' });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const getName3 = (id) => {\r\n        let object = null\r\n        clientData.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n    const cambiarFraccionamiento = (obj, modi, val) => {\r\n        console.log(obj)\r\n        if (obj == null) {\r\n            return 0\r\n        }\r\n        if (modi == 'cantidad') {\r\n            if (val > obj.stock) {\r\n                return 0\r\n            } else {\r\n                let fr = obj.fraction\r\n                let t = fr * val\r\n                return t\r\n            }\r\n\r\n        } else if (modi == \"fraccion\") {\r\n            console.log(\"valor cambiar\" + val)\r\n            let temp = obj.stock * obj.fraction\r\n            console.log(\"valor maximo\" + temp)\r\n            if (val > temp) {\r\n                return 0\r\n            } else {\r\n                let decT = (val * 1) / obj.fraction\r\n\r\n\r\n\r\n                return decT\r\n            }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Dialog\r\n            fullWidth\r\n            maxWidth='lg'\r\n            fullScreen\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n                limpiar()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n              <VerFoto ancho={true} body={<img\r\n                style={{ height: '100%', width: '100%' }}\r\n                src={PUBLIC_PATH+\"storage/\" + imageSelected}\r\n            />} open={foto} setOpen={setFoto} accion={() => {\r\n                setImageSelected(null)\r\n                setFoto(false)\r\n            }} titulo='Foto del producto' />\r\n\r\n  <Cambio sistema={(subTotalV + ((subTotalV - subTotalVI) * 0.12)).toFixed(2)} setSelected={() => null} setOpen={setCambioCliente} open={cambioCliente} carga={() => null\r\n\r\n           } />\r\n          <Confirmar open={confirmarMensaje} setOpen={setConfirmarMensaje} accion={guardar} titulo='¿Desea continuar? Se creará la factura' customAction={  <Button         startIcon={<MonetizationOnIcon />} color=\"primary\" onClick={()=>{\r\n              setCambioCliente(true)\r\n              setConfirmarMensaje(false)\r\n          }}>\r\n                    Cambio\r\n                </Button>}/>\r\n\r\n            <CrearCliente sistema={null} setSelected={() => null} setOpen={setCrearCliente} open={crearCliente} carga={() => {\r\n                obtenerClientes(setClientData, initializer)\r\n\r\n            }} />\r\n\r\n            <DialogTitle id=\"alert-dialog-slide-title\" >\r\n\r\n                <span>Factura</span>\r\n\r\n            </DialogTitle>\r\n            <DialogContent >\r\n                <DialogContentText id=\"alert-dialog-slide-description\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    Seleccione el cliente y productos a facturar\r\n                    <div style={{ display: 'flex' }}>\r\n\r\n                        <Tooltip title=\"Crear cliente\">\r\n                            <IconButton aria-label=\"add_proveedor\" onClick={() => setCrearCliente(true)}>\r\n                                <PersonAddOutlined />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title={!finalConsumer ? \"Consumidor final\" : \"Cliente\"}>\r\n                            <IconButton aria-label=\"cambiar\" onClick={() => setFinalConsumer(!finalConsumer)}>\r\n                                {finalConsumer ? <AccountBoxIcon /> : <SupervisedUserCircleIcon />}\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                    </div>\r\n\r\n\r\n                </DialogContentText>\r\n                <Grid container spacing={2}>\r\n\r\n                    {!finalConsumer && (\r\n                        <Grid item xs={12} md={6} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                            <Autocomplete\r\n\r\n                                style={{ width: '100%' }}\r\n                                size=\"small\"\r\n                                options={clientData}\r\n\r\n                                value={getName3(client)}\r\n                                onChange={(event, newValue) => {\r\n                                    if (newValue != null) {\r\n\r\n                                        setClient(newValue.id);\r\n\r\n                                    } else {\r\n\r\n                                        setClient('')\r\n\r\n                                    }\r\n\r\n                                }}\r\n                                getOptionLabel={(option) => option.document + \" - \" + option.names}\r\n                                // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField variant=\"outlined\" {...params} label=\"Seleccione un cliente\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n\r\n                        </Grid>\r\n                    )\r\n                    }\r\n\r\n\r\n\r\n                    <Grid item xs={12} md={finalConsumer ? 12 : 6} style={{ display: 'flex' }}>\r\n                        <Autocomplete\r\n\r\n                            style={{ width: '100%' }}\r\n                            size=\"small\"\r\n                            options={productosData}\r\n                            value={getName(producto, productosData)}\r\n\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n\r\n                                    setProducto(newValue.id);\r\n                                    setProductoC(newValue)\r\n                                    setCantidad(1)\r\n                                    setFraction(newValue.fraction)\r\n                                } else {\r\n                                    setProductoC(null)\r\n                                    setProducto('')\r\n\r\n                                }\r\n                            }}\r\n                            getOptionLabel={(option) => option.bar_code + \" - \" + option.name + \"- Unidad: \" + obtenerFraccionUnidades(option.stock,option.fraction).unity + (option.fraction != 0 ? \" - fraccion: \" + obtenerFraccionUnidades(option.stock,option.fraction).frac : \"\")}\r\n                            // prints the selected value\r\n                            renderInput={params => (\r\n                                <TextField variant=\"outlined\" {...params} label=\"Seleccione un producto\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={productoC != null ? (productoC.fraction != 0 ? 6 : 12) : 12} >    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width: '100%' }}\r\n                        type=\"number\"\r\n                        size=\"small\"\r\n                        label=\"Unidad\"\r\n\r\n                        value={cantidad}\r\n                        onChange={(e) => {\r\n                            setCantidad(e.target.value)\r\n                            if (productoC != null) {\r\n                                if (productoC.fraction != 0) {\r\n                                    setFraction(cambiarFraccionamiento(productoC, 'cantidad', e.target.value))\r\n\r\n                                }\r\n                            }\r\n\r\n                        }}\r\n\r\n                    /></Grid>\r\n                    {\r\n                        productoC != null ?\r\n                            productoC.fraction != 0 ?\r\n                                <Grid item xs={12} md={finalConsumer ? 6 : 6} >    <TextField\r\n                                    variant=\"outlined\"\r\n                                    style={{ width: '100%' }}\r\n\r\n                                    size=\"small\"\r\n                                    label=\"Fracciones\"\r\n\r\n                                    value={fraction}\r\n                                    onChange={(e) => {\r\n                                        const re = /^[0-9\\b]+$/;\r\n\r\n                                        if (e.target.value === \"\" || re.test(e.target.value)) {\r\n                                            setFraction(e.target.value)\r\n                                            setCantidad(cambiarFraccionamiento(productoC, 'fraccion', e.target.value).toFixed(3) * 1)\r\n\r\n                                        }\r\n                                    }}\r\n\r\n                                /></Grid>\r\n                                : null : null\r\n                    }\r\n\r\n                    {\r\n                        ((cantidad == 0 && fraction != 0) || (fraction == 0 && cantidad != 0)) && (productoC != null ? (productoC.fraction != 0 ? true : false) : false) ?\r\n                            <Grid item xs={12} md={12}>\r\n\r\n                                <Alert severity=\"info\">No hay stock suficiente</Alert>\r\n                            </Grid>\r\n                            : null\r\n                    }\r\n\r\n\r\n\r\n                    <Grid item xs={12} md={12}>\r\n\r\n                        <MaterialTable\r\n                            key={1}\r\n                            id={1}\r\n                            icons={TableIcons}\r\n                            columns={[\r\n                                {\r\n                                    title: 'Imágen',\r\n                                    field: 'avatar',\r\n                                    editable: 'never',\r\n                                    render: rowData => (\r\n                                        <img\r\n                                            onClick={() =>{\r\n                                                setFoto(true)\r\n                                                setImageSelected(rowData.image)\r\n                                            }}\r\n                                            style={{ height: 36, width: 36, borderRadius: 36 ,cursor: 'pointer' }}\r\n                                            src={PUBLIC_PATH+\"storage/\" + rowData.image}\r\n                                        />\r\n                                    ),\r\n                                },\r\n                                {\r\n                                    title: 'Laboratorio',\r\n                                    field: 'warehouse',\r\n                                    render: rowData => (\r\n                                        <span >{rowData.warehouse}</span>\r\n                                    ),\r\n                                    editable: 'never'\r\n                                },\r\n                                {\r\n                                    title: 'Producto',\r\n                                    field: 'product',\r\n                                    render: rowData => (\r\n                                        <span >{rowData.product}</span>\r\n                                    ), editable: 'never'\r\n                                },\r\n                                {\r\n                                    title: 'Descripcion',\r\n                                    field: 'description',\r\n                                    render: rowData => (\r\n                                        <span >{rowData.description}</span>\r\n                                    ), editable: 'never'\r\n                                },\r\n                                { title: \"Descuento\", field: \"discount\", type: \"currency\" },\r\n                                { title: \"Unidades\", field: \"unity\", editable: 'never' },\r\n                                { title: \"Fracciones\", field: \"fraction\", editable: 'never' },\r\n\r\n                                { title: \"Precio\", field: \"price\", type: \"currency\" },\r\n\r\n\r\n                                { title: \"SubTotal\", field: \"subtotal\", type: \"currency\", editable: 'never' },\r\n\r\n\r\n\r\n\r\n                            ]}\r\n                            cellEditable={{\r\n                                onCellEditApproved: (newValue, oldValue, rowData, columnDef) => {\r\n                                    return new Promise((resolve, reject) => {\r\n                                        setTimeout(() => {\r\n                                            if (newValue !== \"\") {\r\n                                                if (newValue >= 0) {\r\n                                                    const dataUpdate = [...productos];\r\n\r\n                                                    const index = rowData.tableData.id;\r\n                                                    dataUpdate[index][columnDef.field] = newValue;\r\n                                                    //RECALCULAR SUBTOTAL\r\n                                                    let nuevoSub = (dataUpdate[index].quantity * dataUpdate[index].price).toFixed(2)\r\n                                                    //RESTAR DESCUENTO\r\n                                                    nuevoSub = dataUpdate[index].hasOwnProperty('discount')?(nuevoSub - dataUpdate[index].discount):nuevoSub\r\n                                                    let disc=0;\r\n                                                    if(columnDef.field==\"discount\"){\r\n                                                        if(dataUpdate[index].hasOwnProperty('discount')){\r\n                                                           let m =  dataUpdate[index].discount-(oldValue!=undefined?oldValue:0)\r\n                                                           console.log(dataUpdate[index].discount)\r\n                                                           console.log(oldValue)\r\n                                                            disc =  discount+(m)\r\n                                                        }\r\n                                                      \r\n\r\n                                                    }\r\n\r\n                                                    //CALCULAR EL SUBTOTAL\r\n                                                    let tSub = parseFloat((subTotalV - dataUpdate[index].subtotal)) + parseFloat(nuevoSub);\r\n                                                    //CALCULAR EL SUBTOTAL SI ES IVA ==0\r\n                                                    let tSubSinIva =  dataUpdate[index].has_iva == 0 ? tSub : 0\r\n                                                    dataUpdate[index].subtotal = nuevoSub\r\n\r\n                                                    setSubTotalV(tSub)\r\n                                                    setSubTotalVI(tSubSinIva)\r\n                                                    setDiscount(disc)\r\n                                                    setProductos([...dataUpdate]);\r\n\r\n                                                }\r\n                                            }\r\n                                            resolve();\r\n                                        }, 1000)\r\n                                    });\r\n                                }\r\n                            }}\r\n\r\n                            data={\r\n                                productos\r\n                            }\r\n                            title=\"Productos\"\r\n\r\n                            localization={LocalizationTable}\r\n                            actions={[{\r\n                                icon: TableIcons.Add,\r\n                                tooltip: 'Agregar',\r\n                                isFreeAction: true,\r\n                                onClick: (event, rowData) => {\r\n                                    agregar()\r\n                                }\r\n                            },\r\n                            {\r\n                                icon: TableIcons.MonetizationOnIcon,\r\n                                tooltip: 'Cambio',\r\n                                isFreeAction: true,\r\n                                onClick: (event, rowData) => {\r\n                                  setCambioCliente(true)\r\n                                }\r\n                            },\r\n                            {\r\n                                icon: TableIcons.Delete,\r\n                                tooltip: 'Eliminar',\r\n\r\n                                onClick: (event, rowData) => {\r\n                                    quitar(rowData)\r\n                                }\r\n                            }]}\r\n                            components={{\r\n                                Container: props => <Paper {...props} elevation={0} />\r\n                            }}\r\n\r\n                            options={{\r\n                                pageSize: 10,\r\n                                paging: false,\r\n                                search: false,\r\n\r\n                                actionsColumnIndex: -1,\r\n                                width: '100%',\r\n                                maxBodyHeight: 200,\r\n\r\n                                padding: 'dense',\r\n                                headerStyle: {\r\n                                    textAlign: 'left'\r\n                                },\r\n                                cellStyle: {\r\n                                    textAlign: 'left'\r\n                                },\r\n                                searchFieldStyle: {\r\n\r\n                                    padding: 5\r\n                                }\r\n                            }}\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={12} style={{ display: 'flex', justifyContent: 'flex-end' }} >\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n\r\n                            size=\"small\"\r\n                            label=\"SubTotal\"\r\n                            value={subTotalV.toFixed(2)}\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                            }}\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={12} style={{ display: 'flex', justifyContent: 'flex-end' }} >\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n\r\n                            size=\"small\"\r\n                            label=\"Descuento\"\r\n                            value={discount.toFixed(2)}\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                            }}\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={12} style={{ display: 'flex', justifyContent: 'flex-end' }} >\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n\r\n                            size=\"small\"\r\n                            label=\"Iva\"\r\n                            value={((subTotalV - subTotalVI) * 0.12).toFixed(2)}\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                            }}\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={12} style={{ display: 'flex', justifyContent: 'flex-end' }} >\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n\r\n                            size=\"small\"\r\n                            label=\"Total\"\r\n                            value={(subTotalV + ((subTotalV - subTotalVI) * 0.12)).toFixed(2)}\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                            }}\r\n                        />\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                    limpiar()\r\n                }} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" disabled={productos.length == 0} onClick={() => {\r\n                    setConfirmarMensaje(true)\r\n                }}>\r\n                    Guardar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { eliminar as eliminarBodega, registrarSistema } from '../../../../utils/API/bodegas';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const guardar=()=>{\r\n        eliminarBodega(props.sistema.id,initializer)\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => props.setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    ¿Está seguro que desea eliminar el registro?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid, InputAdornment } from '@material-ui/core';\r\nimport {registrar } from '../../../../utils/API/cajas';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const [amount,setAmount] = React.useState(0);\r\n    const guardar = () => {\r\n        registrar({start_amount:amount}, initializer,props.carga)\r\n        props.setOpen(false)\r\n        //props.carga()\r\n        setAmount(\"\")\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => props.setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Caja</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    Coloque el valor con el que abrirá la caja\r\n                </DialogContentText>\r\n              <TextField\r\n                    variant=\"outlined\"\r\n                    style={{ width: '100%' }}\r\n                    type=\"number\"\r\n                    label=\"Monto inicial\"\r\n\r\n                    value={amount}\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                    }}\r\n                    onChange={(e) => {\r\n                        const re = /^[0-9\\b]+$/;\r\n\r\n                            setAmount(e.target.value)\r\n\r\n                    }}\r\n\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Abrir\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editarSistema, registrarSistema } from '../../../../utils/API/sistemas';\r\nimport { obtenerTodos as obtenerUnidades } from '../../../../utils/API/unidades';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [unity, setUnity] = React.useState(\"\")\r\n    const [unityData, setUnityData] = React.useState([])\r\n\r\n    const getName=()=>{\r\n\r\n    }\r\n \r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Filtrar productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                Puede seleccionar filtros anidados\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={1}>\r\n               \r\n                   \r\n                     <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una bodega\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                    \r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una categoría\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una medida\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => props.setOpen(false)}>\r\n                    Confirmar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Initializer from '../../../store/Initializer'\r\nimport Confirmar from '../../../components/Confirmar'\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\nimport { LocalizationTable, TableIcons, removeAccent } from '../../../utils/table.js'\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { obtenerTodos, anularFactura } from '../../../utils/API/facturas';\r\nimport Crear from './componentes/Crear'\r\nimport Eliminar from './componentes/Eliminar'\r\nimport AbrirCaja from './componentes/AbrirCaja'\r\n\r\nimport Filtro from './componentes/Filtro'\r\nimport { Alert } from '@material-ui/lab';\r\nimport { estaAbiertaCaja } from '../../../utils/API/cajas';\r\n\r\nexport default function Sistemas(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [data, setData] = React.useState([])\r\n    const [open, setOpen] = React.useState(false)\r\n    const [openCaja, setOpenCaja] = React.useState(false)\r\n\r\n    const [open2, setOpen2] = React.useState(false)\r\n    const [selected, setSelected] = React.useState(null)\r\n    const [selected2, setSelected2] = React.useState(null)\r\n    const [openFilter, setOpenFilter] = React.useState(false)\r\n    const [confirmarMensaje, setConfirmarMensaje] = React.useState(false)\r\n\r\n    const [cajaAbierta, setCajaAbierta] = React.useState(null)\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerTodos(setData, initializer)\r\n            estaAbiertaCaja(setCajaAbierta, initializer,true)\r\n        }\r\n    }, [initializer.usuario])\r\n    const carga = () => {\r\n        obtenerTodos(setData, initializer)\r\n        setSelected(null)\r\n        setSelected2(null)\r\n    }\r\n    const anular = () => {\r\n        anularFactura(selected2.id, initializer, carga)\r\n\r\n    }\r\n   const consultarCaja=()=>{\r\n    estaAbiertaCaja(setCajaAbierta, initializer)\r\n\r\n   }\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Crear sistema={selected} setSelected={setSelected} setOpen={setOpen} open={open} carga={carga} />\r\n            <Eliminar sistema={selected2} setOpen={setOpen2} open={open2} carga={carga} />\r\n            <AbrirCaja  setOpen={setOpenCaja} open={openCaja} carga={consultarCaja} />\r\n\r\n            <Filtro setOpen={setOpenFilter} open={openFilter} />\r\n            <Confirmar open={confirmarMensaje} setOpen={setConfirmarMensaje} accion={anular} titulo='¿Desea continuar? Se anulará la factura.' />\r\n           \r\n\r\n            <Grid item xs={12} md={12} style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <Typography variant=\"h5\" >\r\n                    Facturas\r\n                </Typography>\r\n                {\r\n                     cajaAbierta==0 ?\r\n                     <Button  onClick={() =>  setOpenCaja(true)} startIcon={<OpenInBrowserIcon />} variant=\"outlined\" color=\"primary\">\r\n                        Abrir Caja\r\n                    </Button>\r\n                    \r\n                        :\r\n                      null\r\n                }\r\n                {\r\n                    cajaAbierta==1 ?\r\n                    <Button onClick={() => setOpen(true)} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\">\r\n                    Nuevo\r\n                </Button>\r\n                    :null\r\n                }\r\n            </Grid>\r\n            {\r\n                cajaAbierta==0?\r\n                    <Grid item xs={12} md={12}>\r\n                        <Alert severity=\"warning\">No ha abierto la caja aún</Alert>\r\n                    </Grid> : null\r\n\r\n            }\r\n\r\n            <Grid item xs={12} md={12} style={{ display: 'flex', marginTop: 10 }}>\r\n\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5, borderRadius: 12, borderColor: 'rgba(0, 0, 0, 0.12)', borderWidth: 1, borderStyle: 'solid' }} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Totales\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                {data.length}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(94, 53, 177)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n\r\n                        { title: \"Factura #\", field: \"id\" },\r\n                        {\r\n                            title: \"Estado\", field: \"status\",\r\n                            render: rowData => (\r\n                                <span >{rowData.status == 'A' ? 'Emitida' : 'Anulada'}</span>\r\n                            )\r\n                        },\r\n                        {\r\n                            title: \"Documento\", field: \"document\",\r\n                            render: rowData => (\r\n                                <span >{rowData.final_consumer == 1 ? '-' : rowData.document}</span>\r\n                            )\r\n                        },\r\n                        {\r\n                            title: \"Cliente\", field: \"names\",\r\n                            render: rowData => (\r\n                                <span >{rowData.final_consumer == 1 ? 'Consumidor Final' : rowData.names}</span>\r\n                            )\r\n                        },\r\n\r\n\r\n                        { title: \"IVA\", field: \"iva\" },\r\n                        {\r\n                            title: \"Total\", field: \"total\",\r\n                            render: rowData => (\r\n                                <span >${rowData.total}</span>\r\n                            )\r\n                        },\r\n\r\n                        { title: \"Registro\", field: \"created_at\", type: \"datetime\" },\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        data\r\n                    }\r\n\r\n                    localization={LocalizationTable}\r\n                    actions={[\r\n                        {\r\n                            icon: TableIcons.Delete,\r\n                            tooltip: 'Anular',\r\n\r\n                            onClick: (event, rowData) => {\r\n                                if (rowData.status != 'C') {\r\n                                    if(cajaAbierta!='C'){\r\n                                        setConfirmarMensaje(true)\r\n                                        setSelected2(rowData)\r\n                                    }else{\r\n                                        initializer.mostrarNotificacion({ type: \"warning\", message: 'La caja ya esta cerrada' });\r\n\r\n                                    }\r\n                                 \r\n                                } else {\r\n                                    initializer.mostrarNotificacion({ type: \"warning\", message: 'La factura ya está anulada' });\r\n\r\n                                }\r\n\r\n                            }\r\n                        },\r\n\r\n                    ]}\r\n\r\n                    options={{\r\n                        pageSize: 10,\r\n                        showTitle: false,\r\n                        actionsColumnIndex: -1,\r\n\r\n                        maxBodyHeight: 350,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { eliminar as eliminarBodega, registrarSistema } from '../../../../utils/API/clientes';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const guardar=()=>{\r\n        eliminarBodega(props.sistema.id,initializer,props.carga)\r\n        props.setOpen(false)\r\n       \r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => props.setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    ¿Está seguro que desea eliminar el registro?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editarSistema, registrarSistema } from '../../../../utils/API/sistemas';\r\nimport { obtenerTodos as obtenerUnidades } from '../../../../utils/API/unidades';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [unity, setUnity] = React.useState(\"\")\r\n    const [unityData, setUnityData] = React.useState([])\r\n\r\n    const getName=()=>{\r\n\r\n    }\r\n \r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Filtrar productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                Puede seleccionar filtros anidados\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={1}>\r\n               \r\n                   \r\n                     <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una bodega\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                    \r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una categoría\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una medida\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => props.setOpen(false)}>\r\n                    Confirmar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Initializer from '../../../store/Initializer'\r\n\r\nimport { LocalizationTable, TableIcons, removeAccent } from '../../../utils/table.js'\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { obtenerTodos } from '../../../utils/API/clientes.js';\r\nimport Crear from './componentes/Crear'\r\nimport Eliminar from './componentes/Eliminar'\r\nimport Filtro from './componentes/Filtro'\r\n\r\nexport default function Sistemas(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [data, setData] = React.useState([])\r\n    const [open, setOpen] = React.useState(false)\r\n    const [open2, setOpen2] = React.useState(false)\r\n    const [selected, setSelected] = React.useState(null)\r\n    const [selected2, setSelected2] = React.useState(null)\r\n    const [openFilter, setOpenFilter] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerTodos(setData, initializer)\r\n        }\r\n    }, [initializer.usuario])\r\n    const carga = () => {\r\n        obtenerTodos(setData, initializer)\r\n        setSelected(null)\r\n        setSelected2(null)\r\n    }\r\n    const total=()=>{\r\n        let tot=0\r\n        data.map((e)=>{\r\n            tot+=e.evaluaciones\r\n        })\r\n        return tot\r\n    }\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Crear sistema={selected} setSelected={setSelected} setOpen={setOpen} open={open} carga={carga} />\r\n            <Eliminar sistema={selected2} setOpen={setOpen2} open={open2} carga={carga} />\r\n            <Filtro setOpen={setOpenFilter} open={openFilter}  />\r\n\r\n            <Grid item xs={12} md={12} style={{display:'flex',justifyContent:'space-between'}}>\r\n                <Typography variant=\"h5\" >\r\n                    Clientes\r\n                </Typography>\r\n                <Button onClick={() => setOpen(true)} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\">\r\n                        Nuevo\r\n                    </Button>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={12} style={{ display: 'flex', marginTop: 10 }}>\r\n\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5,borderRadius:12,borderColor: 'rgba(0, 0, 0, 0.12)',borderWidth:1,borderStyle: 'solid'}} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Totales\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                {data.length}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(94, 53, 177)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n               \r\n            </Grid>\r\n      \r\n            <Grid item xs={12}>\r\n                <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                      \r\n                        { title: \"Documento\", field: \"document\" },\r\n                        { title: \"Nombres\", field: \"names\" },\r\n                        { title: \"Celular\", field: \"cellphone\" },\r\n                        { title: \"Teléfono\", field: \"landline\" },\r\n                        { title: \"Dirección\", field: \"address\" },\r\n                        { title: \"Correo\", field: \"email\" },\r\n\r\n                        { title: \"Registro\", field: \"created_at\", type: \"datetime\" },\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        data\r\n                    }\r\n\r\n                    localization={LocalizationTable}\r\n\r\n                    actions={[\r\n                        {\r\n                            icon: TableIcons.Edit,\r\n                            tooltip: 'Editar',\r\n\r\n                            onClick: (event, rowData) => {\r\n                                setSelected(rowData)\r\n                                setOpen(true)\r\n                            }\r\n                        },\r\n                       \r\n\r\n                        {\r\n                            icon: TableIcons.Delete,\r\n                            tooltip: \"Borrar\",\r\n\r\n                            onClick: (event, rowData) => {\r\n                                setSelected2(rowData)\r\n                                setOpen2(true)\r\n                            }\r\n                        },\r\n                        {\r\n                            icon: TableIcons.Filter,\r\n                            tooltip: 'Filtrar',\r\n                            isFreeAction: true,\r\n                            onClick: (event) => setOpenFilter(true)\r\n                          }\r\n\r\n                    ]}\r\n\r\n                    options={{\r\n                        pageSize:10,\r\n                        showTitle: false,\r\n                        actionsColumnIndex: -1,\r\n                      \r\n                        maxBodyHeight: 350,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, FormControl, Grid, IconButton, InputAdornment, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { editar as editarBodega, registrar as registrarBodega } from '../../../../utils/API/usuarios';\r\nimport { obtenerTodos as obtenerZonas } from '../../../../utils/API/zones';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { obtenerRolUsuario, obtenerTodos } from '../../../../utils/API/roles';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [nombre, setNombre] = React.useState(\"\")\r\n    const [documento, setDocumento] = React.useState(\"\")\r\n    const [direccion, setDireccion] = React.useState(\"\")\r\n    const [celular, setCelular] = React.useState(\"\")\r\n    const [correo, setCorreo] = React.useState(\"\")\r\n    const [telefono, setTelefono] = React.useState(\"\")\r\n    const [jpcode, setJpcode] = React.useState(\"\")\r\n    const [supplierCode, setSupplirCode] = React.useState(\"\")\r\n    const [serie, setSerie] = React.useState(\"\")\r\n    const [zone, setZone] = React.useState(\"\")\r\n    const [zoneData, setZoneData] = React.useState([])\r\n    const [image, setImage] = React.useState(\"\")\r\n\r\n    const [stock, setStock] = React.useState(\"\")\r\n    const [clave, setClave] = React.useState(\"\")\r\n    const [apellidos, setApellidos] = React.useState(\"\")\r\n    const [roles, setRoles] = React.useState([])\r\n    const [rol, setRol] = React.useState(\"\")\r\n\r\n    const [descripcion, setDescripcion] = React.useState(\"\")\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n\r\n        obtenerZonas(setZoneData,initializer)\r\n        \r\n        obtenerTodos(setRoles, initializer)\r\n        }\r\n  \r\n}, [initializer.usuario])\r\n    React.useEffect(()=>{\r\n        if(props.sistema!=null){\r\n            setNombre(props.sistema.names)\r\n            setApellidos(props.sistema.last_names)\r\n            setDocumento(props.sistema.dni)\r\n  \r\n            setCorreo(props.sistema.email)\r\n            obtenerRolUsuario(props.sistema.id,setRol,initializer)\r\n     \r\n\r\n        }\r\n    },[props.sistema])\r\n    const guardar=()=>{\r\n        let data={ \r\n        'names': nombre,\r\n        'last_names':apellidos,\r\n        'dni': documento,\r\n        'email': correo,\r\n        'password':clave,\r\n        'rol':rol\r\n   }\r\n        if(props.sistema==null){\r\n            registrarBodega(data,initializer,limpiar)\r\n            \r\n        }else{\r\n            editarBodega(props.sistema.id,data,initializer,limpiar)\r\n\r\n        }\r\n        props.setOpen(false)\r\n      \r\n    }\r\n    const limpiar=()=>{\r\n        setNombre(\"\")\r\n        setDocumento(\"\")\r\n        setClave(\"\")\r\n        setDireccion(\"\")\r\n        setApellidos(\"\")\r\n        setRol(\"\")\r\n        setCelular(\"\")\r\n        setCorreo(\"\")\r\n        setTelefono(\"\")\r\n        props.setSelected(null)\r\n        props.carga()\r\n    }\r\n    const getName = (id) => {\r\n        let object = null\r\n        zoneData.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n                limpiar()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Personal</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                   {props.sistema!=null?\"Formulario de edición de usuarios\": \"Formulario de creación de usuarios\"}\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={2}>\r\n            \r\n    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                      \r\n                        label=\"Cédula/RUC\"\r\n                        value={documento}\r\n                        onChange={(e) => setDocumento(e.target.value)}\r\n\r\n                    /></Grid>\r\n                  \r\n                    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                      \r\n                        label=\"Nombres \"\r\n                        value={nombre}\r\n                        onChange={(e) => setNombre(e.target.value)}\r\n\r\n                    /></Grid>\r\n                    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                      \r\n                        label=\"Apellidos \"\r\n                        value={apellidos}\r\n                        onChange={(e) => setApellidos(e.target.value)}\r\n\r\n                    /></Grid>\r\n                   <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                      \r\n                        label=\"Correo\"\r\n                        value={correo}\r\n                        onChange={(e) => setCorreo(e.target.value)}\r\n\r\n                    /></Grid>\r\n    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                        type=\"password\"\r\n                        label=\"Clave\"\r\n                        value={clave}\r\n                        onChange={(e) => setClave(e.target.value)}\r\n\r\n                    /></Grid>\r\n                    <Grid item xs={12}> \r\n                    <FormControl style={{width:'100%'}} variant=\"outlined\" >\r\n        <InputLabel id=\"demo-simple-select-filled-label\">Rol</InputLabel>\r\n        <Select\r\n        \r\n          labelId=\"demo-simple-select-filled-label\"\r\n          id=\"demo-simple-select-filled\"\r\n          value={rol}\r\n          onChange={(e)=>setRol(e.target.value)}\r\n          label=\"Rol\"\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>Seleccione una opción</em>\r\n          </MenuItem>\r\n            {\r\n                roles.map((e)=>(\r\n                        <MenuItem value={e.name}>{e.name}</MenuItem>\r\n                ))\r\n            }\r\n        </Select>\r\n      </FormControl>\r\n      \r\n      </Grid>\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                 limpiar()\r\n                 props.setOpen(false)\r\n                }} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Guardar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { eliminar as eliminarBodega, registrarSistema } from '../../../../utils/API/usuarios';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const guardar=()=>{\r\n        eliminarBodega(props.sistema.id,initializer,props.carga)\r\n        props.setOpen(false)\r\n      \r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => props.setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    ¿Está seguro que desea eliminar el registro?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editarSistema, registrarSistema } from '../../../../utils/API/sistemas';\r\nimport { obtenerTodos as obtenerUnidades } from '../../../../utils/API/unidades';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [unity, setUnity] = React.useState(\"\")\r\n    const [unityData, setUnityData] = React.useState([])\r\n\r\n    const getName=()=>{\r\n\r\n    }\r\n \r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Filtrar productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                Puede seleccionar filtros anidados\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={1}>\r\n               \r\n                   \r\n                     <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una bodega\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                    \r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una categoría\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una medida\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => props.setOpen(false)}>\r\n                    Confirmar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Initializer from '../../../store/Initializer'\r\n\r\nimport { LocalizationTable, TableIcons, removeAccent } from '../../../utils/table.js'\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { obtenerTodos } from '../../../utils/API/usuarios.js';\r\nimport Crear from './componentes/Crear'\r\nimport Eliminar from './componentes/Eliminar'\r\nimport Filtro from './componentes/Filtro'\r\n\r\nexport default function Sistemas(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [data, setData] = React.useState([])\r\n    const [open, setOpen] = React.useState(false)\r\n    const [open2, setOpen2] = React.useState(false)\r\n    const [selected, setSelected] = React.useState(null)\r\n    const [selected2, setSelected2] = React.useState(null)\r\n    const [openFilter, setOpenFilter] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerTodos(setData, initializer)\r\n        }\r\n    }, [initializer.usuario])\r\n    const carga = () => {\r\n        obtenerTodos(setData, initializer)\r\n        setSelected(null)\r\n        setSelected2(null)\r\n    }\r\n    const total=()=>{\r\n        let tot=0\r\n        data.map((e)=>{\r\n            tot+=e.evaluaciones\r\n        })\r\n        return tot\r\n    }\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Crear sistema={selected} setSelected={setSelected} setOpen={setOpen} open={open} carga={carga} />\r\n            <Eliminar sistema={selected2} setOpen={setOpen2} open={open2} carga={carga} />\r\n            <Filtro setOpen={setOpenFilter} open={openFilter}  />\r\n\r\n            <Grid item xs={12} md={12} style={{display:'flex',justifyContent:'space-between'}}>\r\n                <Typography variant=\"h5\" >\r\n                    Personal\r\n                </Typography>\r\n                <Button onClick={() => setOpen(true)} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\">\r\n                        Nuevo\r\n                    </Button>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={12} style={{ display: 'flex', marginTop: 10 }}>\r\n\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5,borderRadius:12,borderColor: 'rgba(0, 0, 0, 0.12)',borderWidth:1,borderStyle: 'solid'}} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Totales\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                {data.length}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(94, 53, 177)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n               \r\n            </Grid>\r\n      \r\n            <Grid item xs={12}>\r\n                <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                      \r\n                        { title: \"Documento\", field: \"dni\" },\r\n                        { title: \"Nombres\", field: \"names\" },\r\n                        { title: \"Apellidos\", field: \"last_names\" },\r\n                        { title: \"Correo\", field: \"email\" },\r\n                      \r\n                        { title: \"Registro\", field: \"created_at\", type: \"datetime\" },\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        data\r\n                    }\r\n\r\n                    localization={LocalizationTable}\r\n\r\n                    actions={[\r\n                        {\r\n                            icon: TableIcons.Edit,\r\n                            tooltip: 'Editar',\r\n\r\n                            onClick: (event, rowData) => {\r\n                                setSelected(rowData)\r\n                                setOpen(true)\r\n                            }\r\n                        },\r\n                       \r\n\r\n                        {\r\n                            icon: TableIcons.Delete,\r\n                            tooltip: \"Borrar\",\r\n\r\n                            onClick: (event, rowData) => {\r\n                                setSelected2(rowData)\r\n                                setOpen2(true)\r\n                            }\r\n                        },\r\n                        {\r\n                            icon: TableIcons.Filter,\r\n                            tooltip: 'Filtrar',\r\n                            isFreeAction: true,\r\n                            onClick: (event) => setOpenFilter(true)\r\n                          }\r\n\r\n                    ]}\r\n\r\n                    options={{\r\n                        pageSize:10,\r\n                        showTitle: false,\r\n                        actionsColumnIndex: -1,\r\n                      \r\n                        maxBodyHeight: 350,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const editarUnidad= (id,data, store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"kardex/\"+id;\r\n    let setting = {\r\n      method: \"PUT\",\r\n      url: url,\r\n      params:data,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const eliminarUnidad = (id,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"kardex/\"+id;\r\n    \r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\nexport const registrarUnidad = (data,store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"kardex\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\nexport const obtenerTodos = (setData,store,setKpi1,setKpi2) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"kardex\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n        setKpi1(response.entrada)\r\n        setKpi2(response.salida)\r\n\r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerSistemaEvaluaciones = (setLabels,setValues,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"systems_evaluations\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setLabels(response.data.system)\r\n      setValues(response.data.count)\r\n\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Initializer from '../../../store/Initializer'\r\n\r\nimport { LocalizationTable, TableIcons, removeAccent } from '../../../utils/table.js'\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { obtenerTodos } from '../../../utils/API/kardex';\r\nimport Crear from './componentes/Crear'\r\nimport Eliminar from './componentes/Eliminar'\r\nimport Filtro from './componentes/Filtro'\r\n\r\nexport default function Sistemas(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [data, setData] = React.useState([])\r\n    const [kpi1, setKpi1] = React.useState(0)\r\n    const [kpi2, setKpi2] = React.useState(0)\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [open2, setOpen2] = React.useState(false)\r\n    const [selected, setSelected] = React.useState(null)\r\n    const [selected2, setSelected2] = React.useState(null)\r\n    const [openFilter, setOpenFilter] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerTodos(setData, initializer,setKpi1,setKpi2)\r\n        }\r\n    }, [initializer.usuario])\r\n    const carga = () => {\r\n        obtenerTodos(setData, initializer,setKpi1,setKpi2)\r\n        setSelected(null)\r\n        setSelected2(null)\r\n    }\r\n    const total=()=>{\r\n        let tot=0\r\n        data.map((e)=>{\r\n            tot+=e.evaluaciones\r\n        })\r\n        return tot\r\n    }\r\n    const obtenerFraccionUnidades=(cantidad,fraccion)=>{\r\n        let frac = ((cantidad % 1)*fraccion).toFixed(1)*1\r\n        let unity =cantidad-(cantidad % 1)\r\n\r\n        return {unity,frac}\r\n\r\n    }\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12} md={12} style={{display:'flex',justifyContent:'space-between'}}>\r\n                <Typography variant=\"h5\" >\r\n                    Kardex\r\n                </Typography>\r\n               \r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={12} style={{ display: 'flex', marginTop: 10 }}>\r\n\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5,borderRadius:12,borderColor: 'rgba(0, 0, 0, 0.12)',borderWidth:1,borderStyle: 'solid'}} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Totales\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                {data.length}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(94, 53, 177)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5,borderRadius:12,borderColor: 'rgba(0, 0, 0, 0.12)',borderWidth:1,borderStyle: 'solid'}} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Entrada\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                {kpi1}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(94, 53, 177)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5,borderRadius:12,borderColor: 'rgba(0, 0, 0, 0.12)',borderWidth:1,borderStyle: 'solid'}} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Salida\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                {kpi2}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(94, 53, 177)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n      \r\n            <Grid item xs={12}>\r\n                <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                      \r\n                        { title: \"Producto\", field: \"name\" },\r\n                        { title: \"Laboratorio\", field: \"warehouse\" },\r\n                        { title: \"Concepto\", field: \"concept\",render: rowData => (\r\n                            <span>{rowData.concept=='E'?'Entrada':'Salida'}</span>\r\n                        ), },\r\n                \r\n                        { title: \"Mov. Unidades\", field: \"quantity\" ,render: rowData => (\r\n                            <span>{obtenerFraccionUnidades(rowData.quantity,rowData.fraction).unity}</span>\r\n                        ), },\r\n                        { title: \"Mov. Fracciones\", field: \"quantity\" ,render: rowData => (\r\n                            <span>{obtenerFraccionUnidades(rowData.quantity,rowData.fraction).frac}</span>\r\n                        ), },\r\n                        { title: \"Saldo unidad\", field: \"stock\" ,render: rowData => (\r\n                            <span>{obtenerFraccionUnidades(rowData.stock,rowData.fraction).unity}</span>\r\n                        ), },\r\n                        { title: \"Saldo fracción\", field: \"fraction\" ,render: rowData => (\r\n                            <span>{obtenerFraccionUnidades(rowData.stock,rowData.fraction).frac}</span>\r\n                        ), },\r\n                        { title: \"Tipo\", field: \"type\" ,render: rowData => (\r\n                            <span>{rowData.type=='V'?'Venta':(rowData.type=='C'?'Compra':(rowData.type=='A'?'Ajuste':'Anulación'))}</span>\r\n                        ), },\r\n                        { title: \"Usuario\", field: \"names\" },\r\n                        { title: \"Registro\", field: \"created_at\", type: \"datetime\" },\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        data\r\n                    }\r\n\r\n                    localization={LocalizationTable}\r\n\r\n                   \r\n\r\n                    options={{\r\n                        pageSize:10,\r\n                        showTitle: false,\r\n                        actionsColumnIndex: -1,\r\n                      \r\n                        maxBodyHeight: 350,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editar as editarBodega, registrar as registrarBodega } from '../../../../utils/API/usuarios';\r\nimport { obtenerTodos as obtenerZonas } from '../../../../utils/API/zones';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [nombre, setNombre] = React.useState(\"\")\r\n    const [documento, setDocumento] = React.useState(\"\")\r\n    const [direccion, setDireccion] = React.useState(\"\")\r\n    const [celular, setCelular] = React.useState(\"\")\r\n    const [correo, setCorreo] = React.useState(\"\")\r\n    const [telefono, setTelefono] = React.useState(\"\")\r\n    const [jpcode, setJpcode] = React.useState(\"\")\r\n    const [supplierCode, setSupplirCode] = React.useState(\"\")\r\n    const [serie, setSerie] = React.useState(\"\")\r\n    const [zone, setZone] = React.useState(\"\")\r\n    const [zoneData, setZoneData] = React.useState([])\r\n    const [image, setImage] = React.useState(\"\")\r\n\r\n    const [stock, setStock] = React.useState(\"\")\r\n    const [clave, setClave] = React.useState(\"\")\r\n    const [apellidos, setApellidos] = React.useState(\"\")\r\n\r\n    const [descripcion, setDescripcion] = React.useState(\"\")\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n\r\n        obtenerZonas(setZoneData,initializer)\r\n        }\r\n  \r\n}, [initializer.usuario])\r\n    React.useEffect(()=>{\r\n        if(props.sistema!=null){\r\n            setNombre(props.sistema.names)\r\n            setApellidos(props.sistema.last_names)\r\n            setDocumento(props.sistema.dni)\r\n  \r\n            setCorreo(props.sistema.email)\r\n     \r\n\r\n        }\r\n    },[props.sistema])\r\n    const guardar=()=>{\r\n        let data={ \r\n        'names': nombre,\r\n        'last_names':apellidos,\r\n        'dni': documento,\r\n        'email': correo,\r\n        'password':clave\r\n   }\r\n        if(props.sistema==null){\r\n            registrarBodega(data,initializer)\r\n            limpiar()\r\n        }else{\r\n            editarBodega(props.sistema.id,data,initializer)\r\n            limpiar()\r\n\r\n        }\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n    const limpiar=()=>{\r\n        setNombre(\"\")\r\n        setDocumento(\"\")\r\n        setClave(\"\")\r\n        setDireccion(\"\")\r\n        setApellidos(\"\")\r\n        setCelular(\"\")\r\n        setCorreo(\"\")\r\n        setTelefono(\"\")\r\n        props.setSelected(null)\r\n        props.carga()\r\n    }\r\n    const getName = (id) => {\r\n        let object = null\r\n        zoneData.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n                limpiar()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Personal</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                   {props.sistema!=null?\"Formulario de edición de usuarios\": \"Formulario de creación de usuarios\"}\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={2}>\r\n            \r\n    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                      \r\n                        label=\"Cédula/RUC\"\r\n                        value={documento}\r\n                        onChange={(e) => setDocumento(e.target.value)}\r\n\r\n                    /></Grid>\r\n                  \r\n                    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                      \r\n                        label=\"Nombres \"\r\n                        value={nombre}\r\n                        onChange={(e) => setNombre(e.target.value)}\r\n\r\n                    /></Grid>\r\n                    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                      \r\n                        label=\"Apellidos \"\r\n                        value={apellidos}\r\n                        onChange={(e) => setApellidos(e.target.value)}\r\n\r\n                    /></Grid>\r\n                   <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                      \r\n                        label=\"Correo\"\r\n                        value={correo}\r\n                        onChange={(e) => setCorreo(e.target.value)}\r\n\r\n                    /></Grid>\r\n    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                        type=\"password\"\r\n                        label=\"Clave\"\r\n                        value={clave}\r\n                        onChange={(e) => setClave(e.target.value)}\r\n\r\n                    /></Grid>\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                 limpiar()\r\n                 props.setOpen(false)\r\n                }} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Guardar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { eliminar as eliminarBodega, registrarSistema } from '../../../../utils/API/usuarios';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const guardar=()=>{\r\n        eliminarBodega(props.sistema.id,initializer)\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => props.setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    ¿Está seguro que desea eliminar el registro?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editarSistema, registrarSistema } from '../../../../utils/API/sistemas';\r\nimport { obtenerTodos as obtenerUnidades } from '../../../../utils/API/unidades';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [unity, setUnity] = React.useState(\"\")\r\n    const [unityData, setUnityData] = React.useState([])\r\n\r\n    const getName=()=>{\r\n\r\n    }\r\n \r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Filtrar productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                Puede seleccionar filtros anidados\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={1}>\r\n               \r\n                   \r\n                     <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una bodega\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                    \r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una categoría\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una medida\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => props.setOpen(false)}>\r\n                    Confirmar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GetAppOutlinedIcon from '@material-ui/icons/GetAppOutlined';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Initializer from '../../../store/Initializer'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { LocalizationTable, TableIcons, removeAccent } from '../../../utils/table.js'\r\nimport MaterialTable from \"material-table\";\r\nimport { FormControlLabel, Grid, IconButton, Switch } from '@material-ui/core';\r\nimport { obtenerTodos } from '../../../utils/API/usuarios.js';\r\nimport Crear from './componentes/Crear'\r\nimport Eliminar from './componentes/Eliminar'\r\nimport Filtro from './componentes/Filtro'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { utcDate } from '../../../utils/Date'\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport {\r\n    DatePicker,\r\n    KeyboardDatePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport es from 'date-fns/locale/es'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\r\nimport { downloadFiles, printTicket } from '../../../utils/API/reporte';\r\nimport { obtenerTodos as obtenerUsuarios } from '../../../utils/API/usuarios'\r\nimport { Autocomplete } from '@material-ui/lab';\r\nexport default function Sistemas(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const [tipo, setTipo] = React.useState(\"\")\r\n    const [desde, setDesde] = React.useState(null)\r\n    const [hasta, setHasta] = React.useState(null)\r\n    const [data, setData] = React.useState([])\r\n    const [open, setOpen] = React.useState(false)\r\n    const [barcode, setBarcode] = React.useState('')\r\n\r\n    const [open2, setOpen2] = React.useState(false)\r\n    const [selected, setSelected] = React.useState(null)\r\n    const [selected2, setSelected2] = React.useState(null)\r\n    const [openFilter, setOpenFilter] = React.useState(false)\r\n    const [filtro, setFiltro] = React.useState('')\r\n    const [filtros, setFiltros] = React.useState(false)\r\n    const [user, setUser] = React.useState('')\r\n    const [userData, setUserData] = React.useState([])\r\n    const [ticket, setTicket] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerTodos(setData, initializer)\r\n            obtenerUsuarios(setUserData, initializer)\r\n            setDesde(getFirst())\r\n            setHasta(getLast())\r\n        }\r\n    }, [initializer.usuario])\r\n    const getFirst = () => {\r\n        let date = new Date();\r\n        let primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\r\n\r\n        return primerDia\r\n    }\r\n    const getLast = () => {\r\n        let date = new Date();\r\n\r\n        let ultimoDia = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n        return ultimoDia\r\n    }\r\n    const carga = () => {\r\n        obtenerTodos(setData, initializer)\r\n        setSelected(null)\r\n        setSelected2(null)\r\n    }\r\n    const total = () => {\r\n        let tot = 0\r\n        data.map((e) => {\r\n            tot += e.evaluaciones\r\n        })\r\n        return tot\r\n    }\r\n    const reporte = () => {\r\n        if (ticket) {\r\n            printTicket(filtro, initializer)\r\n        } else {\r\n            let filter = []\r\n            if (filtros) {\r\n                filter = [{ tipo: \"usuario\", valor: user }, { tipo: \"numero_factura\", valor: filtro }, { tipo: \"desde\", valor: desde != null ? utcDate(desde) : \"\" }, { tipo: \"hasta\", valor: hasta != null ? utcDate(hasta) : \"\" }, { tipo: \"codigo_barras\", valor: barcode }]\r\n            }\r\n            downloadFiles(tipo, initializer, filter)\r\n        }\r\n\r\n    }\r\n\r\n    const getName = (id, data) => {\r\n        let object = null\r\n        data.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n    const limpiarCampos = () => {\r\n        setBarcode(\"\")\r\n        setUser(\"\")\r\n        setFiltro(\"\")\r\n        setDesde(getFirst())\r\n        setHasta(getLast())\r\n        setTicket(false)\r\n    }\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Crear sistema={selected} setSelected={setSelected} setOpen={setOpen} open={open} carga={carga} />\r\n            <Eliminar sistema={selected2} setOpen={setOpen2} open={open2} carga={carga} />\r\n            <Filtro setOpen={setOpenFilter} open={openFilter} />\r\n\r\n            <Grid item xs={12} md={12} style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <Typography variant=\"h5\" >\r\n                    Reporte\r\n                </Typography>\r\n\r\n            </Grid>\r\n            <Grid item xs={12} md={12}>\r\n\r\n                <Grid xs={12} md={12}>\r\n                    <Card >\r\n                        <CardContent>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} md={12} style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                    <FormControl variant=\"outlined\" style={{ width: '100%' }} >\r\n                                        <InputLabel id=\"demo-simple-select-outlined-label\" style={{ width: '100%' }} >Seleccione el reporte</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-outlined-label\"\r\n                                            id=\"demo-simple-select-outlined\"\r\n                                            value={tipo}\r\n\r\n                                            style={{ width: '100%' }}\r\n                                            onChange={(e) => {\r\n                                                setTipo(e.target.value)\r\n                                                setFiltro(\"\")\r\n                                                limpiarCampos()\r\n                                            }}\r\n                                            label=\"Seleccione el reporte\"\r\n                                        >\r\n                                            <MenuItem value=\"\">\r\n                                                <em>Seleccione una opción</em>\r\n                                            </MenuItem>\r\n                                            <MenuItem value={'facturas'}>Facturas</MenuItem>\r\n                                            <MenuItem value={'compras'}>Compras</MenuItem>\r\n                                            <MenuItem value={'kardex'}>Kardex</MenuItem>\r\n                                            <MenuItem value={'clientes'}>Clientes</MenuItem>\r\n                                            <MenuItem value={'productos'}>Productos</MenuItem>\r\n                                            <MenuItem value={'caja'}>Caja</MenuItem>\r\n\r\n                                 \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <IconButton aria-label=\"delete\" onClick={() => {\r\n                                        setFiltros(!filtros)\r\n                                        if ((!filtros) == false) {\r\n                                            limpiarCampos()\r\n                                        }\r\n                                    }}>\r\n                                        <FilterListIcon />\r\n\r\n                                    </IconButton>\r\n                                </Grid>\r\n\r\n                                {\r\n                                    filtros && (\r\n                                        <Grid item xs={12} md={12}>\r\n                                            <Grid container spacing={2}>\r\n\r\n                                                <Grid item xs={12} md={12}>\r\n\r\n                                                    <Typography  >\r\n                                                        Filtrar por\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n\r\n                                                {tipo == 'facturas' && (\r\n                                                    <Grid item xs={12}>    <TextField\r\n                                                        variant=\"outlined\"\r\n                                                        size=\"small\"\r\n                                                        style={{ width: '100%' }}\r\n                                                        type=\"number\"\r\n                                                        label=\"Número\"\r\n                                                        value={filtro}\r\n                                                        onChange={(e) => setFiltro(e.target.value)}\r\n\r\n                                                    /></Grid>)\r\n                                                }\r\n                                                {tipo == 'productos' || tipo == 'kardex' ? (\r\n                                                    <Grid item xs={12}>    <TextField\r\n                                                        variant=\"outlined\"\r\n                                                        size=\"small\"\r\n                                                        style={{ width: '100%' }}\r\n                                                        type=\"number\"\r\n                                                        label=\"Codigo de Barras\"\r\n                                                        value={barcode}\r\n                                                        onChange={(e) => setBarcode(e.target.value)}\r\n\r\n                                                    /></Grid>) : null\r\n                                                }\r\n                                                <Grid item md={6} xs={12}>\r\n\r\n\r\n                                                    <MuiPickersUtilsProvider style={{ width: \"100%\" }} utils={DateFnsUtils} locale={es}>\r\n                                                        <KeyboardDatePicker\r\n                                                            autoOk\r\n\r\n                                                            ampm={false}\r\n                                                            size=\"small\"\r\n                                                            inputVariant=\"outlined\"\r\n                                                            label=\"Desde\"\r\n                                                            style={{ width: \"100%\" }}\r\n                                                            // disablePast\r\n                                                            format=\"yyyy-MM-dd\"\r\n                                                            value={desde}\r\n\r\n                                                            onChange={date => setDesde(date)}\r\n                                                        />\r\n\r\n\r\n                                                    </MuiPickersUtilsProvider>\r\n\r\n\r\n                                                </Grid>\r\n                                                <Grid item md={6} xs={12}>\r\n\r\n\r\n                                                    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n                                                        <KeyboardDatePicker\r\n                                                            autoOk\r\n\r\n                                                            ampm={false}\r\n                                                            size=\"small\"\r\n                                                            inputVariant=\"outlined\"\r\n                                                            label=\"Hasta\"\r\n                                                            style={{ width: \"100%\" }}\r\n                                                            // disablePast\r\n                                                            format=\"yyyy-MM-dd\"\r\n                                                            value={hasta}\r\n\r\n                                                            onChange={date => setHasta(date)}\r\n                                                        />\r\n\r\n\r\n                                                    </MuiPickersUtilsProvider>\r\n\r\n\r\n                                                </Grid>\r\n                                                <Grid item xs={12} md={12}>\r\n\r\n                                                    <Autocomplete\r\n                                                        size=\"small\"\r\n                                                        style={{ width: '100%' }}\r\n                                                        options={userData}\r\n                                                        value={getName(user, userData)}\r\n                                                        getOptionLabel={(option) => option.dni + \" - \" + option.names}\r\n                                                        onChange={(event, value) => {\r\n                                                            if (value != null) {\r\n\r\n                                                                setUser(value.id)\r\n                                                            } else {\r\n\r\n                                                                setUser('')\r\n\r\n                                                            }\r\n\r\n                                                        }} // prints the selected value\r\n                                                        renderInput={params => (\r\n                                                            <TextField {...params} label=\"Seleccione un usuario\" variant=\"outlined\" fullWidth />\r\n                                                        )}\r\n                                                    />\r\n\r\n                                                </Grid>\r\n\r\n\r\n                                                {tipo == 'facturas' && (\r\n                                                    <Grid item xs={12}>\r\n                                                        <FormControlLabel\r\n                                                            control={<Switch checked={ticket}\r\n                                                                onChange={() => setTicket(!ticket)} name=\"checkedA\" />}\r\n                                                            label=\"Formato Ticket\"\r\n                                                        />\r\n\r\n\r\n                                                    </Grid>)\r\n                                                }\r\n\r\n\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                    )\r\n                                }\r\n\r\n                            </Grid>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            <Button variant=\"contained\" disabled={tipo == \"\"} startIcon={<PrintIcon />} size=\"small\" color=\"primary\" onClick={reporte}>Imprimir reporte</Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Checkbox, FormControl, Grid, IconButton, Input, InputAdornment, InputLabel, ListItemText, MenuItem, Select } from '@material-ui/core';\r\nimport { obtenerTodos as obtenerUnidades } from '../../../../utils/API/unidades';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { asignarPermiso, crearRol, editarRol, obtenerPermisos, obtenerPermisosRol } from '../../../../utils/API/roles';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [nombre, setNombre] = React.useState(\"\")\r\n    const [permisoData, setPermisoData] = React.useState([])\r\n    const [permiso, setPermiso] = React.useState(\"\")\r\n    const [permisos, setPermisos] = React.useState([]);\r\n    const [personName, setPersonName] = React.useState([]);\r\n\r\n    React.useEffect(()=>{\r\n     \r\n        if(initializer.usuario!=null){\r\n            obtenerPermisos(setPermisos,initializer);\r\n        }\r\n  \r\n\r\n    \r\n\r\n},[initializer.usuario])\r\n    React.useEffect(() => {\r\n        if (props.sistema != null) {\r\n            setNombre(props.sistema.name)\r\n            obtenerPermisosRol(props.sistema.name,setPersonName,initializer)\r\n\r\n        }\r\n    }, [props.sistema])\r\n    \r\n    const handleChange = (event) => {\r\n        setPersonName(event.target.value);\r\n      };\r\n    const asignarP = () => {\r\n   \r\n        asignarPermiso({\r\n            permisos:personName,\r\n            rol: nombre,\r\n            \r\n        }, initializer)\r\n    }\r\n    const guardar = () => {\r\n        let data = {\r\n            'nombre': nombre,\r\n        }\r\n        if (props.sistema == null) {\r\n            crearRol(data, initializer,asignarP,limpiar)\r\n            \r\n           \r\n        } else {\r\n            editarRol({\r\n                id:props.sistema.id,\r\n                rol: props.sistema.name,\r\n                name: nombre,\r\n                \r\n            },   asignarP, initializer,limpiar);\r\n         \r\n    \r\n         \r\n\r\n        }\r\n        props.setOpen(false)\r\n\r\n    }\r\n    const limpiar = () => {\r\n        setNombre('')\r\n     setPersonName([])\r\n        props.setSelected(null)\r\n        props.carga()\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n                limpiar()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Roles</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    {props.sistema != null ? \"Formulario de edición de roles\" : \"Formulario de creación de roles\"}\r\n                </DialogContentText>\r\n\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width: '100%' }}\r\n\r\n                        label=\"Nombre\"\r\n                        value={nombre}\r\n                        onChange={(e) => setNombre(e.target.value)}\r\n\r\n                    /></Grid>\r\n\r\n                    <Grid item md={12} xs={12}>\r\n                        <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                            <InputLabel id=\"demo-mutiple-checkbox-label\">Seleccione los permisos</InputLabel>\r\n                            <Select\r\n                            variant=\"outlined\"\r\n                                labelId=\"demo-mutiple-checkbox-label\"\r\n                                id=\"demo-mutiple-checkbox\"\r\n                                multiple\r\n                                value={personName}\r\n                                onChange={handleChange}\r\n                                input={<Input  />}\r\n                                renderValue={(selected) => selected.join(', ')}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {permisos.map((name) => (\r\n                                    <MenuItem key={name} value={name}>\r\n                                        <Checkbox checked={personName.indexOf(name) > -1} />\r\n                                        <ListItemText primary={name} />\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {props.setOpen(false)\r\n                limpiar()\r\n                }} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Guardar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { eliminarRole as eliminar, registrarSistema } from '../../../../utils/API/roles';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const guardar=()=>{\r\n        eliminar(props.sistema.name,initializer,props.carga)\r\n        props.setOpen(false)\r\n\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => props.setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    ¿Está seguro que desea eliminar el registro?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editarSistema, registrarSistema } from '../../../../utils/API/sistemas';\r\nimport { obtenerTodos as obtenerUnidades } from '../../../../utils/API/unidades';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [unity, setUnity] = React.useState(\"\")\r\n    const [unityData, setUnityData] = React.useState([])\r\n\r\n    const getName=()=>{\r\n\r\n    }\r\n \r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Filtrar productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                Puede seleccionar filtros anidados\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={1}>\r\n               \r\n                   \r\n                     <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una bodega\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                    \r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una categoría\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una medida\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => props.setOpen(false)}>\r\n                    Confirmar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Initializer from '../../../store/Initializer'\r\n\r\nimport { LocalizationTable, TableIcons, removeAccent } from '../../../utils/table.js'\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { obtenerTodos } from '../../../utils/API/roles';\r\nimport Crear from './componentes/Crear'\r\nimport Eliminar from './componentes/Eliminar'\r\nimport Filtro from './componentes/Filtro'\r\nimport { PUBLIC_PATH } from '../../../config/API';\r\nimport Confirmar from '../../../components/Confirmar'\r\nexport default function Sistemas(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const [imageSelected, setImageSelected] = React.useState(null)\r\n    const [confirmarMensaje, setConfirmarMensaje] = React.useState(false)\r\n\r\n    const [data, setData] = React.useState([])\r\n    const [open, setOpen] = React.useState(false)\r\n    const [open2, setOpen2] = React.useState(false)\r\n    const [selected, setSelected] = React.useState(null)\r\n    const [selected2, setSelected2] = React.useState(null)\r\n    const [openFilter, setOpenFilter] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerTodos(setData, initializer)\r\n        }\r\n    }, [initializer.usuario])\r\n    const carga = () => {\r\n        obtenerTodos(setData, initializer)\r\n        setSelected(null)\r\n        setSelected2(null)\r\n    }\r\n    const total=()=>{\r\n        let tot=0\r\n        data.map((e)=>{\r\n            tot+=e.evaluaciones\r\n        })\r\n        return tot\r\n    }\r\n    return (\r\n        <Grid container spacing={2}>\r\n              <Confirmar ancho={true} body={<img\r\n                style={{ height: '100%', width: '100%' }}\r\n                src={PUBLIC_PATH+\"storage/\" + imageSelected}\r\n            />} open={confirmarMensaje} setOpen={setConfirmarMensaje} accion={() => {\r\n                setImageSelected(null)\r\n                setConfirmarMensaje(false)\r\n            }} titulo='Foto del producto' />\r\n            <Crear sistema={selected} setSelected={setSelected} setOpen={setOpen} open={open} carga={carga} />\r\n            <Eliminar sistema={selected2} setOpen={setOpen2} open={open2} carga={carga} />\r\n            <Filtro setOpen={setOpenFilter} open={openFilter}  />\r\n\r\n            <Grid item xs={12} md={12} style={{display:'flex',justifyContent:'space-between'}}>\r\n                <Typography variant=\"h5\" >\r\n                    Roles\r\n                </Typography>\r\n                <Button onClick={() => setOpen(true)} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\">\r\n                        Nuevo\r\n                    </Button>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={12} style={{ display: 'flex', marginTop: 10 }}>\r\n\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5,borderRadius:12,borderColor: 'rgba(0, 0, 0, 0.12)',borderWidth:1,borderStyle: 'solid'}} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Totales\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                {data.length}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(94, 53, 177)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n              \r\n            </Grid>\r\n      \r\n            <Grid item xs={12}>\r\n                <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                      \r\n                        { title: \"Nombre\", field: \"name\" },\r\n                        { title: \"Registro\", field: \"created_at\", type: \"datetime\" },\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        data\r\n                    }\r\n\r\n                    localization={LocalizationTable}\r\n\r\n                    actions={[\r\n                        {\r\n                            icon: TableIcons.Edit,\r\n                            tooltip: 'Editar',\r\n\r\n                            onClick: (event, rowData) => {\r\n                                setSelected(rowData)\r\n                                setOpen(true)\r\n                            }\r\n                        },\r\n\r\n                        {\r\n                            icon: TableIcons.Delete,\r\n                            tooltip: \"Borrar\",\r\n\r\n                            onClick: (event, rowData) => {\r\n                                setSelected2(rowData)\r\n                                setOpen2(true)\r\n                            }\r\n                        },\r\n                        {\r\n                            icon: TableIcons.Filter,\r\n                            tooltip: 'Filtrar',\r\n                            isFreeAction: true,\r\n                            onClick: (event) => setOpenFilter(true)\r\n                          }\r\n\r\n                    ]}\r\n\r\n                    options={{\r\n                        pageSize:10,\r\n                        showTitle: false,\r\n                        actionsColumnIndex: -1,\r\n                      \r\n                        maxBodyHeight: 350,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport MoveToInboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport { Grid } from '@material-ui/core';\r\nimport MaterialTable from 'material-table';\r\nimport { LocalizationTable, TableIcons } from '../../../../utils/table';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport { obtenerDesglose, registrarDesglose } from '../../../../utils/API/cajas';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog(props) {\r\n    const initializer = React.useContext(Initializer)\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [data, setData] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        if(initializer.usuario!=null){\r\n            obtenerDesglose(setData,initializer)\r\n\r\n        }\r\n    }, [initializer.usuario])\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const desglosar=()=>{\r\n        registrarDesglose({data:data},initializer,carga)\r\n    }\r\n    const carga=()=>{\r\n        obtenerDesglose(setData,initializer)\r\n        handleClose()\r\n        props.carga()\r\n     \r\n    }\r\n    return (\r\n        <div>\r\n            <Button  startIcon={<MoveToInboxIcon />} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                Cerrar caja\r\n            </Button>\r\n            <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Caja\r\n                        </Typography>\r\n                        <Button autoFocus color=\"inherit\" onClick={desglosar}>\r\n                            Cerrar caja\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                        { title: \"Nombre\", field: \"name\", editable: 'never' },\r\n                        { title: \"Valor\", field: \"amount\", editable: 'never' },\r\n                        { title: \"Cantidad\", field: \"quantity\",type:'numeric' },\r\n                    ]}\r\n                    data={\r\n                        data\r\n                    }\r\n                    localization={LocalizationTable}\r\n                    title=\"Desglose\"\r\n                    cellEditable={{\r\n                        onCellEditApproved: (newValue, oldValue, rowData, columnDef) => {\r\n                          return new Promise((resolve, reject) => {\r\n                            setTimeout(() => {\r\n                                if(newValue!==\"\"){\r\n                                    console.log(newValue)\r\n                                    console.log(newValue>=0)\r\n                                    if(newValue>=0){\r\n                                        const dataUpdate = [...data];\r\n\r\n                                        const index = rowData.tableData.id;\r\n                                       \r\n                                        dataUpdate[index].quantity = newValue;\r\n                                        setData([...dataUpdate]);\r\n                          \r\n                                    }\r\n                                }\r\n                                resolve();\r\n                              }, 1000)\r\n                          });\r\n                        }\r\n                      }}\r\n\r\n                    options={{\r\n                        pageSize:10,\r\n                        rowStyle: x => {\r\n                            if (x.tableData.id % 2) {\r\n                                return {backgroundColor: \"#f2f2f2\"}\r\n                            }\r\n                        },\r\n                        sorting:false,\r\n                        paging: false,\r\n                        actionsColumnIndex: -1,\r\n                        search:false,\r\n                        maxBodyHeight: 500,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Grid>\r\n\r\n                </Grid>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport MoveToInboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport { Grid } from '@material-ui/core';\r\nimport MaterialTable from 'material-table';\r\nimport { LocalizationTable, TableIcons } from '../../../../utils/table';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport { obtenerDesglose, obtenerDesglosePorId, registrarDesglose } from '../../../../utils/API/cajas';\r\nimport { downloadFiles } from '../../../../utils/API/reporte';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog(props) {\r\n    const initializer = React.useContext(Initializer)\r\n    const classes = useStyles();\r\n    const [data, setData] = React.useState([]);\r\n  \r\n    React.useEffect(() => {\r\n        if(initializer.usuario!=null&&props.id!=null){\r\n            obtenerDesglosePorId(props.id,setData,initializer)\r\n\r\n        }\r\n    }, [initializer.usuario,props.id])\r\n  \r\n    const handleClickOpen = () => {\r\n        props.setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.setOpen(false);\r\n        setData([])\r\n        props.setId(null)\r\n    };\r\n    const desglosar=()=>{\r\n        registrarDesglose({data:data},initializer,carga)\r\n    }\r\n    const carga=()=>{\r\n      setData([])\r\n        handleClose()\r\n        props.setId(null)\r\n        props.carga()\r\n      \r\n     \r\n    }\r\n\r\n    const imprimir=()=>{\r\n        if(props.id!=null){\r\n\r\n        }\r\n        let filter = [{ tipo: \"id_caja\", valor: props.id }]\r\n\r\n        downloadFiles('caja', initializer, filter)\r\n\r\n\r\n\r\n    }\r\n    return (\r\n \r\n            <Dialog fullScreen open={props.open} onClose={handleClose} TransitionComponent={Transition}>\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Caja\r\n                        </Typography>\r\n                        <Button autoFocus color=\"inherit\" onClick={imprimir}>\r\n                            Imprimir\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                        { title: \"Nombre\", field: \"name\", },\r\n                        { title: \"Valor\", field: \"amount\" },\r\n                        { title: \"Cantidad\", field: \"quantity\",type:'numeric'},\r\n                    ]}\r\n                    data={\r\n                        data\r\n                    }\r\n                    localization={LocalizationTable}\r\n                    title=\"Desglose\"\r\n         \r\n\r\n                    options={{\r\n                        pageSize:10,\r\n                        rowStyle: x => {\r\n                            if (x.tableData.id % 2) {\r\n                                return {backgroundColor: \"#f2f2f2\"}\r\n                            }\r\n                        },\r\n                        sorting:false,\r\n                        paging: false,\r\n                        actionsColumnIndex: -1,\r\n                        search:false,\r\n                        maxBodyHeight: 500,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Grid>\r\n\r\n                </Grid>\r\n            </Dialog>\r\n       \r\n    );\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Initializer from '../../../store/Initializer'\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\nimport MoveToInboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport { LocalizationTable, TableIcons, removeAccent } from '../../../utils/table.js'\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { estaAbiertaCaja, obtenerHistoricoCajas } from '../../../utils/API/cajas';\r\nimport Cerrar from './componentes/Cerrar'\r\nimport VerDesglose from './componentes/VerDesglose'\r\nimport { downloadFiles } from '../../../utils/API/reporte';\r\nexport default function Sistemas(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [data, setData] = React.useState([])\r\n    const [kpi1, setKpi1] = React.useState(0)\r\n    const [kpi2, setKpi2] = React.useState(0)\r\n    const [openCaja, setOpenCaja] = React.useState(false)\r\n    const [selectedDesglose, setSelectedDesglose] = React.useState(null)\r\n    const [openDesglose, setOpenDesglose] = React.useState(false)\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [open2, setOpen2] = React.useState(false)\r\n    const [selected, setSelected] = React.useState(null)\r\n    const [selected2, setSelected2] = React.useState(null)\r\n    const [openFilter, setOpenFilter] = React.useState(false)\r\n    const [cajaAbierta, setCajaAbierta] = React.useState(null)\r\n    const [confirmarMensaje, setConfirmarMensaje] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerHistoricoCajas(setData,initializer)\r\n            estaAbiertaCaja(setCajaAbierta, initializer,false)\r\n\r\n        }\r\n    }, [initializer.usuario])\r\n    const carga = () => {\r\n        obtenerHistoricoCajas(setData, initializer)\r\n        estaAbiertaCaja(setCajaAbierta, initializer,false)\r\n        setSelected(null)\r\n        setSelected2(null)\r\n \r\n       \r\n         downloadFiles('caja', initializer, [])\r\n\r\n    }\r\n    const cerrar=()=>{\r\n        \r\n    }\r\n    return (\r\n        <Grid container spacing={2}>\r\n\r\n            <VerDesglose open={openDesglose} setOpen={setOpenDesglose} id={selectedDesglose} setId={setSelectedDesglose}/>\r\n             <Grid item xs={12} md={12} style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <Typography variant=\"h5\" >\r\n                    Caja -     <span style={{color: (cajaAbierta==0?'gray':'green')}}>\r\n                    {cajaAbierta==0?'Cerrada':'Abierta'}\r\n                        </span> \r\n                </Typography> \r\n            {/*     {\r\n                     cajaAbierta==0 ?\r\n                     <Button  onClick={() =>  setOpenCaja(true)} startIcon={<OpenInBrowserIcon />} variant=\"outlined\" color=\"primary\">\r\n                        Abrir Caja\r\n                    </Button>\r\n                    \r\n                        :\r\n                      null\r\n                } */}\r\n                {\r\n                    cajaAbierta==1 ?\r\n                    <Cerrar carga={carga}/>\r\n                    :null\r\n                }\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={12} style={{ display: 'flex', marginTop: 10 }}>\r\n\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5,borderRadius:12,borderColor: 'rgba(0, 0, 0, 0.12)',borderWidth:1,borderStyle: 'solid'}} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Totales\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                {data.length}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(94, 53, 177)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n                \r\n            </Grid>\r\n      \r\n            <Grid item xs={12}>\r\n                <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                        { title: \"Número\", field: \"id\" },\r\n\r\n                        { title: \"Estado\", field: \"status\",render: rowData => (\r\n                            <span>{rowData.status=='C'?'Cerrada':'Abierta'}</span>\r\n                        ), },\r\n\r\n                        { title: \"Monto apertura\", field: \"start_amount\" },\r\n                        { title: \"Monto Final\", field: \"final_amount\" },\r\n                        { title: \"Usuario\", field: \"names\" },\r\n                        { title: \"Fecha apertura\", field: \"created_at\", type: \"datetime\" },\r\n                        { title: \"Fecha cierre\", field: \"updated_at\", type: \"datetime\" },\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        data\r\n                    }\r\n                    actions={[\r\n                        {\r\n                            icon: TableIcons.VisibilityOutlinedIcon,\r\n                            tooltip: 'Ver Desglose',\r\n\r\n                            onClick: (event, rowData) => {\r\n                                setOpenDesglose(true)\r\n                                console.log(rowData)\r\n                                setSelectedDesglose(rowData.id)\r\n\r\n                            }\r\n                        },\r\n\r\n                    ]}\r\n                    localization={LocalizationTable}\r\n\r\n                   \r\n\r\n                    options={{\r\n                        pageSize:10,\r\n                        showTitle: false,\r\n                        actionsColumnIndex: -1,\r\n                      \r\n                        maxBodyHeight: 350,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\n\r\n\r\nexport const obtenerTodos = (setData,store) => {\r\n\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  let url = ENTRYPOINT+\"cities\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n    },\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\n\r\n\r\nexport const obtenerTodosCiudades = (setData, store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  let url = ENTRYPOINT+\"cities/all\";\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n    },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        setData({data:response.data,backup:response.data});\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n      } else {\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n};\r\n\r\nexport const editarCiudad = (data,atras, store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"city/edit\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          atras()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\n   export const registrarCiudad = (data, atras,store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"city/register\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          atras()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\n  export const eliminarCiudad = (city_id,store,cargarData) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"city/delete\";\r\n    var raw = {\r\n      city_id:city_id,\r\n    };\r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      data: raw,\r\n      body: raw,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          cargarData()\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\n  ","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editar as editarBodega, registrar as registrarBodega } from '../../../../utils/API/zones';\r\nimport { obtenerTodos as obtenerCiudades } from '../../../../utils/API/ciudades';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [nombre, setNombre] = React.useState(\"\")\r\n    const [jpcode, setJpcode] = React.useState(\"\")\r\n    const [supplierCode, setSupplirCode] = React.useState(\"\")\r\n    const [serie, setSerie] = React.useState(\"\")\r\n    const [zone, setZone] = React.useState(\"\")\r\n    const [zoneData, setZoneData] = React.useState([])\r\n    const [image, setImage] = React.useState(\"\")\r\n\r\n    const [stock, setStock] = React.useState(\"\")\r\n    const [stockMin, setStockMin] = React.useState(\"\")\r\n    const [stockMax, setStockMax] = React.useState(\"\")\r\n\r\n\r\n    const [city, setCity] = React.useState(\"\")\r\n    const [cityData, setCityData] = React.useState([])\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n\r\n            obtenerCiudades(setCityData,initializer)\r\n        }\r\n  \r\n}, [initializer.usuario])\r\n    React.useEffect(()=>{\r\n        if(props.sistema!=null){\r\n            setNombre(props.sistema.name)\r\n            setCity(props.sistema.city_id)\r\n        }\r\n    },[props.sistema])\r\n    const guardar=()=>{\r\n        let data={ \r\n        'name': nombre,\r\n        'city_id': city}\r\n        if(props.sistema==null){\r\n            registrarBodega(data,initializer)\r\n            limpiar()\r\n        }else{\r\n            editarBodega(props.sistema.id,data,initializer)\r\n            limpiar()\r\n\r\n        }\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n    const limpiar=()=>{\r\n        setNombre(\"\")\r\n           \r\n\r\n        setCity(\"\")\r\n        props.setSelected(null)\r\n        props.carga()\r\n    }\r\n    const getName = (id) => {\r\n        let object = null\r\n        cityData.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n                limpiar()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Zonas</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                   {props.sistema!=null?\"Formulario de edición de zonas\": \"Formulario de creación de zonas\"}\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ width:'100%' }}\r\n                      \r\n                        label=\"Nombre\"\r\n                        value={nombre}\r\n                        onChange={(e) => setNombre(e.target.value)}\r\n\r\n                    /></Grid>\r\n                   \r\n                  \r\n                    \r\n                     <Grid item xs={12} md={12} style={{ display: 'flex' }}>\r\n                        <Autocomplete\r\n                      \r\n                            style={{ width: '100%'}}\r\n                                options={cityData}\r\n                                value={getName(city)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setCity(value.id)\r\n                                    } else {\r\n\r\n                                        setCity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una ciudad\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Guardar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { eliminar as eliminarBodega, registrarSistema } from '../../../../utils/API/zones';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const guardar=()=>{\r\n        eliminarBodega(props.sistema.id,initializer)\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => props.setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    ¿Está seguro que desea eliminar el registro?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../../store/Initializer'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar, Grid, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { editarSistema, registrarSistema } from '../../../../utils/API/sistemas';\r\nimport { obtenerTodos as obtenerUnidades } from '../../../../utils/API/unidades';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [unity, setUnity] = React.useState(\"\")\r\n    const [unityData, setUnityData] = React.useState([])\r\n\r\n    const getName=()=>{\r\n\r\n    }\r\n \r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Filtrar productos</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                Puede seleccionar filtros anidados\r\n                </DialogContentText>\r\n            \r\n                <Grid container spacing={1}>\r\n               \r\n                   \r\n                     <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una bodega\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                    \r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una categoría\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n                        <Grid item xs={12} md={12} >\r\n                        <Autocomplete\r\n                             size=\"small\"\r\n                            style={{ width: '100%'}}\r\n                                options={unityData}\r\n                                value={getName(unity)}\r\n                                getOptionLabel={(option) => option.name}\r\n                                onChange={(event, value) => {\r\n                                    if (value != null) {\r\n\r\n                                        setUnity(value.id)\r\n                                    } else {\r\n\r\n                                        setUnity('')\r\n\r\n                                    }\r\n\r\n                                }} // prints the selected value\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Seleccione una medida\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                           \r\n                        </Grid>\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => props.setOpen(false)}>\r\n                    Confirmar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Initializer from '../../../store/Initializer'\r\n\r\nimport { LocalizationTable, TableIcons, removeAccent } from '../../../utils/table.js'\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { obtenerTodos } from '../../../utils/API/zones';\r\nimport Crear from './componentes/Crear'\r\nimport Eliminar from './componentes/Eliminar'\r\nimport Filtro from './componentes/Filtro'\r\n\r\nexport default function Sistemas(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [data, setData] = React.useState([])\r\n    const [open, setOpen] = React.useState(false)\r\n    const [open2, setOpen2] = React.useState(false)\r\n    const [selected, setSelected] = React.useState(null)\r\n    const [selected2, setSelected2] = React.useState(null)\r\n    const [openFilter, setOpenFilter] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerTodos(setData, initializer)\r\n        }\r\n    }, [initializer.usuario])\r\n    const carga = () => {\r\n        obtenerTodos(setData, initializer)\r\n        setSelected(null)\r\n        setSelected2(null)\r\n    }\r\n    const total=()=>{\r\n        let tot=0\r\n        data.map((e)=>{\r\n            tot+=e.evaluaciones\r\n        })\r\n        return tot\r\n    }\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Crear sistema={selected} setSelected={setSelected} setOpen={setOpen} open={open} carga={carga} />\r\n            <Eliminar sistema={selected2} setOpen={setOpen2} open={open2} carga={carga} />\r\n            <Filtro setOpen={setOpenFilter} open={openFilter}  />\r\n\r\n            <Grid item xs={12} md={12} style={{display:'flex',justifyContent:'space-between'}}>\r\n                <Typography variant=\"h5\" >\r\n                    Zonas\r\n                </Typography>\r\n                <Button onClick={() => setOpen(true)} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\">\r\n                        Nuevo\r\n                    </Button>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={12} style={{ display: 'flex', marginTop: 10 }}>\r\n\r\n                <Card style={{ width: 300, height: 120, marginRight: 20, marginBottom: 5,borderRadius:12,borderColor: 'rgba(0, 0, 0, 0.12)',borderWidth:1,borderStyle: 'solid'}} elevation={0}>\r\n                    <CardContent>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Totales\r\n                        </Typography>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <Typography variant=\"h4\" gutterBottom>\r\n                                {data.length}\r\n                            </Typography>\r\n                            <Avatar variant=\"rounded\" style={{ backgroundColor: 'rgb(94, 53, 177)', borderRadius: 20 }} >\r\n                                <DesktopWindowsIcon />\r\n                            </Avatar>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n               \r\n            </Grid>\r\n      \r\n            <Grid item xs={12}>\r\n                <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                      \r\n                        { title: \"Nombre\", field: \"name\" },\r\n                        { title: \"Ciudad\", field: \"city\" },\r\n                        { title: \"Registro\", field: \"created_at\", type: \"datetime\" },\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        data\r\n                    }\r\n\r\n                    localization={LocalizationTable}\r\n\r\n                    actions={[\r\n                        {\r\n                            icon: TableIcons.Edit,\r\n                            tooltip: 'Editar',\r\n\r\n                            onClick: (event, rowData) => {\r\n                                setSelected(rowData)\r\n                                setOpen(true)\r\n                            }\r\n                        },\r\n                       \r\n\r\n                        {\r\n                            icon: TableIcons.Delete,\r\n                            tooltip: \"Borrar\",\r\n\r\n                            onClick: (event, rowData) => {\r\n                                setSelected2(rowData)\r\n                                setOpen2(true)\r\n                            }\r\n                        },\r\n                        {\r\n                            icon: TableIcons.Filter,\r\n                            tooltip: 'Filtrar',\r\n                            isFreeAction: true,\r\n                            onClick: (event) => setOpenFilter(true)\r\n                          }\r\n\r\n                    ]}\r\n\r\n                    options={{\r\n                        pageSize:10,\r\n                        showTitle: false,\r\n                        actionsColumnIndex: -1,\r\n                      \r\n                        maxBodyHeight: 350,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","\r\nimport React, { useContext, useState } from 'react';\r\nimport AppBar from './components/AppBar'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link, Redirect\r\n} from \"react-router-dom\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n//Containers\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport lightBlue from '@material-ui/core/colors/lightBlue';\r\nimport Initializer from './store/Initializer'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Login from './containers/main/Login'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Drawer2 from './components/Drawer2'\r\nimport purple from '@material-ui/core/colors/purple';\r\n\r\n/* import Bienvenida from './containers/main/Bienvenida'\r\n\r\n\r\n\r\nimport Sistemas from './containers/panel/Sistemas'\r\nimport Resultado from './containers/panel/Resultado';\r\nimport Settings from './containers/panel/Settings';\r\n */\r\n\r\nimport Panel from './containers/panel/Panel';\r\nimport Pedidos from './containers/Inventario/Pedidos/Index';\r\nimport Productos from './containers/Inventario/Productos/Index';\r\nimport Bodegas from './containers/Inventario/Bodegas/Index';\r\nimport Proveedores from './containers/Inventario/Proveedores/Index';\r\nimport Inventario from './containers/Inventario/Inventario/Index';\r\nimport Transferencias from './containers/Inventario/Transferencias/Index';\r\nimport Ajustes from './containers/Inventario/Ajustes/Index'\r\nimport Facturas from './containers/Inventario/Facturas/Index'\r\n import Clientes from './containers/Inventario/Clientes/Index'\r\n import Personal from './containers/Inventario/Personal/Index'\r\nimport Kardex from './containers/Inventario/Kardex/Index'\r\nimport Reporte from './containers/Inventario/Reporte/Index'\r\nimport Roles from './containers/Inventario/Roles/Index'\r\nimport Cajas from './containers/Inventario/Cajas/Index'\r\nimport Laboratorio from './containers/Inventario/Bodegas/Index'\r\nimport Zonas from './containers/Inventario/Zonas/Index'\r\n\r\nimport { indigo } from '@material-ui/core/colors';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function App(props) {\r\n  const { usuario, notificacion, mostrarNotificacion, loader, sound, playSound } = useContext(Initializer);\r\n  let history = useHistory();\r\n  const [colorP, setColorP] = useState(indigo)\r\n  const [colorS, setColorS] = useState(indigo)\r\n  const [white, setWhite] = useState(createMuiTheme({\r\n    palette: {\r\n      primary: colorP,\r\n      secondary: colorS,\r\n      type: 'light',\r\n    },\r\n\r\n  }))\r\n  const [dark, setDark] = useState(createMuiTheme({\r\n    palette: {\r\n      primary: colorP,\r\n\r\n      secondary: colorS,\r\n\r\n      type: 'dark',\r\n    },\r\n\r\n  }))\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    mostrarNotificacion(null);\r\n  };\r\n  React.useEffect(() => {\r\n    if (notificacion != null) {\r\n\r\n      setTimeout(function () { mostrarNotificacion(null) }, 3000);\r\n    }\r\n  }\r\n    , [notificacion])\r\n  var themeLight = createMuiTheme({\r\n    palette: {\r\n      primary: colorP,\r\n      secondary: colorS,\r\n      type: 'light',\r\n    },\r\n\r\n  });\r\n  var themeDark = createMuiTheme({\r\n    palette: {\r\n      primary: colorP,\r\n\r\n      secondary: colorS,\r\n\r\n      type: 'dark',\r\n    },\r\n\r\n  });\r\n  React.useEffect(() => {\r\n    setWhite(createMuiTheme({\r\n      palette: {\r\n        primary: {\r\n          main: colorP[500],\r\n        },\r\n\r\n        secondary: {\r\n          main: colorS['A400'],\r\n        },\r\n        type: 'light',\r\n      },\r\n\r\n    }))\r\n    setDark(createMuiTheme({\r\n      palette: {\r\n        primary: {\r\n          main: colorP[500],\r\n        },\r\n        secondary: {\r\n          main: colorS['A400'],\r\n        },\r\n        type: 'dark',\r\n      },\r\n\r\n    }))\r\n  }, [colorP, colorS])\r\n  let themeFinal = white\r\n  let tm = localStorage.getItem(\"theme\");\r\n\r\n\r\n  let [themeColor, setThemeColor] = useState(themeFinal);\r\n  let changeTheme = () => {\r\n    let ct = themeColor.palette.type === \"light\" ? dark : white;\r\n    setThemeColor(ct);\r\n    let color = themeColor.palette.type == \"light\" ? \"dark\" : \"light\"\r\n    localStorage.setItem(\"theme\", color);\r\n    // play(playSound,'ok')\r\n  }\r\n  let changeThemeColor = (pr, se) => {\r\n    setColorP(pr)\r\n    setColorS(se)\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={tm == \"dark\" ? dark : white}>\r\n      <React.Fragment>\r\n\r\n        <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }} open={notificacion != null} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={notificacion != null ? notificacion.type : \"success\"}>\r\n            {notificacion != null ? notificacion.message : \"\"}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        {loader != false ?\r\n          <LinearProgress style={{ zIndex: 9999 }} color=\"secondary\" />\r\n\r\n          :\r\n          null\r\n        }\r\n\r\n\r\n        <CssBaseline />\r\n\r\n        <Grid container style={{ flexGrow: 1 }}>\r\n          <Grid item xs={12}>\r\n\r\n            <Drawer2  history={history}>\r\n              <Box component=\"main\"  >\r\n\r\n                <Switch>\r\n                  <Route exact path=\"/login\" component={Login} />\r\n                  <Route exact path=\"/panel\" component={Panel} />\r\n                  <Route exact path=\"/compras\" component={Pedidos} />\r\n                  <Route exact path=\"/inventario/productos\" component={Productos} />\r\n                  <Route exact path=\"/inventario/bodegas\" component={Bodegas} />\r\n                  <Route exact path=\"/inventario/proveedores\" component={Proveedores} />\r\n                  <Route exact path=\"/inventario/inventario\" component={Inventario} />\r\n                  <Route exact path=\"/inventario/transferencias\" component={Transferencias} />\r\n                  <Route exact path=\"/inventario/ajustes\" component={Ajustes} />\r\n                  <Route exact path=\"/facturas\" component={Facturas} />\r\n                  <Route exact path=\"/laboratorios\" component={Laboratorio} />\r\n              \r\n                  <Route exact path=\"/zonas\" component={Zonas} />\r\n\r\n                  <Route exact path=\"/clientes\" component={Clientes} />\r\n                  <Route exact path=\"/personal\" component={Personal} />\r\n               \r\n                  <Route exact path=\"/inventario/kardex\" component={Kardex} />\r\n                  <Route exact path=\"/reporte\" component={Reporte} />\r\n                  <Route exact path=\"/roles\" component={Roles} />\r\n                  <Route exact path=\"/cajas\" component={Cajas} />\r\n\r\n                  \r\n                  <Route render={() => <Redirect to=\"/panel\" />} />\r\n                  \r\n                </Switch>\r\n\r\n\r\n\r\n              </Box>\r\n            </Drawer2>\r\n\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n\r\n      </React.Fragment>\r\n    </ThemeProvider>\r\n\r\n  );\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const CARGAR_USUARIO = 'CARGAR_USUARIO'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const MOSTRAR_NOTIFICACION = 'MOSTRAR_NOTIFICACION'\r\nexport const MOSTRAR_LOADER = 'MOSTRAR_LOADER'\r\nexport const PLAY_SOUND = \"PLAY_SOUND\"\r\n","import {\r\n    CARGAR_USUARIO,\r\n    LOGOUT,MOSTRAR_NOTIFICACION,MOSTRAR_LOADER,PLAY_SOUND\r\n  } from \"../actions/Actions\";\r\n  \r\n  export default (state, action) => {\r\n    switch (action.type) {\r\n        case CARGAR_USUARIO:\r\n            return { ...state, usuario: action.payload };\r\n        case LOGOUT:\r\n            return { ...state, usuario: null,};\r\n        case MOSTRAR_NOTIFICACION:\r\n            return { ...state, notificacion: action.payload ,};\r\n            case PLAY_SOUND:\r\n                return { ...state, sound: action.payload ,};\r\n                \r\n        case MOSTRAR_LOADER:\r\n            return { ...state, loader: action.payload ,};\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n  };\r\n  ","import React from 'react'\r\nimport Initializer from './Initializer'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Propager(props) {\r\n    let history = useHistory();\r\n\r\n    const {usuario,cargarUsuario}=React.useContext(Initializer)\r\n    React.useEffect(()=>{\r\n        if(usuario==null){      \r\n       \r\n            let auth = localStorage.getItem(\"auth\");\r\n            if(auth!=null){\r\n                cargarUsuario(auth)\r\n\r\n           \r\n                  \r\n               \r\n            }else{\r\n                if(history.location.pathname!=\"/login\"){\r\n                    history.push(\"/login\")\r\n                }\r\n              \r\n               \r\n            }\r\n         \r\n        }else{\r\n            window.location.href=\"/panel\"\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        props.children\r\n    )\r\n}\r\n","import React, { useReducer } from \"react\";\r\nimport Initializer from \"./Initializer\";\r\nimport Reducer from \"./reducer/Reducer\";\r\nimport Propager from \"./Propager\";\r\nimport {\r\n  CARGAR_USUARIO,\r\n  LOGOUT,MOSTRAR_NOTIFICACION,MOSTRAR_LOADER,PLAY_SOUND\r\n} from \"./actions/Actions\";\r\nconst Store = (props) => {\r\n\r\n  const initialState = {\r\n    usuario: null,notificacion:null,loader:false,sound:null\r\n  };\r\n  const [state, dispatch] = useReducer(Reducer, initialState);\r\n\r\n  //FUNCIONES\r\n  const cargarUsuario = (usuario) => {\r\n    dispatch({\r\n      type: CARGAR_USUARIO,\r\n      payload: usuario,\r\n    });\r\n  };\r\n  const mostrarNotificacion = (data) => {\r\n    dispatch({\r\n      type: MOSTRAR_NOTIFICACION,\r\n      payload: data,\r\n    });\r\n  };\r\n  const mostrarLoader = (data) => {\r\n    dispatch({\r\n      type: MOSTRAR_LOADER,\r\n      payload: data,\r\n    });\r\n  };\r\n  const logout = () => {\r\n    dispatch({\r\n      type: LOGOUT,\r\n    });\r\n  };\r\n  const playSound = (data) => {\r\n    dispatch({\r\n      type: PLAY_SOUND,\r\n      payload: data,\r\n    });\r\n  };\r\n  return (\r\n    <Initializer.Provider\r\n      value={{\r\n        sound:state.sound,\r\n        playSound,\r\n        usuario: state.usuario,\r\n        notificacion: state.notificacion,\r\n        mostrarNotificacion,\r\n        loader: state.loader,\r\n        mostrarLoader,\r\n        cargarUsuario,\r\n        logout,\r\n\r\n      }}\r\n    >\r\n     <Propager >{props.children}</Propager>\r\n    </Initializer.Provider>\r\n  );\r\n};\r\nexport default Store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n//STORE\r\nimport Store from './store/Store'\r\nReactDOM.render(\r\n  <Router>\r\n  <Store>\r\n    <App />\r\n    </Store>\r\n    </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}